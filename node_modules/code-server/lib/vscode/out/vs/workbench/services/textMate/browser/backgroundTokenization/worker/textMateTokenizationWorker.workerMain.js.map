{"version":3,"sources":["./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/nls.messages.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/nls.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/platform.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/process.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/path.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/uri.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/arraysFind.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/errors.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/arrays.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/collections.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/map.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/functional.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/assert.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/types.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/iterator.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/lifecycle.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/linkedList.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/stopwatch.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/event.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/cancellation.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/cache.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/lazy.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/strings.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/extpath.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/network.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/resources.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/textMate/common/TMScopeRegistry.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/textMate/common/TMGrammarFactory.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/uuid.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/amdX.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/symbols.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/async.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableInternal/debugName.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/equals.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableInternal/base.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableInternal/logging/logging.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableInternal/transaction.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableInternal/debugLocation.ts","vs/base/common/observableInternal/debugLocation.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableInternal/observables/baseObservable.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableInternal/observables/observableValue.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableInternal/reactions/autorunImpl.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableInternal/observables/derivedImpl.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableInternal/observables/derived.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableInternal/observables/observableFromEvent.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableInternal/utils/utils.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableInternal/logging/consoleObservableLogger.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableInternal/logging/debugger/rpc.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableInternal/logging/debugger/debuggerRpc.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableInternal/logging/debugger/utils.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableInternal/logging/debugger/devToolsLogger.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/observableInternal/index.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/core/ranges/offsetRange.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/core/position.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/core/range.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/core/ranges/lineRange.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/uint.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/model/prefixSumComputer.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/model/mirrorTextModel.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/core/misc/eolCounter.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/codiconsUtil.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/codiconsLibrary.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/codicons.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/tokenizationRegistry.ts","vs/editor/common/languages.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/languages/nullTokenize.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/model/fixedArray.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/buffer.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/encodedTokenAttributes.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/tokens/lineTokens.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/tokens/contiguousTokensEditing.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/tokens/contiguousMultilineTokens.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/tokens/contiguousMultilineTokensBuilder.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/model/textModelTokens.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/textMate/browser/tokenizationSupport/textMateTokenizationSupport.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/textMate/browser/tokenizationSupport/tokenizationSupportWithLineLimit.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/textMate/browser/backgroundTokenization/worker/textMateWorkerTokenizer.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/textMate/browser/backgroundTokenization/worker/textMateWorkerHost.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/textMate/browser/backgroundTokenization/worker/textMateTokenizationWorker.worker.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/worker/webWorker.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/worker/webWorkerBootstrap.ts","./file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/textMate/browser/backgroundTokenization/worker/textMateTokenizationWorker.workerMain.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/*\n * This module exists so that the AMD build of the monaco editor can replace this with an async loader plugin.\n * If you add new functions to this module make sure that they are also provided in the AMD build of the monaco editor.\n *\n * TODO@esm remove me once we no longer ship an AMD build.\n */\n\nexport function getNLSMessages(): string[] {\n\treturn globalThis._VSCODE_NLS_MESSAGES;\n}\n\nexport function getNLSLanguage(): string | undefined {\n\treturn globalThis._VSCODE_NLS_LANGUAGE;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// eslint-disable-next-line local/code-import-patterns\nimport { getNLSLanguage, getNLSMessages } from './nls.messages.js';\n// eslint-disable-next-line local/code-import-patterns\nexport { getNLSLanguage, getNLSMessages } from './nls.messages.js';\n\ndeclare const document: { location?: { hash?: string } } | undefined;\nconst isPseudo = getNLSLanguage() === 'pseudo' || (typeof document !== 'undefined' && document.location && typeof document.location.hash === 'string' && document.location.hash.indexOf('pseudo=true') >= 0);\n\nexport interface ILocalizeInfo {\n\tkey: string;\n\tcomment: string[];\n}\n\nexport interface ILocalizedString {\n\toriginal: string;\n\tvalue: string;\n}\n\nfunction _format(message: string, args: (string | number | boolean | undefined | null)[]): string {\n\tlet result: string;\n\n\tif (args.length === 0) {\n\t\tresult = message;\n\t} else {\n\t\tresult = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n\t\t\tconst index = rest[0];\n\t\t\tconst arg = args[index];\n\t\t\tlet result = match;\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tresult = arg;\n\t\t\t} else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n\t\t\t\tresult = String(arg);\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tif (isPseudo) {\n\t\t// FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n\t\tresult = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n\t}\n\n\treturn result;\n}\n\n/**\n * Marks a string to be localized. Returns the localized string.\n *\n * @param info The {@linkcode ILocalizeInfo} which describes the id and comments associated with the localized string.\n * @param message The string to localize\n * @param args The arguments to the string\n *\n * @note `message` can contain `{n}` notation where it is replaced by the nth value in `...args`\n * @example `localize({ key: 'sayHello', comment: ['Welcomes user'] }, 'hello {0}', name)`\n *\n * @returns string The localized string.\n */\nexport function localize(info: ILocalizeInfo, message: string, ...args: (string | number | boolean | undefined | null)[]): string;\n\n/**\n * Marks a string to be localized. Returns the localized string.\n *\n * @param key The key to use for localizing the string\n * @param message The string to localize\n * @param args The arguments to the string\n *\n * @note `message` can contain `{n}` notation where it is replaced by the nth value in `...args`\n * @example For example, `localize('sayHello', 'hello {0}', name)`\n *\n * @returns string The localized string.\n */\nexport function localize(key: string, message: string, ...args: (string | number | boolean | undefined | null)[]): string;\n\n/**\n * @skipMangle\n */\nexport function localize(data: ILocalizeInfo | string /* | number when built */, message: string /* | null when built */, ...args: (string | number | boolean | undefined | null)[]): string {\n\tif (typeof data === 'number') {\n\t\treturn _format(lookupMessage(data, message), args);\n\t}\n\treturn _format(message, args);\n}\n\n/**\n * Only used when built: Looks up the message in the global NLS table.\n * This table is being made available as a global through bootstrapping\n * depending on the target context.\n */\nfunction lookupMessage(index: number, fallback: string | null): string {\n\tconst message = getNLSMessages()?.[index];\n\tif (typeof message !== 'string') {\n\t\tif (typeof fallback === 'string') {\n\t\t\treturn fallback;\n\t\t}\n\t\tthrow new Error(`!!! NLS MISSING: ${index} !!!`);\n\t}\n\treturn message;\n}\n\n/**\n * Marks a string to be localized. Returns an {@linkcode ILocalizedString}\n * which contains the localized string and the original string.\n *\n * @param info The {@linkcode ILocalizeInfo} which describes the id and comments associated with the localized string.\n * @param message The string to localize\n * @param args The arguments to the string\n *\n * @note `message` can contain `{n}` notation where it is replaced by the nth value in `...args`\n * @example `localize2({ key: 'sayHello', comment: ['Welcomes user'] }, 'hello {0}', name)`\n *\n * @returns ILocalizedString which contains the localized string and the original string.\n */\nexport function localize2(info: ILocalizeInfo, message: string, ...args: (string | number | boolean | undefined | null)[]): ILocalizedString;\n\n/**\n * Marks a string to be localized. Returns an {@linkcode ILocalizedString}\n * which contains the localized string and the original string.\n *\n * @param key The key to use for localizing the string\n * @param message The string to localize\n * @param args The arguments to the string\n *\n * @note `message` can contain `{n}` notation where it is replaced by the nth value in `...args`\n * @example `localize('sayHello', 'hello {0}', name)`\n *\n * @returns ILocalizedString which contains the localized string and the original string.\n */\nexport function localize2(key: string, message: string, ...args: (string | number | boolean | undefined | null)[]): ILocalizedString;\n\n/**\n * @skipMangle\n */\nexport function localize2(data: ILocalizeInfo | string /* | number when built */, originalMessage: string, ...args: (string | number | boolean | undefined | null)[]): ILocalizedString {\n\tlet message: string;\n\tif (typeof data === 'number') {\n\t\tmessage = lookupMessage(data, originalMessage);\n\t} else {\n\t\tmessage = originalMessage;\n\t}\n\n\tconst value = _format(message, args);\n\n\treturn {\n\t\tvalue,\n\t\toriginal: originalMessage === message ? value : _format(originalMessage, args)\n\t};\n}\n\nexport interface INLSLanguagePackConfiguration {\n\n\t/**\n\t * The path to the translations config file that contains pointers to\n\t * all message bundles for `main` and extensions.\n\t */\n\treadonly translationsConfigFile: string;\n\n\t/**\n\t * The path to the file containing the translations for this language\n\t * pack as flat string array.\n\t */\n\treadonly messagesFile: string;\n\n\t/**\n\t * The path to the file that can be used to signal a corrupt language\n\t * pack, for example when reading the `messagesFile` fails. This will\n\t * instruct the application to re-create the cache on next startup.\n\t */\n\treadonly corruptMarkerFile: string;\n}\n\nexport interface INLSConfiguration {\n\n\t/**\n\t * Locale as defined in `argv.json` or `app.getLocale()`.\n\t */\n\treadonly userLocale: string;\n\n\t/**\n\t * Locale as defined by the OS (e.g. `app.getPreferredSystemLanguages()`).\n\t */\n\treadonly osLocale: string;\n\n\t/**\n\t * The actual language of the UI that ends up being used considering `userLocale`\n\t * and `osLocale`.\n\t */\n\treadonly resolvedLanguage: string;\n\n\t/**\n\t * Defined if a language pack is used that is not the\n\t * default english language pack. This requires a language\n\t * pack to be installed as extension.\n\t */\n\treadonly languagePack?: INLSLanguagePackConfiguration;\n\n\t/**\n\t * The path to the file containing the default english messages\n\t * as flat string array. The file is only present in built\n\t * versions of the application.\n\t */\n\treadonly defaultMessagesFile: string;\n\n\t/**\n\t * Below properties are deprecated and only there to continue support\n\t * for `vscode-nls` module that depends on them.\n\t * Refs https://github.com/microsoft/vscode-nls/blob/main/src/node/main.ts#L36-L46\n\t */\n\t/** @deprecated */\n\treadonly locale: string;\n\t/** @deprecated */\n\treadonly availableLanguages: Record<string, string>;\n\t/** @deprecated */\n\treadonly _languagePackSupport?: boolean;\n\t/** @deprecated */\n\treadonly _languagePackId?: string;\n\t/** @deprecated */\n\treadonly _translationsConfigFile?: string;\n\t/** @deprecated */\n\treadonly _cacheRoot?: string;\n\t/** @deprecated */\n\treadonly _resolvedLanguagePackCoreLocation?: string;\n\t/** @deprecated */\n\treadonly _corruptedFile?: string;\n}\n\nexport interface ILanguagePack {\n\treadonly hash: string;\n\treadonly label: string | undefined;\n\treadonly extensions: {\n\t\treadonly extensionIdentifier: { readonly id: string; readonly uuid?: string };\n\t\treadonly version: string;\n\t}[];\n\treadonly translations: Record<string, string | undefined>;\n}\n\nexport type ILanguagePacks = Record<string, ILanguagePack | undefined>;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../nls.js';\n\nexport const LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _platformLocale: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\nexport interface IProcessEnvironment {\n\t[key: string]: string | undefined;\n}\n\n/**\n * This interface is intentionally not identical to node.js\n * process because it also works in sandboxed environments\n * where the process object is implemented differently. We\n * define the properties here that we need for `platform`\n * to work and nothing else.\n */\nexport interface INodeProcess {\n\tplatform: string;\n\tarch: string;\n\tenv: IProcessEnvironment;\n\tversions?: {\n\t\tnode?: string;\n\t\telectron?: string;\n\t\tchrome?: string;\n\t};\n\ttype?: string;\n\tcwd: () => string;\n}\n\ndeclare const process: INodeProcess;\n\nconst $globalThis: any = globalThis;\n\nlet nodeProcess: INodeProcess | undefined = undefined;\nif (typeof $globalThis.vscode !== 'undefined' && typeof $globalThis.vscode.process !== 'undefined') {\n\t// Native environment (sandboxed)\n\tnodeProcess = $globalThis.vscode.process;\n} else if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n\t// Native environment (non-sandboxed)\n\tnodeProcess = process;\n}\n\nconst isElectronProcess = typeof nodeProcess?.versions?.electron === 'string';\nconst isElectronRenderer = isElectronProcess && nodeProcess?.type === 'renderer';\n\ninterface INavigator {\n\tuserAgent: string;\n\tmaxTouchPoints?: number;\n\tlanguage: string;\n}\ndeclare const navigator: INavigator;\n\n// Native environment\nif (typeof nodeProcess === 'object') {\n\t_isWindows = (nodeProcess.platform === 'win32');\n\t_isMacintosh = (nodeProcess.platform === 'darwin');\n\t_isLinux = (nodeProcess.platform === 'linux');\n\t_isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n\t_isElectron = isElectronProcess;\n\t_isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'] || !!nodeProcess.env['GITHUB_WORKSPACE'];\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: nls.INLSConfiguration = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.userLocale;\n\t\t\t_platformLocale = nlsConfig.osLocale;\n\t\t\t_language = nlsConfig.resolvedLanguage || LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig.languagePack?.translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\n// Web environment\nelse if (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isMobile = _userAgent?.indexOf('Mobi') >= 0;\n\t_isWeb = true;\n\t_language = nls.getNLSLanguage() || LANGUAGE_DEFAULT;\n\t_locale = navigator.language.toLowerCase();\n\t_platformLocale = _locale;\n}\n\n// Unknown environment\nelse {\n\tconsole.error('Unable to resolve platform.');\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport type PlatformName = 'Web' | 'Windows' | 'Mac' | 'Linux';\n\nexport function PlatformToString(platform: Platform): PlatformName {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isLinuxSnap = _isLinuxSnap;\nexport const isNative = _isNative;\nexport const isElectron = _isElectron;\nexport const isWeb = _isWeb;\nexport const isWebWorker = (_isWeb && typeof $globalThis.importScripts === 'function');\nexport const webWorkerOrigin = isWebWorker ? $globalThis.origin : undefined;\nexport const isIOS = _isIOS;\nexport const isMobile = _isMobile;\n/**\n * Whether we run inside a CI environment, such as\n * GH actions or Azure Pipelines.\n */\nexport const isCI = _isCI;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese or de for German)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * Desktop: The OS locale or the locale specified by --locale or `argv.json`.\n * Web: matches `platformLocale`.\n *\n * The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * This will always be set to the OS/browser's locale regardless of\n * what was specified otherwise. The format of the string is all\n * lower case (e.g. zh-tw for Traditional Chinese). The UI is not\n * necessarily shown in the provided locale.\n */\nexport const platformLocale = _platformLocale;\n\n/**\n * The translations that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nexport const setTimeout0IsFaster = (typeof $globalThis.postMessage === 'function' && !$globalThis.importScripts);\n\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n\tif (setTimeout0IsFaster) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tconst pending: IQueueElement[] = [];\n\n\t\t$globalThis.addEventListener('message', (e: any) => {\n\t\t\tif (e.data && e.data.vscodeScheduleAsyncWork) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeScheduleAsyncWork) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\t$globalThis.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n\t\t};\n\t}\n\treturn (callback: () => void) => setTimeout(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n\nexport const isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nexport const isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nexport const isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nexport const isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nexport const isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n\nexport function isBigSurOrNewer(osVersion: string): boolean {\n\treturn parseFloat(osVersion) >= 20;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { INodeProcess, isMacintosh, isWindows } from './platform.js';\n\nlet safeProcess: Omit<INodeProcess, 'arch'> & { arch: string | undefined };\ndeclare const process: INodeProcess;\n\n// Native sandbox environment\nconst vscodeGlobal = (globalThis as any).vscode;\nif (typeof vscodeGlobal !== 'undefined' && typeof vscodeGlobal.process !== 'undefined') {\n\tconst sandboxProcess: INodeProcess = vscodeGlobal.process;\n\tsafeProcess = {\n\t\tget platform() { return sandboxProcess.platform; },\n\t\tget arch() { return sandboxProcess.arch; },\n\t\tget env() { return sandboxProcess.env; },\n\t\tcwd() { return sandboxProcess.cwd(); }\n\t};\n}\n\n// Native node.js environment\nelse if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n\tsafeProcess = {\n\t\tget platform() { return process.platform; },\n\t\tget arch() { return process.arch; },\n\t\tget env() { return process.env; },\n\t\tcwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n\t};\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tget arch() { return undefined; /* arch is undefined in web */ },\n\n\t\t// Unsupported\n\t\tget env() { return {}; },\n\t\tcwd() { return '/'; }\n\t};\n}\n\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n *\n * @skipMangle\n */\nexport const cwd = safeProcess.cwd;\n\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n\n/**\n * Provides safe access to the `arch` method in node.js, sandboxed or web\n * environments.\n * Note: `arch` is `undefined` in web\n */\nexport const arch = safeProcess.arch;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/commits/v22.15.0/lib/path.js\n// Excluding: the change that adds primordials\n// (https://github.com/nodejs/node/commit/187a862d221dec42fa9a5c4214e7034d9092792f and others)\n// Excluding: the change that adds glob matching\n// (https://github.com/nodejs/node/commit/57b8b8e18e5e2007114c63b71bf0baedc01936a6)\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from './process.js';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: unknown) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateObject(pathObject: object, name: string) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType(name, 'Object', pathObject);\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nconst platformIsWin32 = (process.platform === 'win32');\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n\t\t(code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction formatExt(ext: string): string {\n\treturn ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tvalidateObject(pathObject, 'pathObject');\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${formatExt(pathObject.ext)}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, suffix?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, `paths[${i}]`);\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = process.env[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\t(path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (!isAbsolute && device === undefined && path.includes(':')) {\n\t\t\t// If the original path was not absolute and if we have not been able to\n\t\t\t// resolve it relative to a particular device, we need to ensure that the\n\t\t\t// `tail` has not become something that Windows might interpret as an\n\t\t\t// absolute path. See CVE-2024-36139.\n\t\t\tif (tail.length >= 2 &&\n\t\t\t\tisWindowsDeviceRoot(tail.charCodeAt(0)) &&\n\t\t\t\ttail.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\treturn `.\\\\${tail}`;\n\t\t\t}\n\t\t\tlet index = path.indexOf(':');\n\t\t\tdo {\n\t\t\t\tif (index === len - 1 || isPathSeparator(path.charCodeAt(index + 1))) {\n\t\t\t\t\treturn `.\\\\${tail}`;\n\t\t\t\t}\n\t\t\t} while ((index = path.indexOf(':', index + 1)) !== -1);\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\t(len > 2 &&\n\t\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\t\tisPathSeparator(path.charCodeAt(2)));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for a UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at a UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as a UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (fromOrig.length !== from.length || toOrig.length !== to.length) {\n\t\t\tconst fromSplit = fromOrig.split('\\\\');\n\t\t\tconst toSplit = toOrig.split('\\\\');\n\t\t\tif (fromSplit[fromSplit.length - 1] === '') {\n\t\t\t\tfromSplit.pop();\n\t\t\t}\n\t\t\tif (toSplit[toSplit.length - 1] === '') {\n\t\t\t\ttoSplit.pop();\n\t\t\t}\n\n\t\t\tconst fromLen = fromSplit.length;\n\t\t\tconst toLen = toSplit.length;\n\t\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\n\t\t\tlet i;\n\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\tif (fromSplit[i].toLowerCase() !== toSplit[i].toLowerCase()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i === 0) {\n\t\t\t\treturn toOrig;\n\t\t\t} else if (i === length) {\n\t\t\t\tif (toLen > length) {\n\t\t\t\t\treturn toSplit.slice(i).join('\\\\');\n\t\t\t\t}\n\t\t\t\tif (fromLen > length) {\n\t\t\t\t\treturn '..\\\\'.repeat(fromLen - 1 - i) + '..';\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn '..\\\\'.repeat(fromLen - i) + toSplit.slice(i).join('\\\\');\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string' || path.length === 0) {\n\t\t\treturn path;\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn resolvedPath;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, suffix?: string): string {\n\t\tif (suffix !== undefined) {\n\t\t\tvalidateString(suffix, 'suffix');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n\t\t\tif (suffix === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = suffix.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === suffix.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nconst posixCwd = (() => {\n\tif (platformIsWin32) {\n\t\t// Converts Windows' backslash path separators to POSIX forward slashes\n\t\t// and truncates any drive indicator\n\t\tconst regexp = /\\\\/g;\n\t\treturn () => {\n\t\t\tconst cwd = process.cwd().replace(regexp, '/');\n\t\t\treturn cwd.slice(cwd.indexOf('/'));\n\t\t};\n\t}\n\n\t// We're already on POSIX, no need for any transformations\n\treturn () => process.cwd();\n})();\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= 0 && !resolvedAbsolute; i--) {\n\t\t\tconst path = pathSegments[i];\n\t\t\tvalidateString(path, `paths[${i}]`);\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (!resolvedAbsolute) {\n\t\t\tconst cwd = posixCwd();\n\t\t\tresolvedPath = `${cwd}/${resolvedPath}`;\n\t\t\tresolvedAbsolute =\n\t\t\t\tcwd.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst path = [];\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tpath.push(arg);\n\t\t\t}\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\treturn posix.normalize(path.join('/'));\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, suffix?: string): string {\n\t\tif (suffix !== undefined) {\n\t\t\tvalidateString(suffix, 'suffix');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n\t\t\tif (suffix === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = suffix.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === suffix.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst char = path[i];\n\t\t\tif (char === '/') {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (char === '.') {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (platformIsWin32 ? win32.normalize : posix.normalize);\nexport const isAbsolute = (platformIsWin32 ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (platformIsWin32 ? win32.join : posix.join);\nexport const resolve = (platformIsWin32 ? win32.resolve : posix.resolve);\nexport const relative = (platformIsWin32 ? win32.relative : posix.relative);\nexport const dirname = (platformIsWin32 ? win32.dirname : posix.dirname);\nexport const basename = (platformIsWin32 ? win32.basename : posix.basename);\nexport const extname = (platformIsWin32 ? win32.extname : posix.extname);\nexport const format = (platformIsWin32 ? win32.format : posix.format);\nexport const parse = (platformIsWin32 ? win32.parse : posix.parse);\nexport const toNamespacedPath = (platformIsWin32 ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (platformIsWin32 ? win32.sep : posix.sep);\nexport const delimiter = (platformIsWin32 ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from './charCode.js';\nimport { MarshalledId } from './marshallingIds.js';\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: unknown): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'string'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.example.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.example.com' part of 'http://www.example.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\t/**\n\t * Creates new URI from uri components.\n\t *\n\t * Unless `strict` is `true` the scheme is defaults to be `file`. This function performs\n\t * validation and should be used for untrusted uri components retrieved from storage,\n\t * user input, command arguments etc\n\t */\n\tstatic from(components: UriComponents, strict?: boolean): URI {\n\t\tconst result = new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t\tstrict\n\t\t);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPath on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\t/**\n\t * A helper function to revive URIs.\n\t *\n\t * **Note** that this function should only be used when receiving URI#toJSON generated data\n\t * and that it doesn't do any validation. Use {@link URI.from} when received \"untrusted\"\n\t * uri components such as command arguments or data from storage.\n\t *\n\t * @param data The URI components or URI to revive.\n\t * @returns The revived URI or undefined or null.\n\t */\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external ?? null;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath ?? null : null;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t[Symbol.for('debug.description')]() {\n\t\treturn `URI(${this.toString()})`;\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority?: string;\n\tpath?: string;\n\tquery?: string;\n\tfragment?: string;\n}\n\nexport function isUriComponents(thing: unknown): thing is UriComponents {\n\tif (!thing || typeof thing !== 'object') {\n\t\treturn false;\n\t}\n\treturn typeof (<UriComponents>thing).scheme === 'string'\n\t\t&& (typeof (<UriComponents>thing).authority === 'string' || typeof (<UriComponents>thing).authority === 'undefined')\n\t\t&& (typeof (<UriComponents>thing).path === 'string' || typeof (<UriComponents>thing).path === 'undefined')\n\t\t&& (typeof (<UriComponents>thing).query === 'string' || typeof (<UriComponents>thing).query === 'undefined')\n\t\t&& (typeof (<UriComponents>thing).fragment === 'string' || typeof (<UriComponents>thing).fragment === 'undefined');\n}\n\ninterface UriState extends UriComponents {\n\t$mid: MarshalledId.Uri;\n\texternal?: string;\n\tfsPath?: string;\n\t_sep?: 1;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\toverride get fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\toverride toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\toverride toJSON(): UriComponents {\n\t\t// eslint-disable-next-line local/code-no-dangerous-type-assertions\n\t\tconst res = <UriState>{\n\t\t\t$mid: MarshalledId.Uri\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t//--- uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\t// TODO\n\t\t// this isn't correct and can violate the UriComponents contract but\n\t\t// this is part of the vscode.Uri API and we shouldn't change how that\n\t\t// works anymore\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, isPath: boolean, isAuthority: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (isPath && code === CharCode.Slash)\n\t\t\t|| (isAuthority && code === CharCode.OpenSquareBracket)\n\t\t\t|| (isAuthority && code === CharCode.CloseSquareBracket)\n\t\t\t|| (isAuthority && code === CharCode.Colon)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.lastIndexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false, false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false, true);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.lastIndexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false, true);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false, true);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true, false);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Comparator } from './arrays.js';\n\nexport function findLast<T, R extends T>(array: readonly T[], predicate: (item: T) => item is R, fromIndex?: number): R | undefined;\nexport function findLast<T>(array: readonly T[], predicate: (item: T) => unknown, fromIndex?: number): T | undefined;\nexport function findLast<T>(array: readonly T[], predicate: (item: T) => unknown, fromIndex = array.length - 1): T | undefined {\n\tconst idx = findLastIdx(array, predicate, fromIndex);\n\tif (idx === -1) {\n\t\treturn undefined;\n\t}\n\treturn array[idx];\n}\n\nexport function findLastIdx<T>(array: readonly T[], predicate: (item: T) => unknown, fromIndex = array.length - 1): number {\n\tfor (let i = fromIndex; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (predicate(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n * Finds the last item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n *\n * @returns `undefined` if no item matches, otherwise the last item that matches the predicate.\n */\nexport function findLastMonotonous<T>(array: readonly T[], predicate: (item: T) => boolean): T | undefined {\n\tconst idx = findLastIdxMonotonous(array, predicate);\n\treturn idx === -1 ? undefined : array[idx];\n}\n\n/**\n * Finds the last item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n *\n * @returns `startIdx - 1` if predicate is false for all items, otherwise the index of the last item that matches the predicate.\n */\nexport function findLastIdxMonotonous<T>(array: readonly T[], predicate: (item: T) => boolean, startIdx = 0, endIdxEx = array.length): number {\n\tlet i = startIdx;\n\tlet j = endIdxEx;\n\twhile (i < j) {\n\t\tconst k = Math.floor((i + j) / 2);\n\t\tif (predicate(array[k])) {\n\t\t\ti = k + 1;\n\t\t} else {\n\t\t\tj = k;\n\t\t}\n\t}\n\treturn i - 1;\n}\n\n/**\n * Finds the first item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[false, ..., false, true, ..., true]`!\n *\n * @returns `undefined` if no item matches, otherwise the first item that matches the predicate.\n */\nexport function findFirstMonotonous<T>(array: readonly T[], predicate: (item: T) => boolean): T | undefined {\n\tconst idx = findFirstIdxMonotonousOrArrLen(array, predicate);\n\treturn idx === array.length ? undefined : array[idx];\n}\n\n/**\n * Finds the first item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[false, ..., false, true, ..., true]`!\n *\n * @returns `endIdxEx` if predicate is false for all items, otherwise the index of the first item that matches the predicate.\n */\nexport function findFirstIdxMonotonousOrArrLen<T>(array: readonly T[], predicate: (item: T) => boolean, startIdx = 0, endIdxEx = array.length): number {\n\tlet i = startIdx;\n\tlet j = endIdxEx;\n\twhile (i < j) {\n\t\tconst k = Math.floor((i + j) / 2);\n\t\tif (predicate(array[k])) {\n\t\t\tj = k;\n\t\t} else {\n\t\t\ti = k + 1;\n\t\t}\n\t}\n\treturn i;\n}\n\nexport function findFirstIdxMonotonous<T>(array: readonly T[], predicate: (item: T) => boolean, startIdx = 0, endIdxEx = array.length): number {\n\tconst idx = findFirstIdxMonotonousOrArrLen(array, predicate, startIdx, endIdxEx);\n\treturn idx === array.length ? -1 : idx;\n}\n\n/**\n * Use this when\n * * You have a sorted array\n * * You query this array with a monotonous predicate to find the last item that has a certain property.\n * * You query this array multiple times with monotonous predicates that get weaker and weaker.\n */\nexport class MonotonousArray<T> {\n\tpublic static assertInvariants = false;\n\n\tprivate _findLastMonotonousLastIdx = 0;\n\tprivate _prevFindLastPredicate: ((item: T) => boolean) | undefined;\n\n\tconstructor(private readonly _array: readonly T[]) {\n\t}\n\n\t/**\n\t * The predicate must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n\t * For subsequent calls, current predicate must be weaker than (or equal to) the previous predicate, i.e. more entries must be `true`.\n\t */\n\tfindLastMonotonous(predicate: (item: T) => boolean): T | undefined {\n\t\tif (MonotonousArray.assertInvariants) {\n\t\t\tif (this._prevFindLastPredicate) {\n\t\t\t\tfor (const item of this._array) {\n\t\t\t\t\tif (this._prevFindLastPredicate(item) && !predicate(item)) {\n\t\t\t\t\t\tthrow new Error('MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._prevFindLastPredicate = predicate;\n\t\t}\n\n\t\tconst idx = findLastIdxMonotonous(this._array, predicate, this._findLastMonotonousLastIdx);\n\t\tthis._findLastMonotonousLastIdx = idx + 1;\n\t\treturn idx === -1 ? undefined : this._array[idx];\n\t}\n}\n\n/**\n * Returns the first item that is equal to or greater than every other item.\n*/\nexport function findFirstMax<T>(array: readonly T[], comparator: Comparator<T>): T | undefined {\n\tif (array.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tlet max = array[0];\n\tfor (let i = 1; i < array.length; i++) {\n\t\tconst item = array[i];\n\t\tif (comparator(item, max) > 0) {\n\t\t\tmax = item;\n\t\t}\n\t}\n\treturn max;\n}\n\n/**\n * Returns the last item that is equal to or greater than every other item.\n*/\nexport function findLastMax<T>(array: readonly T[], comparator: Comparator<T>): T | undefined {\n\tif (array.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tlet max = array[0];\n\tfor (let i = 1; i < array.length; i++) {\n\t\tconst item = array[i];\n\t\tif (comparator(item, max) >= 0) {\n\t\t\tmax = item;\n\t\t}\n\t}\n\treturn max;\n}\n\n/**\n * Returns the first item that is equal to or less than every other item.\n*/\nexport function findFirstMin<T>(array: readonly T[], comparator: Comparator<T>): T | undefined {\n\treturn findFirstMax(array, (a, b) => -comparator(a, b));\n}\n\nexport function findMaxIdx<T>(array: readonly T[], comparator: Comparator<T>): number {\n\tif (array.length === 0) {\n\t\treturn -1;\n\t}\n\n\tlet maxIdx = 0;\n\tfor (let i = 1; i < array.length; i++) {\n\t\tconst item = array[i];\n\t\tif (comparator(item, array[maxIdx]) > 0) {\n\t\t\tmaxIdx = i;\n\t\t}\n\t}\n\treturn maxIdx;\n}\n\n/**\n * Returns the first mapped value of the array which is not undefined.\n */\nexport function mapFindFirst<T, R>(items: Iterable<T>, mapFn: (value: T) => R | undefined): R | undefined {\n\tfor (const value of items) {\n\t\tconst mapped = mapFn(value);\n\t\tif (mapped !== undefined) {\n\t\t\treturn mapped;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tif (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n\t\t\t\t\t\tthrow new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack);\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\n/** @skipMangle */\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\n/**\n * Returns if the error is a SIGPIPE error. SIGPIPE errors should generally be\n * logged at most once, to avoid a loop.\n *\n * @see https://github.com/microsoft/vscode-remote-release/issues/6481\n */\nexport function isSigPipeError(e: unknown): e is Error {\n\tif (!e || typeof e !== 'object') {\n\t\treturn false;\n\t}\n\n\tconst cast = e as Record<string, string | undefined>;\n\treturn cast.code === 'EPIPE' && cast.syscall?.toUpperCase() === 'WRITE';\n}\n\n/**\n * This function should only be called with errors that indicate a bug in the product.\n * E.g. buggy extensions/invalid user-input/network issues should not be able to trigger this code path.\n * If they are, this indicates there is also a bug in the product.\n*/\nexport function onBugIndicatingError(e: any): undefined {\n\terrorHandler.onUnexpectedError(e);\n\treturn undefined;\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isCancellationError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isCancellationError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n\treadonly noTelemetry: boolean;\n\treadonly code?: string;\n\treadonly cause?: SerializedError;\n}\n\ntype ErrorWithCode = Error & {\n\tcode: string | undefined;\n};\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tconst { name, message, cause } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack,\n\t\t\tnoTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error),\n\t\t\tcause: cause ? transformErrorForSerialization(cause) : undefined,\n\t\t\tcode: (<ErrorWithCode>error).code\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\nexport function transformErrorFromSerialization(data: SerializedError): Error {\n\tlet error: Error;\n\tif (data.noTelemetry) {\n\t\terror = new ErrorNoTelemetry();\n\t} else {\n\t\terror = new Error();\n\t\terror.name = data.name;\n\t}\n\terror.message = data.message;\n\terror.stack = data.stack;\n\tif (data.code) {\n\t\t(<ErrorWithCode>error).code = data.code;\n\t}\n\tif (data.cause) {\n\t\terror.cause = transformErrorFromSerialization(data.cause);\n\t}\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): unknown;\n\tgetTypeName(): string | null;\n\tgetFunction(): Function | undefined;\n\tgetFunctionName(): string | null;\n\tgetMethodName(): string | null;\n\tgetFileName(): string | null;\n\tgetLineNumber(): number | null;\n\tgetColumnNumber(): number | null;\n\tgetEvalOrigin(): string | undefined;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nexport const canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isCancellationError(error: any): boolean {\n\tif (error instanceof CancellationError) {\n\t\treturn true;\n\t}\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n\tconstructor() {\n\t\tsuper(canceledName);\n\t\tthis.name = this.message;\n\t}\n}\n\nexport class PendingMigrationError extends Error {\n\n\tprivate static readonly _name = 'PendingMigrationError';\n\n\tstatic is(error: unknown): error is PendingMigrationError {\n\t\treturn error instanceof PendingMigrationError || (error instanceof Error && error.name === PendingMigrationError._name);\n\t}\n\n\tconstructor(message: string) {\n\t\tsuper(message);\n\t\tthis.name = PendingMigrationError._name;\n\t}\n}\n\n/**\n * @deprecated use {@link CancellationError `new CancellationError()`} instead\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport class ReadonlyError extends TypeError {\n\tconstructor(name?: string) {\n\t\tsuper(name ? `${name} is read-only and cannot be changed` : 'Cannot change read-only property');\n\t}\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class ExpectedError extends Error {\n\treadonly isExpected = true;\n}\n\n/**\n * Error that when thrown won't be logged in telemetry as an unhandled error.\n */\nexport class ErrorNoTelemetry extends Error {\n\toverride readonly name: string;\n\n\tconstructor(msg?: string) {\n\t\tsuper(msg);\n\t\tthis.name = 'CodeExpectedError';\n\t}\n\n\tpublic static fromError(err: Error): ErrorNoTelemetry {\n\t\tif (err instanceof ErrorNoTelemetry) {\n\t\t\treturn err;\n\t\t}\n\n\t\tconst result = new ErrorNoTelemetry();\n\t\tresult.message = err.message;\n\t\tresult.stack = err.stack;\n\t\treturn result;\n\t}\n\n\tpublic static isErrorNoTelemetry(err: Error): err is ErrorNoTelemetry {\n\t\treturn err.name === 'CodeExpectedError';\n\t}\n}\n\n/**\n * This error indicates a bug.\n * Do not throw this for invalid user input.\n * Only catch this error to recover gracefully from bugs.\n */\nexport class BugIndicatingError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message || 'An unexpected bug occurred.');\n\t\tObject.setPrototypeOf(this, BugIndicatingError.prototype);\n\n\t\t// Because we know for sure only buggy code throws this,\n\t\t// we definitely want to break here and fix the bug.\n\t\t// debugger;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { findFirstIdxMonotonousOrArrLen } from './arraysFind.js';\nimport { CancellationToken } from './cancellation.js';\nimport { CancellationError } from './errors.js';\nimport { ISplice } from './sequence.js';\n\n/**\n * Returns the last entry and the initial N-1 entries of the array, as a tuple of [rest, last].\n *\n * The array must have at least one element.\n *\n * @param arr The input array\n * @returns A tuple of [rest, last] where rest is all but the last element and last is the last element\n * @throws Error if the array is empty\n */\nexport function tail<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Remove the element at `index` by replacing it with the last element. This is faster than `splice`\n * but changes the order of the array\n */\nexport function removeFastWithoutKeepingOrder<T>(array: T[], index: number) {\n\tconst last = array.length - 1;\n\tif (index < last) {\n\t\tarray[index] = array[last];\n\t}\n\tarray.pop();\n}\n\n/**\n * Performs a binary search algorithm over a sorted array.\n *\n * @param array The array being searched.\n * @param key The value we search for.\n * @param comparator A function that takes two array elements and returns zero\n *   if they are equal, a negative number if the first element precedes the\n *   second one in the sorting order, or a positive number if the second element\n *   precedes the first one.\n * @return See {@link binarySearch2}\n */\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\treturn binarySearch2(array.length, i => comparator(array[i], key));\n}\n\n/**\n * Performs a binary search algorithm over a sorted collection. Useful for cases\n * when we need to perform a binary search over something that isn't actually an\n * array, and converting data to an array would defeat the use of binary search\n * in the first place.\n *\n * @param length The collection length.\n * @param compareToKey A function that takes an index of an element in the\n *   collection and returns zero if the value at this index is equal to the\n *   search key, a negative number if the value precedes the search key in the\n *   sorting order, or a positive number if the search key precedes the value.\n * @return A non-negative index of an element, if found. If not found, the\n *   result is -(n+1) (or ~n, using bitwise notation), where n is the index\n *   where the key should be inserted to maintain the sorting order.\n */\nexport function binarySearch2(length: number, compareToKey: (index: number) => number): number {\n\tlet low = 0,\n\t\thigh = length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = compareToKey(mid);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n\nexport function quickSelect<T>(nth: number, data: T[], compare: Compare<T>): T {\n\n\tnth = nth | 0;\n\n\tif (nth >= data.length) {\n\t\tthrow new TypeError('invalid index');\n\t}\n\n\tconst pivotValue = data[Math.floor(data.length * Math.random())];\n\tconst lower: T[] = [];\n\tconst higher: T[] = [];\n\tconst pivots: T[] = [];\n\n\tfor (const value of data) {\n\t\tconst val = compare(value, pivotValue);\n\t\tif (val < 0) {\n\t\t\tlower.push(value);\n\t\t} else if (val > 0) {\n\t\t\thigher.push(value);\n\t\t} else {\n\t\t\tpivots.push(value);\n\t\t}\n\t}\n\n\tif (nth < lower.length) {\n\t\treturn quickSelect(nth, lower, compare);\n\t} else if (nth < lower.length + pivots.length) {\n\t\treturn pivots[0];\n\t} else {\n\t\treturn quickSelect(nth - (lower.length + pivots.length), higher, compare);\n\t}\n}\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of data.slice(0).sort(compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n * Splits the given items into a list of (non-empty) groups.\n * `shouldBeGrouped` is used to decide if two consecutive items should be in the same group.\n * The order of the items is preserved.\n */\nexport function* groupAdjacentBy<T>(items: Iterable<T>, shouldBeGrouped: (item1: T, item2: T) => boolean): Iterable<T[]> {\n\tlet currentGroup: T[] | undefined;\n\tlet last: T | undefined;\n\tfor (const item of items) {\n\t\tif (last !== undefined && shouldBeGrouped(last, item)) {\n\t\t\tcurrentGroup!.push(item);\n\t\t} else {\n\t\t\tif (currentGroup) {\n\t\t\t\tyield currentGroup;\n\t\t\t}\n\t\t\tcurrentGroup = [item];\n\t\t}\n\t\tlast = item;\n\t}\n\tif (currentGroup) {\n\t\tyield currentGroup;\n\t}\n}\n\nexport function forEachAdjacent<T>(arr: T[], f: (item1: T | undefined, item2: T | undefined) => void): void {\n\tfor (let i = 0; i <= arr.length; i++) {\n\t\tf(i === 0 ? undefined : arr[i - 1], i === arr.length ? undefined : arr[i]);\n\t}\n}\n\nexport function forEachWithNeighbors<T>(arr: T[], f: (before: T | undefined, element: T, after: T | undefined) => void): void {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tf(i === 0 ? undefined : arr[i - 1], arr[i], i + 1 === arr.length ? undefined : arr[i + 1]);\n\t}\n}\n\nexport function concatArrays<TArr extends any[]>(...arrays: TArr): TArr[number][number][] {\n\treturn ([] as any[]).concat(...arrays);\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\treadonly toInsert: T[];\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[]; added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elements from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elements from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // any other delay function would starve I/O\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstIdxMonotonousOrArrLen(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn array.filter((e): e is T => !!e);\n}\n\n/**\n * Remove all falsy values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): asserts array is Array<T> {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * @deprecated Use `Array.copyWithin` instead\n */\nexport function move(array: unknown[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: unknown): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equality by returning an alternate value for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn: (value: T) => unknown = value => value): T[] {\n\tconst seen = new Set<any>();\n\n\treturn array.filter(element => {\n\t\tconst key = keyFn!(element);\n\t\tif (seen.has(key)) {\n\t\t\treturn false;\n\t\t}\n\t\tseen.add(key);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T, R>(keyFn: (t: T) => R): (t: T) => boolean {\n\tconst seen = new Set<R>();\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen.has(key)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(key);\n\t\treturn true;\n\t};\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper: (t: T) => R): { [key: string]: R };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper?: (t: T) => R): { [key: string]: R } {\n\treturn array.reduce((r, t) => {\n\t\tr[indexer(t)] = mapper ? mapper(t) : t;\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n *\n * @deprecated In almost all cases, use a `Set<T>` instead.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => remove(array, element);\n}\n\n/**\n * Removes an element from an array if it can be found.\n *\n * @deprecated In almost all cases, use a `Set<T>` instead.\n */\nexport function remove<T>(array: T[], element: T): T | undefined {\n\tconst index = array.indexOf(element);\n\tif (index > -1) {\n\t\tarray.splice(index, 1);\n\n\t\treturn element;\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function pushMany<T>(arr: T[], items: ReadonlyArray<T>): void {\n\tfor (const item of items) {\n\t\tarr.push(item);\n\t}\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[];\nexport function asArray<T>(x: T | readonly T[]): readonly T[];\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n\n/**\n * Insert the new items in the array.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start inserting elements.\n * @param newItems The items to be inserted\n */\nexport function insertInto<T>(array: T[], start: number, newItems: T[]): void {\n\tconst startIdx = getActualStartIndex(array, start);\n\tconst originalLength = array.length;\n\tconst newItemsLength = newItems.length;\n\tarray.length = originalLength + newItemsLength;\n\t// Move the items after the start index, start from the end so that we don't overwrite any value.\n\tfor (let i = originalLength - 1; i >= startIdx; i--) {\n\t\tarray[i + newItemsLength] = array[i];\n\t}\n\n\tfor (let i = 0; i < newItemsLength; i++) {\n\t\tarray[i + startIdx] = newItems[i];\n\t}\n}\n\n/**\n * Removes elements from an array and inserts new elements in their place, returning the deleted elements. Alternative to the native Array.splice method, it\n * can only support limited number of items due to the maximum call stack size limit.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start removing elements.\n * @param deleteCount The number of elements to remove.\n * @returns An array containing the elements that were deleted.\n */\nexport function splice<T>(array: T[], start: number, deleteCount: number, newItems: T[]): T[] {\n\tconst index = getActualStartIndex(array, start);\n\tlet result = array.splice(index, deleteCount);\n\tif (result === undefined) {\n\t\t// see https://bugs.webkit.org/show_bug.cgi?id=261140\n\t\tresult = [];\n\t}\n\tinsertInto(array, index, newItems);\n\treturn result;\n}\n\n/**\n * Determine the actual start index (same logic as the native splice() or slice())\n * If greater than the length of the array, start will be set to the length of the array. In this case, no element will be deleted but the method will behave as an adding function, adding as many element as item[n*] provided.\n * If negative, it will begin that many elements from the end of the array. (In this case, the origin -1, meaning -n is the index of the nth last element, and is therefore equivalent to the index of array.length - n.) If array.length + start is less than 0, it will begin from index 0.\n * @param array The target array.\n * @param start The operation index.\n */\nfunction getActualStartIndex<T>(array: T[], start: number): number {\n\treturn start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\n\n\n\n/**\n * When comparing two values,\n * a negative number indicates that the first value is less than the second,\n * a positive number indicates that the first value is greater than the second,\n * and zero indicates that neither is the case.\n*/\nexport type CompareResult = number;\n\nexport namespace CompareResult {\n\texport function isLessThan(result: CompareResult): boolean {\n\t\treturn result < 0;\n\t}\n\n\texport function isLessThanOrEqual(result: CompareResult): boolean {\n\t\treturn result <= 0;\n\t}\n\n\texport function isGreaterThan(result: CompareResult): boolean {\n\t\treturn result > 0;\n\t}\n\n\texport function isNeitherLessOrGreaterThan(result: CompareResult): boolean {\n\t\treturn result === 0;\n\t}\n\n\texport const greaterThan = 1;\n\texport const lessThan = -1;\n\texport const neitherLessOrGreaterThan = 0;\n}\n\n/**\n * A comparator `c` defines a total order `<=` on `T` as following:\n * `c(a, b) <= 0` iff `a` <= `b`.\n * We also have `c(a, b) == 0` iff `c(b, a) == 0`.\n*/\nexport type Comparator<T> = (a: T, b: T) => CompareResult;\n\nexport function compareBy<TItem, TCompareBy>(selector: (item: TItem) => TCompareBy, comparator: Comparator<TCompareBy>): Comparator<TItem> {\n\treturn (a, b) => comparator(selector(a), selector(b));\n}\n\nexport function tieBreakComparators<TItem>(...comparators: Comparator<TItem>[]): Comparator<TItem> {\n\treturn (item1, item2) => {\n\t\tfor (const comparator of comparators) {\n\t\t\tconst result = comparator(item1, item2);\n\t\t\tif (!CompareResult.isNeitherLessOrGreaterThan(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn CompareResult.neitherLessOrGreaterThan;\n\t};\n}\n\n/**\n * The natural order on numbers.\n*/\nexport const numberComparator: Comparator<number> = (a, b) => a - b;\n\nexport const booleanComparator: Comparator<boolean> = (a, b) => numberComparator(a ? 1 : 0, b ? 1 : 0);\n\nexport function reverseOrder<TItem>(comparator: Comparator<TItem>): Comparator<TItem> {\n\treturn (a, b) => -comparator(a, b);\n}\n\n/**\n * Returns a new comparator that treats `undefined` as the smallest value.\n * All other values are compared using the given comparator.\n*/\nexport function compareUndefinedSmallest<T>(comparator: Comparator<T>): Comparator<T | undefined> {\n\treturn (a, b) => {\n\t\tif (a === undefined) {\n\t\t\treturn b === undefined ? CompareResult.neitherLessOrGreaterThan : CompareResult.lessThan;\n\t\t} else if (b === undefined) {\n\t\t\treturn CompareResult.greaterThan;\n\t\t}\n\n\t\treturn comparator(a, b);\n\t};\n}\n\nexport class ArrayQueue<T> {\n\tprivate readonly items: readonly T[];\n\tprivate firstIdx = 0;\n\tprivate lastIdx: number;\n\n\t/**\n\t * Constructs a queue that is backed by the given array. Runtime is O(1).\n\t*/\n\tconstructor(items: readonly T[]) {\n\t\tthis.items = items;\n\t\tthis.lastIdx = this.items.length - 1;\n\t}\n\n\tget length(): number {\n\t\treturn this.lastIdx - this.firstIdx + 1;\n\t}\n\n\t/**\n\t * Consumes elements from the beginning of the queue as long as the predicate returns true.\n\t * If no elements were consumed, `null` is returned. Has a runtime of O(result.length).\n\t*/\n\ttakeWhile(predicate: (value: T) => boolean): T[] | null {\n\t\t// P(k) := k <= this.lastIdx && predicate(this.items[k])\n\t\t// Find s := min { k | k >= this.firstIdx && !P(k) } and return this.data[this.firstIdx...s)\n\n\t\tlet startIdx = this.firstIdx;\n\t\twhile (startIdx < this.items.length && predicate(this.items[startIdx])) {\n\t\t\tstartIdx++;\n\t\t}\n\t\tconst result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n\t\tthis.firstIdx = startIdx;\n\t\treturn result;\n\t}\n\n\t/**\n\t * Consumes elements from the end of the queue as long as the predicate returns true.\n\t * If no elements were consumed, `null` is returned.\n\t * The result has the same order as the underlying array!\n\t*/\n\ttakeFromEndWhile(predicate: (value: T) => boolean): T[] | null {\n\t\t// P(k) := this.firstIdx >= k && predicate(this.items[k])\n\t\t// Find s := max { k | k <= this.lastIdx && !P(k) } and return this.data(s...this.lastIdx]\n\n\t\tlet endIdx = this.lastIdx;\n\t\twhile (endIdx >= 0 && predicate(this.items[endIdx])) {\n\t\t\tendIdx--;\n\t\t}\n\t\tconst result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n\t\tthis.lastIdx = endIdx;\n\t\treturn result;\n\t}\n\n\tpeek(): T | undefined {\n\t\tif (this.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.items[this.firstIdx];\n\t}\n\n\tpeekLast(): T | undefined {\n\t\tif (this.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.items[this.lastIdx];\n\t}\n\n\tdequeue(): T | undefined {\n\t\tconst result = this.items[this.firstIdx];\n\t\tthis.firstIdx++;\n\t\treturn result;\n\t}\n\n\tremoveLast(): T | undefined {\n\t\tconst result = this.items[this.lastIdx];\n\t\tthis.lastIdx--;\n\t\treturn result;\n\t}\n\n\ttakeCount(count: number): T[] {\n\t\tconst result = this.items.slice(this.firstIdx, this.firstIdx + count);\n\t\tthis.firstIdx += count;\n\t\treturn result;\n\t}\n}\n\n/**\n * This class is faster than an iterator and array for lazy computed data.\n*/\nexport class CallbackIterable<T> {\n\tpublic static readonly empty = new CallbackIterable<never>(_callback => { });\n\n\tconstructor(\n\t\t/**\n\t\t * Calls the callback for every item.\n\t\t * Stops when the callback returns false.\n\t\t*/\n\t\tpublic readonly iterate: (callback: (item: T) => boolean) => void\n\t) {\n\t}\n\n\tforEach(handler: (item: T) => void) {\n\t\tthis.iterate(item => { handler(item); return true; });\n\t}\n\n\ttoArray(): T[] {\n\t\tconst result: T[] = [];\n\t\tthis.iterate(item => { result.push(item); return true; });\n\t\treturn result;\n\t}\n\n\tfilter(predicate: (item: T) => boolean): CallbackIterable<T> {\n\t\treturn new CallbackIterable(cb => this.iterate(item => predicate(item) ? cb(item) : true));\n\t}\n\n\tmap<TResult>(mapFn: (item: T) => TResult): CallbackIterable<TResult> {\n\t\treturn new CallbackIterable<TResult>(cb => this.iterate(item => cb(mapFn(item))));\n\t}\n\n\tsome(predicate: (item: T) => boolean): boolean {\n\t\tlet result = false;\n\t\tthis.iterate(item => { result = predicate(item); return !result; });\n\t\treturn result;\n\t}\n\n\tfindFirst(predicate: (item: T) => boolean): T | undefined {\n\t\tlet result: T | undefined;\n\t\tthis.iterate(item => {\n\t\t\tif (predicate(item)) {\n\t\t\t\tresult = item;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n\n\tfindLast(predicate: (item: T) => boolean): T | undefined {\n\t\tlet result: T | undefined;\n\t\tthis.iterate(item => {\n\t\t\tif (predicate(item)) {\n\t\t\t\tresult = item;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n\n\tfindLastMaxBy(comparator: Comparator<T>): T | undefined {\n\t\tlet result: T | undefined;\n\t\tlet first = true;\n\t\tthis.iterate(item => {\n\t\t\tif (first || CompareResult.isGreaterThan(comparator(item, result!))) {\n\t\t\t\tfirst = false;\n\t\t\t\tresult = item;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n}\n\n/**\n * Represents a re-arrangement of items in an array.\n */\nexport class Permutation {\n\tconstructor(private readonly _indexMap: readonly number[]) { }\n\n\t/**\n\t * Returns a permutation that sorts the given array according to the given compare function.\n\t */\n\tpublic static createSortPermutation<T>(arr: readonly T[], compareFn: (a: T, b: T) => number): Permutation {\n\t\tconst sortIndices = Array.from(arr.keys()).sort((index1, index2) => compareFn(arr[index1], arr[index2]));\n\t\treturn new Permutation(sortIndices);\n\t}\n\n\t/**\n\t * Returns a new array with the elements of the given array re-arranged according to this permutation.\n\t */\n\tapply<T>(arr: readonly T[]): T[] {\n\t\treturn arr.map((_, index) => arr[this._indexMap[index]]);\n\t}\n\n\t/**\n\t * Returns a new permutation that undoes the re-arrangement of this permutation.\n\t*/\n\tinverse(): Permutation {\n\t\tconst inverseIndexMap = this._indexMap.slice();\n\t\tfor (let i = 0; i < this._indexMap.length; i++) {\n\t\t\tinverseIndexMap[this._indexMap[i]] = i;\n\t\t}\n\t\treturn new Permutation(inverseIndexMap);\n\t}\n}\n\n/**\n * Asynchronous variant of `Array.find()`, returning the first element in\n * the array for which the predicate returns true.\n *\n * This implementation does not bail early and waits for all promises to\n * resolve before returning.\n */\nexport async function findAsync<T>(array: readonly T[], predicate: (element: T, index: number) => Promise<boolean>): Promise<T | undefined> {\n\tconst results = await Promise.all(array.map(\n\t\tasync (element, index) => ({ element, ok: await predicate(element, index) })\n\t));\n\n\treturn results.find(r => r.ok)?.element;\n}\n\nexport function sum(array: readonly number[]): number {\n\treturn array.reduce((acc, value) => acc + value, 0);\n}\n\nexport function sumBy<T>(array: readonly T[], selector: (value: T) => number): number {\n\treturn array.reduce((acc, value) => acc + selector(value), 0);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are strings.\n */\nexport type IStringDictionary<V> = Record<string, V>;\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are numbers.\n */\nexport type INumberDictionary<V> = Record<number, V>;\n\n/**\n * Groups the collection into a dictionary based on the provided\n * group function.\n */\nexport function groupBy<K extends string | number | symbol, V>(data: V[], groupFn: (element: V) => K): Record<K, V[]> {\n\tconst result: Record<K, V[]> = Object.create(null);\n\tfor (const element of data) {\n\t\tconst key = groupFn(element);\n\t\tlet target = result[key];\n\t\tif (!target) {\n\t\t\ttarget = result[key] = [];\n\t\t}\n\t\ttarget.push(element);\n\t}\n\treturn result;\n}\n\nexport function groupByMap<K, V>(data: V[], groupFn: (element: V) => K): Map<K, V[]> {\n\tconst result = new Map<K, V[]>();\n\tfor (const element of data) {\n\t\tconst key = groupFn(element);\n\t\tlet target = result.get(key);\n\t\tif (!target) {\n\t\t\ttarget = [];\n\t\t\tresult.set(key, target);\n\t\t}\n\t\ttarget.push(element);\n\t}\n\treturn result;\n}\n\nexport function diffSets<T>(before: ReadonlySet<T>, after: ReadonlySet<T>): { removed: T[]; added: T[] } {\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\tfor (const element of before) {\n\t\tif (!after.has(element)) {\n\t\t\tremoved.push(element);\n\t\t}\n\t}\n\tfor (const element of after) {\n\t\tif (!before.has(element)) {\n\t\t\tadded.push(element);\n\t\t}\n\t}\n\treturn { removed, added };\n}\n\nexport function diffMaps<K, V>(before: Map<K, V>, after: Map<K, V>): { removed: V[]; added: V[] } {\n\tconst removed: V[] = [];\n\tconst added: V[] = [];\n\tfor (const [index, value] of before) {\n\t\tif (!after.has(index)) {\n\t\t\tremoved.push(value);\n\t\t}\n\t}\n\tfor (const [index, value] of after) {\n\t\tif (!before.has(index)) {\n\t\t\tadded.push(value);\n\t\t}\n\t}\n\treturn { removed, added };\n}\n\n/**\n * Computes the intersection of two sets.\n *\n * @param setA - The first set.\n * @param setB - The second iterable.\n * @returns A new set containing the elements that are in both `setA` and `setB`.\n */\nexport function intersection<T>(setA: Set<T>, setB: Iterable<T>): Set<T> {\n\tconst result = new Set<T>();\n\tfor (const elem of setB) {\n\t\tif (setA.has(elem)) {\n\t\t\tresult.add(elem);\n\t\t}\n\t}\n\treturn result;\n}\n\nexport class SetWithKey<T> implements Set<T> {\n\tprivate _map = new Map<any, T>();\n\n\tconstructor(values: T[], private toKey: (t: T) => unknown) {\n\t\tfor (const value of values) {\n\t\t\tthis.add(value);\n\t\t}\n\t}\n\n\tget size(): number {\n\t\treturn this._map.size;\n\t}\n\n\tadd(value: T): this {\n\t\tconst key = this.toKey(value);\n\t\tthis._map.set(key, value);\n\t\treturn this;\n\t}\n\n\tdelete(value: T): boolean {\n\t\treturn this._map.delete(this.toKey(value));\n\t}\n\n\thas(value: T): boolean {\n\t\treturn this._map.has(this.toKey(value));\n\t}\n\n\t*entries(): IterableIterator<[T, T]> {\n\t\tfor (const entry of this._map.values()) {\n\t\t\tyield [entry, entry];\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<T> {\n\t\treturn this.values();\n\t}\n\n\t*values(): IterableIterator<T> {\n\t\tfor (const entry of this._map.values()) {\n\t\t\tyield entry;\n\t\t}\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t}\n\n\tforEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any): void {\n\t\tthis._map.forEach(entry => callbackfn.call(thisArg, entry, entry, this));\n\t}\n\n\t[Symbol.iterator](): IterableIterator<T> {\n\t\treturn this.values();\n\t}\n\n\t[Symbol.toStringTag]: string = 'SetWithKey';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from './uri.js';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nclass ResourceMapEntry<T> {\n\tconstructor(readonly uri: URI, readonly value: T) { }\n}\n\nfunction isEntries<T>(arg: ResourceMap<T> | ResourceMapKeyFn | readonly (readonly [URI, T])[] | undefined): arg is readonly (readonly [URI, T])[] {\n\treturn Array.isArray(arg);\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, ResourceMapEntry<T>>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(entries?: readonly (readonly [URI, T])[], toKey?: ResourceMapKeyFn);\n\n\tconstructor(arg?: ResourceMap<T> | ResourceMapKeyFn | readonly (readonly [URI, T])[], toKey?: ResourceMapKeyFn) {\n\t\tif (arg instanceof ResourceMap) {\n\t\t\tthis.map = new Map(arg.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else if (isEntries(arg)) {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\n\t\t\tfor (const [resource, value] of arg) {\n\t\t\t\tthis.set(resource, value);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = arg ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), new ResourceMapEntry(resource, value));\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource))?.value;\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (const [_, entry] of this.map) {\n\t\t\tclb(entry.value, entry.uri, <any>this);\n\t\t}\n\t}\n\n\t*values(): IterableIterator<T> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield entry.value;\n\t\t}\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield entry.uri;\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (const [, entry] of this.map) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n}\n\nexport class ResourceSet implements Set<URI> {\n\n\treadonly [Symbol.toStringTag]: string = 'ResourceSet';\n\n\tprivate readonly _map: ResourceMap<URI>;\n\n\tconstructor(toKey?: ResourceMapKeyFn);\n\tconstructor(entries: readonly URI[], toKey?: ResourceMapKeyFn);\n\tconstructor(entriesOrKey?: readonly URI[] | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (!entriesOrKey || typeof entriesOrKey === 'function') {\n\t\t\tthis._map = new ResourceMap(entriesOrKey);\n\t\t} else {\n\t\t\tthis._map = new ResourceMap(toKey);\n\t\t\tentriesOrKey.forEach(this.add, this);\n\t\t}\n\t}\n\n\n\tget size(): number {\n\t\treturn this._map.size;\n\t}\n\n\tadd(value: URI): this {\n\t\tthis._map.set(value, value);\n\t\treturn this;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t}\n\n\tdelete(value: URI): boolean {\n\t\treturn this._map.delete(value);\n\t}\n\n\tforEach(callbackfn: (value: URI, value2: URI, set: Set<URI>) => void, thisArg?: any): void {\n\t\tthis._map.forEach((_value, key) => callbackfn.call(thisArg, key, key, this));\n\t}\n\n\thas(value: URI): boolean {\n\t\treturn this._map.has(value);\n\t}\n\n\tentries(): IterableIterator<[URI, URI]> {\n\t\treturn this._map.entries();\n\t}\n\n\tkeys(): IterableIterator<URI> {\n\t\treturn this._map.keys();\n\t}\n\n\tvalues(): IterableIterator<URI> {\n\t\treturn this._map.keys();\n\t}\n\n\t[Symbol.iterator](): IterableIterator<URI> {\n\t\treturn this.keys();\n\t}\n}\n\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprotected trimNew(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._tail;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.previous;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._tail = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.next = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nabstract class Cache<K, V> extends LinkedMap<K, V> {\n\n\tprotected _limit: number;\n\tprotected _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\toverride get(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\treturn this;\n\t}\n\n\tprotected checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trim(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n\n\tprotected abstract trim(newSize: number): void;\n}\n\nexport class LRUCache<K, V> extends Cache<K, V> {\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper(limit, ratio);\n\t}\n\n\tprotected override trim(newSize: number) {\n\t\tthis.trimOld(newSize);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tsuper.set(key, value);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n}\n\nexport class MRUCache<K, V> extends Cache<K, V> {\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper(limit, ratio);\n\t}\n\n\tprotected override trim(newSize: number) {\n\t\tthis.trimNew(newSize);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tif (this._limit <= this.size && !this.has(key)) {\n\t\t\tthis.trim(Math.round(this._limit * this._ratio) - 1);\n\t\t}\n\n\t\tsuper.set(key, value);\n\t\treturn this;\n\t}\n}\n\nexport class CounterSet<T> {\n\n\tprivate map = new Map<T, number>();\n\n\tadd(value: T): CounterSet<T> {\n\t\tthis.map.set(value, (this.map.get(value) || 0) + 1);\n\t\treturn this;\n\t}\n\n\tdelete(value: T): boolean {\n\t\tlet counter = this.map.get(value) || 0;\n\n\t\tif (counter === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tcounter--;\n\n\t\tif (counter === 0) {\n\t\t\tthis.map.delete(value);\n\t\t} else {\n\t\t\tthis.map.set(value, counter);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\thas(value: T): boolean {\n\t\treturn this.map.has(value);\n\t}\n}\n\n/**\n * A map that allows access both by keys and values.\n * **NOTE**: values need to be unique.\n */\nexport class BidirectionalMap<K, V> {\n\n\tprivate readonly _m1 = new Map<K, V>();\n\tprivate readonly _m2 = new Map<V, K>();\n\n\tconstructor(entries?: readonly (readonly [K, V])[]) {\n\t\tif (entries) {\n\t\t\tfor (const [key, value] of entries) {\n\t\t\t\tthis.set(key, value);\n\t\t\t}\n\t\t}\n\t}\n\n\tclear(): void {\n\t\tthis._m1.clear();\n\t\tthis._m2.clear();\n\t}\n\n\tset(key: K, value: V): void {\n\t\tthis._m1.set(key, value);\n\t\tthis._m2.set(value, key);\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this._m1.get(key);\n\t}\n\n\tgetKey(value: V): K | undefined {\n\t\treturn this._m2.get(value);\n\t}\n\n\tdelete(key: K): boolean {\n\t\tconst value = this._m1.get(key);\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._m1.delete(key);\n\t\tthis._m2.delete(value);\n\t\treturn true;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: BidirectionalMap<K, V>) => void, thisArg?: any): void {\n\t\tthis._m1.forEach((value, key) => {\n\t\t\tcallbackfn.call(thisArg, value, key, this);\n\t\t});\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\treturn this._m1.keys();\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\treturn this._m1.values();\n\t}\n}\n\nexport class SetMap<K, V> {\n\n\tprivate map = new Map<K, Set<V>>();\n\n\tadd(key: K, value: V): void {\n\t\tlet values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\tvalues = new Set<V>();\n\t\t\tthis.map.set(key, values);\n\t\t}\n\n\t\tvalues.add(value);\n\t}\n\n\tdelete(key: K, value: V): void {\n\t\tconst values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalues.delete(value);\n\n\t\tif (values.size === 0) {\n\t\t\tthis.map.delete(key);\n\t\t}\n\t}\n\n\tforEach(key: K, fn: (value: V) => void): void {\n\t\tconst values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalues.forEach(fn);\n\t}\n\n\tget(key: K): ReadonlySet<V> {\n\t\tconst values = this.map.get(key);\n\t\tif (!values) {\n\t\t\treturn new Set<V>();\n\t\t}\n\t\treturn values;\n\t}\n}\n\nexport function mapsStrictEqualIgnoreOrder(a: Map<unknown, unknown>, b: Map<unknown, unknown>): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t}\n\n\tif (a.size !== b.size) {\n\t\treturn false;\n\t}\n\n\tfor (const [key, value] of a) {\n\t\tif (!b.has(key) || b.get(key) !== value) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfor (const [key] of b) {\n\t\tif (!a.has(key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * A map that is addressable with an arbitrary number of keys. This is useful in high performance\n * scenarios where creating a composite key whenever the data is accessed is too expensive. For\n * example for a very hot function, constructing a string like `first-second-third` for every call\n * will cause a significant hit to performance.\n */\nexport class NKeyMap<TValue, TKeys extends (string | boolean | number)[]> {\n\tprivate _data: Map<any, any> = new Map();\n\n\t/**\n\t * Sets a value on the map. Note that unlike a standard `Map`, the first argument is the value.\n\t * This is because the spread operator is used for the keys and must be last..\n\t * @param value The value to set.\n\t * @param keys The keys for the value.\n\t */\n\tpublic set(value: TValue, ...keys: [...TKeys]): void {\n\t\tlet currentMap = this._data;\n\t\tfor (let i = 0; i < keys.length - 1; i++) {\n\t\t\tif (!currentMap.has(keys[i])) {\n\t\t\t\tcurrentMap.set(keys[i], new Map());\n\t\t\t}\n\t\t\tcurrentMap = currentMap.get(keys[i]);\n\t\t}\n\t\tcurrentMap.set(keys[keys.length - 1], value);\n\t}\n\n\tpublic get(...keys: [...TKeys]): TValue | undefined {\n\t\tlet currentMap = this._data;\n\t\tfor (let i = 0; i < keys.length - 1; i++) {\n\t\t\tif (!currentMap.has(keys[i])) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrentMap = currentMap.get(keys[i]);\n\t\t}\n\t\treturn currentMap.get(keys[keys.length - 1]);\n\t}\n\n\tpublic clear(): void {\n\t\tthis._data.clear();\n\t}\n\n\tpublic *values(): IterableIterator<TValue> {\n\t\tfunction* iterate(map: Map<any, any>): IterableIterator<TValue> {\n\t\t\tfor (const value of map.values()) {\n\t\t\t\tif (value instanceof Map) {\n\t\t\t\t\tyield* iterate(value);\n\t\t\t\t} else {\n\t\t\t\t\tyield value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tyield* iterate(this._data);\n\t}\n\n\t/**\n\t * Get a textual representation of the map for debugging purposes.\n\t */\n\tpublic toString(): string {\n\t\tconst printMap = (map: Map<any, any>, depth: number): string => {\n\t\t\tlet result = '';\n\t\t\tfor (const [key, value] of map) {\n\t\t\t\tresult += `${'  '.repeat(depth)}${key}: `;\n\t\t\t\tif (value instanceof Map) {\n\t\t\t\t\tresult += '\\n' + printMap(value, depth + 1);\n\t\t\t\t} else {\n\t\t\t\t\tresult += `${value}\\n`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\n\t\treturn printMap(this._data, 0);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Given a function, returns a function that is only calling that function once.\n */\nexport function createSingleCallFunction<T extends Function>(this: unknown, fn: T, fnDidRunCallback?: () => void): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tif (fnDidRunCallback) {\n\t\t\ttry {\n\t\t\t\tresult = fn.apply(_this, arguments);\n\t\t\t} finally {\n\t\t\t\tfnDidRunCallback();\n\t\t\t}\n\t\t} else {\n\t\t\tresult = fn.apply(_this, arguments);\n\t\t}\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BugIndicatingError, onUnexpectedError } from './errors.js';\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n *\n * @deprecated Use `assert(...)` instead.\n * This method is usually used like this:\n * ```ts\n * import * as assert from 'vs/base/common/assert';\n * assert.ok(...);\n * ```\n *\n * However, `assert` in that example is a user chosen name.\n * There is no tooling for generating such an import statement.\n * Thus, the `assert(...)` function should be used instead.\n */\nexport function ok(value?: unknown, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n\t}\n}\n\nexport function assertNever(value: never, message = 'Unreachable'): never {\n\tthrow new Error(message);\n}\n\n/**\n * Asserts that a condition is `truthy`.\n *\n * @throws provided {@linkcode messageOrError} if the {@linkcode condition} is `falsy`.\n *\n * @param condition The condition to assert.\n * @param messageOrError An error message or error object to throw if condition is `falsy`.\n */\nexport function assert(\n\tcondition: boolean,\n\tmessageOrError: string | Error = 'unexpected state',\n): asserts condition {\n\tif (!condition) {\n\t\t// if error instance is provided, use it, otherwise create a new one\n\t\tconst errorToThrow = typeof messageOrError === 'string'\n\t\t\t? new BugIndicatingError(`Assertion Failed: ${messageOrError}`)\n\t\t\t: messageOrError;\n\n\t\tthrow errorToThrow;\n\t}\n}\n\n/**\n * Like assert, but doesn't throw.\n */\nexport function softAssert(condition: boolean, message = 'Soft Assertion Failed'): void {\n\tif (!condition) {\n\t\tonUnexpectedError(new BugIndicatingError(message));\n\t}\n}\n\n/**\n * condition must be side-effect free!\n */\nexport function assertFn(condition: () => boolean): void {\n\tif (!condition()) {\n\t\t// eslint-disable-next-line no-debugger\n\t\tdebugger;\n\t\t// Reevaluate `condition` again to make debugging easier\n\t\tcondition();\n\t\tonUnexpectedError(new BugIndicatingError('Assertion Failed'));\n\t}\n}\n\nexport function checkAdjacentItems<T>(items: readonly T[], predicate: (item1: T, item2: T) => boolean): boolean {\n\tlet i = 0;\n\twhile (i < items.length - 1) {\n\t\tconst a = items[i];\n\t\tconst b = items[i + 1];\n\t\tif (!predicate(a, b)) {\n\t\t\treturn false;\n\t\t}\n\t\ti++;\n\t}\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { assert } from './assert.js';\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: unknown): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: unknown): value is string[] {\n\treturn Array.isArray(value) && (<unknown[]>value).every(elem => isString(elem));\n}\n\n/**\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: unknown): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * @returns whether the provided parameter is of type `Buffer` or Uint8Array dervived type\n */\nexport function isTypedArray(obj: unknown): obj is Object {\n\tconst TypedArray = Object.getPrototypeOf(Uint8Array);\n\treturn typeof obj === 'object'\n\t\t&& obj instanceof TypedArray;\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: unknown): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable<T>(obj: unknown): obj is Iterable<T> {\n\treturn !!obj && typeof (obj as any)[Symbol.iterator] === 'function';\n}\n\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isAsyncIterable<T>(obj: unknown): obj is AsyncIterable<T> {\n\treturn !!obj && typeof (obj as any)[Symbol.asyncIterator] === 'function';\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: unknown): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: unknown): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n\treturn !isUndefinedOrNull(arg);\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: unknown): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: unknown, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n *\n * @see {@link assertDefined} for a similar utility that leverages TS assertion functions to narrow down the type of `arg` to be non-nullable.\n */\nexport function assertReturnsDefined<T>(arg: T | null | undefined): NonNullable<T> {\n\tassert(\n\t\targ !== null && arg !== undefined,\n\t\t'Argument is `undefined` or `null`.',\n\t);\n\n\treturn arg;\n}\n\n/**\n * Asserts that a provided `value` is `defined` - not `null` or `undefined`,\n * throwing an error with the provided error or error message, while also\n * narrowing down the type of the `value` to be `NonNullable` using TS\n * assertion functions.\n *\n * @throws if the provided `value` is `null` or `undefined`.\n *\n * ## Examples\n *\n * ```typescript\n * // an assert with an error message\n * assertDefined('some value', 'String constant is not defined o_O.');\n *\n * // `throws!` the provided error\n * assertDefined(null, new Error('Should throw this error.'));\n *\n * // narrows down the type of `someValue` to be non-nullable\n * const someValue: string | undefined | null = blackbox();\n * assertDefined(someValue, 'Some value must be defined.');\n * console.log(someValue.length); // now type of `someValue` is `string`\n * ```\n *\n * @see {@link assertReturnsDefined} for a similar utility but without assertion.\n * @see {@link https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#assertion-functions typescript-3-7.html#assertion-functions}\n */\nexport function assertDefined<T>(value: T, error: string | NonNullable<Error>): asserts value is NonNullable<T> {\n\tif (value === null || value === undefined) {\n\t\tconst errorToThrow = typeof error === 'string' ? new Error(error) : error;\n\n\t\tthrow errorToThrow;\n\t}\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertReturnsAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertReturnsAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertReturnsAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertReturnsAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\n/**\n * Checks if the provided value is one of the vales in the provided list.\n *\n * ## Examples\n *\n * ```typescript\n * // note! item type is a `subset of string`\n * type TItem = ':' | '.' | '/';\n *\n * // note! item is type of `string` here\n * const item: string = ':';\n * // list of the items to check against\n * const list: TItem[] = [':', '.'];\n *\n * // ok\n * assert(\n *   isOneOf(item, list),\n *   'Must succeed.',\n * );\n *\n * // `item` is of `TItem` type now\n * ```\n */\nexport const isOneOf = <TType, TSubtype extends TType>(\n\tvalue: TType,\n\tvalidValues: readonly TSubtype[],\n): value is TSubtype => {\n\t// note! it is OK to type cast here, because we rely on the includes\n\t//       utility to check if the value is present in the provided list\n\treturn validValues.includes(<TSubtype>value);\n};\n\n/**\n * Compile-time type check of a variable.\n */\nexport function typeCheck<T = never>(_thing: NoInfer<T>): void { }\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: unknown): obj is object {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (const key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: unknown): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: unknown[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: unknown[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: unknown, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && (arg as any).constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\n/**\n * Helper type assertion that safely upcasts a type to a supertype.\n *\n * This can be used to make sure the argument correctly conforms to the subtype while still being able to pass it\n * to contexts that expects the supertype.\n */\nexport function upcast<Base, Sub extends Base = Base>(x: Sub): Base {\n\treturn x;\n}\n\ntype AddFirstParameterToFunction<T, TargetFunctionsReturnType, FirstParameter> = T extends (...args: any[]) => TargetFunctionsReturnType ?\n\t// Function: add param to function\n\t(firstArg: FirstParameter, ...args: Parameters<T>) => ReturnType<T> :\n\n\t// Else: just leave as is\n\tT;\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\t// For every property\n\t[K in keyof Target]: AddFirstParameterToFunction<Target[K], TargetFunctionsReturnType, FirstParameter>;\n};\n\n/**\n * Given an object with all optional properties, requires at least one to be defined.\n * i.e. AtLeastOne<MyObject>;\n */\nexport type AtLeastOne<T, U = { [K in keyof T]: Pick<T, K> }> = Partial<T> & U[keyof U];\n\n/**\n * Only picks the non-optional properties of a type.\n */\nexport type OmitOptional<T> = { [K in keyof T as T[K] extends Required<T>[K] ? K : never]: T[K] };\n\n/**\n * A type that removed readonly-less from all properties of `T`\n */\nexport type Mutable<T> = {\n\t-readonly [P in keyof T]: T[P]\n};\n\n/**\n * A single object or an array of the objects.\n */\nexport type SingleOrMany<T> = T | T[];\n\n\n/**\n * A type that recursively makes all properties of `T` required\n */\nexport type DeepRequiredNonNullable<T> = {\n\t[P in keyof T]-?: T[P] extends object ? DeepRequiredNonNullable<T[P]> : Required<NonNullable<T[P]>>;\n};\n\n\n/**\n * Represents a type that is a partial version of a given type `T`, where all properties are optional and can be deeply nested.\n */\nexport type DeepPartial<T> = {\n\t[P in keyof T]?: T[P] extends object ? DeepPartial<T[P]> : Partial<T[P]>;\n};\n\n/**\n * Represents a type that is a partial version of a given type `T`, except a subset.\n */\nexport type PartialExcept<T, K extends keyof T> = Partial<Omit<T, K>> & Pick<T, K>;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isIterable } from './types.js';\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: unknown): thing is Iterable<T> {\n\t\treturn !!thing && typeof thing === 'object' && typeof (thing as Iterable<T>)[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function wrap<T>(iterableOrElement: Iterable<T> | T): Iterable<T> {\n\t\tif (is(iterableOrElement)) {\n\t\t\treturn iterableOrElement;\n\t\t} else {\n\t\t\treturn single(iterableOrElement);\n\t\t}\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function* reverse<T>(array: ReadonlyArray<T>): Iterable<T> {\n\t\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\t\tyield array[i];\n\t\t}\n\t}\n\n\texport function isEmpty<T>(iterable: Iterable<T> | undefined | null): boolean {\n\t\treturn !iterable || iterable[Symbol.iterator]().next().done === true;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T, i: number) => unknown): boolean {\n\t\tlet i = 0;\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element, i++)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function every<T>(iterable: Iterable<T>, predicate: (t: T, i: number) => unknown): boolean {\n\t\tlet i = 0;\n\t\tfor (const element of iterable) {\n\t\t\tif (!predicate(element, i++)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\texport function find<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): R | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\texport function filter<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): Iterable<R>;\n\texport function filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T>;\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T, index: number) => R): Iterable<R> {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element, index++);\n\t\t}\n\t}\n\n\texport function* flatMap<T, R>(iterable: Iterable<T>, fn: (t: T, index: number) => Iterable<R>): Iterable<R> {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tyield* fn(element, index++);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: (Iterable<T> | T)[]): Iterable<T> {\n\t\tfor (const item of iterables) {\n\t\t\tif (isIterable(item)) {\n\t\t\t\tyield* item;\n\t\t\t} else {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function reduce<T, R>(iterable: Iterable<T>, reducer: (previousValue: R, currentValue: T) => R, initialValue: R): R {\n\t\tlet value = initialValue;\n\t\tfor (const element of iterable) {\n\t\t\tvalue = reducer(value, element);\n\t\t}\n\t\treturn value;\n\t}\n\n\texport function length<T>(iterable: Iterable<T>): number {\n\t\tlet count = 0;\n\t\tfor (const _ of iterable) {\n\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\n\n\t/**\n\t * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n\t */\n\texport function* slice<T>(arr: ReadonlyArray<T>, from: number, to = arr.length): Iterable<T> {\n\t\tif (from < -arr.length) {\n\t\t\tfrom = 0;\n\t\t}\n\t\tif (from < 0) {\n\t\t\tfrom += arr.length;\n\t\t}\n\n\t\tif (to < 0) {\n\t\t\tto += arr.length;\n\t\t} else if (to > arr.length) {\n\t\t\tto = arr.length;\n\t\t}\n\n\t\tfor (; from < to; from++) {\n\t\t\tyield arr[from];\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n\n\texport async function asyncToArray<T>(iterable: AsyncIterable<T>): Promise<T[]> {\n\t\tconst result: T[] = [];\n\t\tfor await (const item of iterable) {\n\t\t\tresult.push(item);\n\t\t}\n\t\treturn result;\n\t}\n\n\texport async function asyncToArrayFlat<T>(iterable: AsyncIterable<T[]>): Promise<T[]> {\n\t\tlet result: T[] = [];\n\t\tfor await (const item of iterable) {\n\t\t\tresult = result.concat(item);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { compareBy, numberComparator } from './arrays.js';\nimport { groupBy } from './collections.js';\nimport { SetMap } from './map.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { Iterable } from './iterator.js';\nimport { BugIndicatingError, onUnexpectedError } from './errors.js';\n\n// #region Disposable Tracking\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker: IDisposableTracker | null = null;\n\nexport interface IDisposableTracker {\n\t/**\n\t * Is called on construction of a disposable.\n\t*/\n\ttrackDisposable(disposable: IDisposable): void;\n\n\t/**\n\t * Is called when a disposable is registered as child of another disposable (e.g. {@link DisposableStore}).\n\t * If parent is `null`, the disposable is removed from its former parent.\n\t*/\n\tsetParent(child: IDisposable, parent: IDisposable | null): void;\n\n\t/**\n\t * Is called after a disposable is disposed.\n\t*/\n\tmarkAsDisposed(disposable: IDisposable): void;\n\n\t/**\n\t * Indicates that the given object is a singleton which does not need to be disposed.\n\t*/\n\tmarkAsSingleton(disposable: IDisposable): void;\n}\n\nexport class GCBasedDisposableTracker implements IDisposableTracker {\n\n\tprivate readonly _registry = new FinalizationRegistry<string>(heldValue => {\n\t\tconsole.warn(`[LEAKED DISPOSABLE] ${heldValue}`);\n\t});\n\n\ttrackDisposable(disposable: IDisposable): void {\n\t\tconst stack = new Error('CREATED via:').stack!;\n\t\tthis._registry.register(disposable, stack, disposable);\n\t}\n\n\tsetParent(child: IDisposable, parent: IDisposable | null): void {\n\t\tif (parent) {\n\t\t\tthis._registry.unregister(child);\n\t\t} else {\n\t\t\tthis.trackDisposable(child);\n\t\t}\n\t}\n\n\tmarkAsDisposed(disposable: IDisposable): void {\n\t\tthis._registry.unregister(disposable);\n\t}\n\n\tmarkAsSingleton(disposable: IDisposable): void {\n\t\tthis._registry.unregister(disposable);\n\t}\n}\n\nexport interface DisposableInfo {\n\tvalue: IDisposable;\n\tsource: string | null;\n\tparent: IDisposable | null;\n\tisSingleton: boolean;\n\tidx: number;\n}\n\nexport class DisposableTracker implements IDisposableTracker {\n\tprivate static idx = 0;\n\n\tprivate readonly livingDisposables = new Map<IDisposable, DisposableInfo>();\n\n\tprivate getDisposableData(d: IDisposable): DisposableInfo {\n\t\tlet val = this.livingDisposables.get(d);\n\t\tif (!val) {\n\t\t\tval = { parent: null, source: null, isSingleton: false, value: d, idx: DisposableTracker.idx++ };\n\t\t\tthis.livingDisposables.set(d, val);\n\t\t}\n\t\treturn val;\n\t}\n\n\ttrackDisposable(d: IDisposable): void {\n\t\tconst data = this.getDisposableData(d);\n\t\tif (!data.source) {\n\t\t\tdata.source =\n\t\t\t\tnew Error().stack!;\n\t\t}\n\t}\n\n\tsetParent(child: IDisposable, parent: IDisposable | null): void {\n\t\tconst data = this.getDisposableData(child);\n\t\tdata.parent = parent;\n\t}\n\n\tmarkAsDisposed(x: IDisposable): void {\n\t\tthis.livingDisposables.delete(x);\n\t}\n\n\tmarkAsSingleton(disposable: IDisposable): void {\n\t\tthis.getDisposableData(disposable).isSingleton = true;\n\t}\n\n\tprivate getRootParent(data: DisposableInfo, cache: Map<DisposableInfo, DisposableInfo>): DisposableInfo {\n\t\tconst cacheValue = cache.get(data);\n\t\tif (cacheValue) {\n\t\t\treturn cacheValue;\n\t\t}\n\n\t\tconst result = data.parent ? this.getRootParent(this.getDisposableData(data.parent), cache) : data;\n\t\tcache.set(data, result);\n\t\treturn result;\n\t}\n\n\tgetTrackedDisposables(): IDisposable[] {\n\t\tconst rootParentCache = new Map<DisposableInfo, DisposableInfo>();\n\n\t\tconst leaking = [...this.livingDisposables.entries()]\n\t\t\t.filter(([, v]) => v.source !== null && !this.getRootParent(v, rootParentCache).isSingleton)\n\t\t\t.flatMap(([k]) => k);\n\n\t\treturn leaking;\n\t}\n\n\tcomputeLeakingDisposables(maxReported = 10, preComputedLeaks?: DisposableInfo[]): { leaks: DisposableInfo[]; details: string } | undefined {\n\t\tlet uncoveredLeakingObjs: DisposableInfo[] | undefined;\n\t\tif (preComputedLeaks) {\n\t\t\tuncoveredLeakingObjs = preComputedLeaks;\n\t\t} else {\n\t\t\tconst rootParentCache = new Map<DisposableInfo, DisposableInfo>();\n\n\t\t\tconst leakingObjects = [...this.livingDisposables.values()]\n\t\t\t\t.filter((info) => info.source !== null && !this.getRootParent(info, rootParentCache).isSingleton);\n\n\t\t\tif (leakingObjects.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst leakingObjsSet = new Set(leakingObjects.map(o => o.value));\n\n\t\t\t// Remove all objects that are a child of other leaking objects. Assumes there are no cycles.\n\t\t\tuncoveredLeakingObjs = leakingObjects.filter(l => {\n\t\t\t\treturn !(l.parent && leakingObjsSet.has(l.parent));\n\t\t\t});\n\n\t\t\tif (uncoveredLeakingObjs.length === 0) {\n\t\t\t\tthrow new Error('There are cyclic diposable chains!');\n\t\t\t}\n\t\t}\n\n\t\tif (!uncoveredLeakingObjs) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tfunction getStackTracePath(leaking: DisposableInfo): string[] {\n\t\t\tfunction removePrefix(array: string[], linesToRemove: (string | RegExp)[]) {\n\t\t\t\twhile (array.length > 0 && linesToRemove.some(regexp => typeof regexp === 'string' ? regexp === array[0] : array[0].match(regexp))) {\n\t\t\t\t\tarray.shift();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst lines = leaking.source!.split('\\n').map(p => p.trim().replace('at ', '')).filter(l => l !== '');\n\t\t\tremovePrefix(lines, ['Error', /^trackDisposable \\(.*\\)$/, /^DisposableTracker.trackDisposable \\(.*\\)$/]);\n\t\t\treturn lines.reverse();\n\t\t}\n\n\t\tconst stackTraceStarts = new SetMap<string, DisposableInfo>();\n\t\tfor (const leaking of uncoveredLeakingObjs) {\n\t\t\tconst stackTracePath = getStackTracePath(leaking);\n\t\t\tfor (let i = 0; i <= stackTracePath.length; i++) {\n\t\t\t\tstackTraceStarts.add(stackTracePath.slice(0, i).join('\\n'), leaking);\n\t\t\t}\n\t\t}\n\n\t\t// Put earlier leaks first\n\t\tuncoveredLeakingObjs.sort(compareBy(l => l.idx, numberComparator));\n\n\t\tlet message = '';\n\n\t\tlet i = 0;\n\t\tfor (const leaking of uncoveredLeakingObjs.slice(0, maxReported)) {\n\t\t\ti++;\n\t\t\tconst stackTracePath = getStackTracePath(leaking);\n\t\t\tconst stackTraceFormattedLines = [];\n\n\t\t\tfor (let i = 0; i < stackTracePath.length; i++) {\n\t\t\t\tlet line = stackTracePath[i];\n\t\t\t\tconst starts = stackTraceStarts.get(stackTracePath.slice(0, i + 1).join('\\n'));\n\t\t\t\tline = `(shared with ${starts.size}/${uncoveredLeakingObjs.length} leaks) at ${line}`;\n\n\t\t\t\tconst prevStarts = stackTraceStarts.get(stackTracePath.slice(0, i).join('\\n'));\n\t\t\t\tconst continuations = groupBy([...prevStarts].map(d => getStackTracePath(d)[i]), v => v);\n\t\t\t\tdelete continuations[stackTracePath[i]];\n\t\t\t\tfor (const [cont, set] of Object.entries(continuations)) {\n\t\t\t\t\tstackTraceFormattedLines.unshift(`    - stacktraces of ${set.length} other leaks continue with ${cont}`);\n\t\t\t\t}\n\n\t\t\t\tstackTraceFormattedLines.unshift(line);\n\t\t\t}\n\n\t\t\tmessage += `\\n\\n\\n==================== Leaking disposable ${i}/${uncoveredLeakingObjs.length}: ${leaking.value.constructor.name} ====================\\n${stackTraceFormattedLines.join('\\n')}\\n============================================================\\n\\n`;\n\t\t}\n\n\t\tif (uncoveredLeakingObjs.length > maxReported) {\n\t\t\tmessage += `\\n\\n\\n... and ${uncoveredLeakingObjs.length - maxReported} more leaking disposables\\n\\n`;\n\t\t}\n\n\t\treturn { leaks: uncoveredLeakingObjs, details: message };\n\t}\n}\n\nexport function setDisposableTracker(tracker: IDisposableTracker | null): void {\n\tdisposableTracker = tracker;\n}\n\nif (TRACK_DISPOSABLES) {\n\tconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\tsetDisposableTracker(new class implements IDisposableTracker {\n\t\ttrackDisposable(x: IDisposable): void {\n\t\t\tconst stack = new Error('Potentially leaked disposable').stack!;\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\t\t\tconsole.log(stack);\n\t\t\t\t}\n\t\t\t}, 3000);\n\t\t}\n\n\t\tsetParent(child: IDisposable, parent: IDisposable | null): void {\n\t\t\tif (child && child !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(child as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmarkAsDisposed(disposable: IDisposable): void {\n\t\t\tif (disposable && disposable !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(disposable as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmarkAsSingleton(disposable: IDisposable): void { }\n\t});\n}\n\nexport function trackDisposable<T extends IDisposable>(x: T): T {\n\tdisposableTracker?.trackDisposable(x);\n\treturn x;\n}\n\nexport function markAsDisposed(disposable: IDisposable): void {\n\tdisposableTracker?.markAsDisposed(disposable);\n}\n\nfunction setParentOfDisposable(child: IDisposable, parent: IDisposable | null): void {\n\tdisposableTracker?.setParent(child, parent);\n}\n\nfunction setParentOfDisposables(children: IDisposable[], parent: IDisposable | null): void {\n\tif (!disposableTracker) {\n\t\treturn;\n\t}\n\tfor (const child of children) {\n\t\tdisposableTracker.setParent(child, parent);\n\t}\n}\n\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton<T extends IDisposable>(singleton: T): T {\n\tdisposableTracker?.markAsSingleton(singleton);\n\treturn singleton;\n}\n\n// #endregion\n\n/**\n * An object that performs a cleanup operation when `.dispose()` is called.\n *\n * Some examples of how disposables are used:\n *\n * - An event listener that removes itself when `.dispose()` is called.\n * - A resource such as a file system watcher that cleans up the resource when `.dispose()` is called.\n * - The return value from registering a provider. When `.dispose()` is called, the provider is unregistered.\n */\nexport interface IDisposable {\n\tdispose(): void;\n}\n\n/**\n * Check if `thing` is {@link IDisposable disposable}.\n */\nexport function isDisposable<E extends any>(thing: E): thing is E & IDisposable {\n\treturn typeof thing === 'object' && thing !== null && typeof (<IDisposable><any>thing).dispose === 'function' && (<IDisposable><any>thing).dispose.length === 0;\n}\n\n/**\n * Disposes of the value(s) passed in.\n */\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends Iterable<T> = Iterable<T>>(disposables: A): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | Iterable<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tconst errors: any[] = [];\n\n\t\tfor (const d of arg) {\n\t\t\tif (d) {\n\t\t\t\ttry {\n\t\t\t\t\td.dispose();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length === 1) {\n\t\t\tthrow errors[0];\n\t\t} else if (errors.length > 1) {\n\t\t\tthrow new AggregateError(errors, 'Encountered errors while disposing of store');\n\t\t}\n\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\nexport function disposeIfDisposable<T extends IDisposable | object>(disposables: Array<T>): Array<T> {\n\tfor (const d of disposables) {\n\t\tif (isDisposable(d)) {\n\t\t\td.dispose();\n\t\t}\n\t}\n\treturn [];\n}\n\n/**\n * Combine multiple disposable values into a single {@link IDisposable}.\n */\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tconst parent = toDisposable(() => dispose(disposables));\n\tsetParentOfDisposables(disposables, parent);\n\treturn parent;\n}\n\n/**\n * Turn a function that implements dispose into an {@link IDisposable}.\n *\n * @param fn Clean up function, guaranteed to be called only **once**.\n */\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: createSingleCallFunction(() => {\n\t\t\tmarkAsDisposed(self);\n\t\t\tfn();\n\t\t})\n\t});\n\treturn self;\n}\n\n/**\n * Manages a collection of disposable values.\n *\n * This is the preferred way to manage multiple disposables. A `DisposableStore` is safer to work with than an\n * `IDisposable[]` as it considers edge cases, such as registering the same value multiple times or adding an item to a\n * store that has already been disposed of.\n */\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate readonly _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkAsDisposed(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * @return `true` if this object has been disposed of.\n\t */\n\tpublic get isDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\tif (this._toDispose.size === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tdispose(this._toDispose);\n\t\t} finally {\n\t\t\tthis._toDispose.clear();\n\t\t}\n\t}\n\n\t/**\n\t * Add a new {@link IDisposable disposable} to the collection.\n\t */\n\tpublic add<T extends IDisposable>(o: T): T {\n\t\tif (!o || o === Disposable.None) {\n\t\t\treturn o;\n\t\t}\n\t\tif ((o as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tsetParentOfDisposable(o, this);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(o);\n\t\t}\n\n\t\treturn o;\n\t}\n\n\t/**\n\t * Deletes a disposable from store and disposes of it. This will not throw or warn and proceed to dispose the\n\t * disposable even when the disposable is not part in the store.\n\t */\n\tpublic delete<T extends IDisposable>(o: T): void {\n\t\tif (!o) {\n\t\t\treturn;\n\t\t}\n\t\tif ((o as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot dispose a disposable on itself!');\n\t\t}\n\t\tthis._toDispose.delete(o);\n\t\to.dispose();\n\t}\n\n\t/**\n\t * Deletes the value from the store, but does not dispose it.\n\t */\n\tpublic deleteAndLeak<T extends IDisposable>(o: T): void {\n\t\tif (!o) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._toDispose.has(o)) {\n\t\t\tthis._toDispose.delete(o);\n\t\t\tsetParentOfDisposable(o, null);\n\t\t}\n\t}\n\n\tpublic assertNotDisposed(): void {\n\t\tif (this._isDisposed) {\n\t\t\tonUnexpectedError(new BugIndicatingError('Object disposed'));\n\t\t}\n\t}\n}\n\n/**\n * Abstract base class for a {@link IDisposable disposable} object.\n *\n * Subclasses can {@linkcode _register} disposables that will be automatically cleaned up when this object is disposed of.\n */\nexport abstract class Disposable implements IDisposable {\n\n\t/**\n\t * A disposable that does nothing when it is disposed of.\n\t *\n\t * TODO: This should not be a static property.\n\t */\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprotected readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t\tsetParentOfDisposable(this._store, this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkAsDisposed(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\t/**\n\t * Adds `o` to the collection of disposables managed by this object.\n\t */\n\tprotected _register<T extends IDisposable>(o: T): T {\n\t\tif ((o as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(o);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._value?.dispose();\n\t\tif (value) {\n\t\t\tsetParentOfDisposable(value, this);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\t/**\n\t * Resets the stored value and disposed of the previously stored value.\n\t */\n\tclear(): void {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkAsDisposed(this);\n\t\tthis._value?.dispose();\n\t\tthis._value = undefined;\n\t}\n\n\t/**\n\t * Clears the value, but does not dispose it.\n\t * The old value is returned.\n\t*/\n\tclearAndLeak(): T | undefined {\n\t\tconst oldValue = this._value;\n\t\tthis._value = undefined;\n\t\tif (oldValue) {\n\t\t\tsetParentOfDisposable(oldValue, null);\n\t\t}\n\t\treturn oldValue;\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed like {@link MutableDisposable}, but the value must\n * exist and cannot be undefined.\n */\nexport class MandatoryMutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate readonly _disposable = new MutableDisposable<T>();\n\tprivate _isDisposed = false;\n\n\tconstructor(initialValue: T) {\n\t\tthis._disposable.value = initialValue;\n\t}\n\n\tget value(): T {\n\t\treturn this._disposable.value!;\n\t}\n\n\tset value(value: T) {\n\t\tif (this._isDisposed || value === this._disposable.value) {\n\t\t\treturn;\n\t\t}\n\t\tthis._disposable.value = value;\n\t}\n\n\tdispose() {\n\t\tthis._isDisposed = true;\n\t\tthis._disposable.dispose();\n\t}\n}\n\nexport class RefCountedDisposable {\n\n\tprivate _counter: number = 1;\n\n\tconstructor(\n\t\tprivate readonly _disposable: IDisposable,\n\t) { }\n\n\tacquire() {\n\t\tthis._counter++;\n\t\treturn this;\n\t}\n\n\trelease() {\n\t\tif (--this._counter === 0) {\n\t\t\tthis._disposable.dispose();\n\t\t}\n\t\treturn this;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number }> = new Map();\n\n\tacquire(key: string, ...args: any[]): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = createSingleCallFunction(() => {\n\t\t\tif (--reference.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string, ...args: any[]): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\n/**\n * Unwraps a reference collection of promised values. Makes sure\n * references are disposed whenever promises get rejected.\n */\nexport class AsyncReferenceCollection<T> {\n\n\tconstructor(private referenceCollection: ReferenceCollection<Promise<T>>) { }\n\n\tasync acquire(key: string, ...args: any[]): Promise<IReference<T>> {\n\t\tconst ref = this.referenceCollection.acquire(key, ...args);\n\n\t\ttry {\n\t\t\tconst object = await ref.object;\n\n\t\t\treturn {\n\t\t\t\tobject,\n\t\t\t\tdispose: () => ref.dispose()\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tref.dispose();\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n\nexport function disposeOnReturn(fn: (store: DisposableStore) => void): void {\n\tconst store = new DisposableStore();\n\ttry {\n\t\tfn(store);\n\t} finally {\n\t\tstore.dispose();\n\t}\n}\n\n/**\n * A map the manages the lifecycle of the values that it stores.\n */\nexport class DisposableMap<K, V extends IDisposable = IDisposable> implements IDisposable {\n\n\tprivate readonly _store = new Map<K, V>();\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\t/**\n\t * Disposes of all stored values and mark this object as disposed.\n\t *\n\t * Trying to use this object after it has been disposed of is an error.\n\t */\n\tdispose(): void {\n\t\tmarkAsDisposed(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clearAndDisposeAll();\n\t}\n\n\t/**\n\t * Disposes of all stored values and clear the map, but DO NOT mark this object as disposed.\n\t */\n\tclearAndDisposeAll(): void {\n\t\tif (!this._store.size) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tdispose(this._store.values());\n\t\t} finally {\n\t\t\tthis._store.clear();\n\t\t}\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._store.has(key);\n\t}\n\n\tget size(): number {\n\t\treturn this._store.size;\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this._store.get(key);\n\t}\n\n\tset(key: K, value: V, skipDisposeOnOverwrite = false): void {\n\t\tif (this._isDisposed) {\n\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!').stack);\n\t\t}\n\n\t\tif (!skipDisposeOnOverwrite) {\n\t\t\tthis._store.get(key)?.dispose();\n\t\t}\n\n\t\tthis._store.set(key, value);\n\t\tsetParentOfDisposable(value, this);\n\t}\n\n\t/**\n\t * Delete the value stored for `key` from this map and also dispose of it.\n\t */\n\tdeleteAndDispose(key: K): void {\n\t\tthis._store.get(key)?.dispose();\n\t\tthis._store.delete(key);\n\t}\n\n\t/**\n\t * Delete the value stored for `key` from this map but return it. The caller is\n\t * responsible for disposing of the value.\n\t */\n\tdeleteAndLeak(key: K): V | undefined {\n\t\tconst value = this._store.get(key);\n\t\tif (value) {\n\t\t\tsetParentOfDisposable(value, null);\n\t\t}\n\t\tthis._store.delete(key);\n\t\treturn value;\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\treturn this._store.keys();\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\treturn this._store.values();\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this._store[Symbol.iterator]();\n\t}\n}\n\n/**\n * Call `then` on a Promise, unless the returned disposable is disposed.\n */\nexport function thenIfNotDisposed<T>(promise: Promise<T>, then: (result: T) => void): IDisposable {\n\tlet disposed = false;\n\tpromise.then(result => {\n\t\tif (disposed) {\n\t\t\treturn;\n\t\t}\n\t\tthen(result);\n\t});\n\treturn toDisposable(() => {\n\t\tdisposed = true;\n\t});\n}\n\n/**\n * Call `then` on a promise that resolves to a {@link IDisposable}, then either register the\n * disposable or register it to the {@link DisposableStore}, depending on whether the store is\n * disposed or not.\n */\nexport function thenRegisterOrDispose<T extends IDisposable>(promise: Promise<T>, store: DisposableStore): Promise<T> {\n\treturn promise.then(disposable => {\n\t\tif (store.isDisposed) {\n\t\t\tdisposable.dispose();\n\t\t} else {\n\t\t\tstore.add(disposable);\n\t\t}\n\t\treturn disposable;\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tconst next = node.next;\n\t\t\tnode.prev = Node.Undefined;\n\t\t\tnode.next = Node.Undefined;\n\t\t\tnode = next;\n\t\t}\n\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\ndeclare const globalThis: { performance: { now(): number } };\nconst performanceNow = globalThis.performance.now.bind(globalThis.performance);\n\nexport class StopWatch {\n\n\tprivate _startTime: number;\n\tprivate _stopTime: number;\n\n\tprivate readonly _now: () => number;\n\n\tpublic static create(highResolution?: boolean): StopWatch {\n\t\treturn new StopWatch(highResolution);\n\t}\n\n\tconstructor(highResolution?: boolean) {\n\t\tthis._now = highResolution === false ? Date.now : performanceNow;\n\t\tthis._startTime = this._now();\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic stop(): void {\n\t\tthis._stopTime = this._now();\n\t}\n\n\tpublic reset(): void {\n\t\tthis._startTime = this._now();\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic elapsed(): number {\n\t\tif (this._stopTime !== -1) {\n\t\t\treturn this._stopTime - this._startTime;\n\t\t}\n\t\treturn this._now() - this._startTime;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancelablePromise } from './async.js';\nimport { CancellationToken } from './cancellation.js';\nimport { diffSets } from './collections.js';\nimport { onUnexpectedError } from './errors.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { combinedDisposable, Disposable, DisposableMap, DisposableStore, IDisposable, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { IObservable, IObservableWithChange, IObserver } from './observable.js';\nimport { StopWatch } from './stopwatch.js';\nimport { MicrotaskDelay } from './symbols.js';\n\n\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever an emitter with listeners is disposed. That is a sign of code smell.\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableDisposeWithListenerWarning = false\n\t// || Boolean(\"TRUE\") // causes a linter warning so that it cannot be pushed\n\t;\n\n\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a snapshotted event is used repeatedly without cleanup.\n// See https://github.com/microsoft/vscode/issues/142851\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableSnapshotPotentialLeakWarning = false\n\t// || Boolean(\"TRUE\") // causes a linter warning so that it cannot be pushed\n\t;\n\n/**\n * An event with zero or one parameters that can be subscribed to. The event is a function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => unknown, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\tfunction _addLeakageTraceLogic(options: EmitterOptions) {\n\t\tif (_enableSnapshotPotentialLeakWarning) {\n\t\t\tconst { onDidAddListener: origListenerDidAdd } = options;\n\t\t\tconst stack = Stacktrace.create();\n\t\t\tlet count = 0;\n\t\t\toptions.onDidAddListener = () => {\n\t\t\t\tif (++count === 2) {\n\t\t\t\t\tconsole.warn('snapshotted emitter LIKELY used public and SHOULD HAVE BEEN created with DisposableStore. snapshotted here');\n\t\t\t\t\tstack.print();\n\t\t\t\t}\n\t\t\t\torigListenerDidAdd?.();\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Given an event, returns another event which debounces calls and defers the listeners to a later task via a shared\n\t * `setTimeout`. The event is converted into a signal (`Event<void>`) to avoid additional object creation as a\n\t * result of merging events and to try prevent race conditions that could arise when using related deferred and\n\t * non-deferred events.\n\t *\n\t * This is useful for deferring non-critical work (eg. general UI updates) to ensure it does not block critical work\n\t * (eg. latency of keypress to text rendered).\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The event source for the new event.\n\t * @param disposable A disposable store to add the new EventEmitter to.\n\t */\n\texport function defer(event: Event<unknown>, disposable?: DisposableStore): Event<void> {\n\t\treturn debounce<unknown, void>(event, () => void 0, 0, undefined, true, undefined, disposable);\n\t}\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t *\n\t * @param event The event source for the new event.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable | undefined = undefined;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event, returns another event which only fires once, and only when the condition is met.\n\t *\n\t * @param event The event source for the new event.\n\t */\n\texport function onceIf<T>(event: Event<T>, condition: (e: T) => boolean): Event<T> {\n\t\treturn Event.once(Event.filter(event, condition));\n\t}\n\n\t/**\n\t * Maps an event of one type into an event of another type using a mapping function, similar to how\n\t * `Array.prototype.map` works.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The event source for the new event.\n\t * @param map The mapping function.\n\t * @param disposable A disposable store to add the new EventEmitter to.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O, disposable?: DisposableStore): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables), disposable);\n\t}\n\n\t/**\n\t * Wraps an event in another event that performs some function on the event object before firing.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The event source for the new event.\n\t * @param each The function to perform on the event object.\n\t * @param disposable A disposable store to add the new EventEmitter to.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void, disposable?: DisposableStore): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n\t}\n\n\t/**\n\t * Wraps an event in another event that fires only when some condition is met.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The event source for the new event.\n\t * @param filter The filter function that defines the condition. The event will fire for the object if this function\n\t * returns true.\n\t * @param disposable A disposable store to add the new EventEmitter to.\n\t */\n\texport function filter<T, U>(event: Event<T | U>, filter: (e: T | U) => e is T, disposable?: DisposableStore): Event<T>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean, disposable?: DisposableStore): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R, disposable?: DisposableStore): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean, disposable?: DisposableStore): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\tconst disposable = combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e))));\n\t\t\treturn addAndReturnDisposable(disposable, disposables);\n\t\t};\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O, disposable?: DisposableStore): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t}, disposable);\n\t}\n\n\tfunction snapshot<T>(event: Event<T>, disposable: DisposableStore | undefined): Event<T> {\n\t\tlet listener: IDisposable | undefined;\n\n\t\tconst options: EmitterOptions | undefined = {\n\t\t\tonWillAddFirstListener() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonDidRemoveLastListener() {\n\t\t\t\tlistener?.dispose();\n\t\t\t}\n\t\t};\n\n\t\tif (!disposable) {\n\t\t\t_addLeakageTraceLogic(options);\n\t\t}\n\n\t\tconst emitter = new Emitter<T>(options);\n\n\t\tdisposable?.add(emitter);\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Adds the IDisposable to the store if it's set, and returns it. Useful to\n\t * Event function implementation.\n\t */\n\tfunction addAndReturnDisposable<T extends IDisposable>(d: T, store: DisposableStore | IDisposable[] | undefined): T {\n\t\tif (store instanceof Array) {\n\t\t\tstore.push(d);\n\t\t} else if (store) {\n\t\t\tstore.add(d);\n\t\t}\n\t\treturn d;\n\t}\n\n\t/**\n\t * Given an event, creates a new emitter that event that will debounce events based on {@link delay} and give an\n\t * array event object of all events that fired.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The original event to debounce.\n\t * @param merge A function that reduces all events into a single event.\n\t * @param delay The number of milliseconds to debounce.\n\t * @param leading Whether to fire a leading event without debouncing.\n\t * @param flushOnListenerRemove Whether to fire all debounced events when a listener is removed. If this is not\n\t * specified, some events could go missing. Use this if it's important that all events are processed, even if the\n\t * listener gets disposed before the debounced event fires.\n\t * @param leakWarningThreshold See {@link EmitterOptions.leakWarningThreshold}.\n\t * @param disposable A disposable store to register the debounce emitter to.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number | typeof MicrotaskDelay, leading?: boolean, flushOnListenerRemove?: boolean, leakWarningThreshold?: number, disposable?: DisposableStore): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number | typeof MicrotaskDelay, leading?: boolean, flushOnListenerRemove?: boolean, leakWarningThreshold?: number, disposable?: DisposableStore): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number | typeof MicrotaskDelay = 100, leading = false, flushOnListenerRemove = false, leakWarningThreshold?: number, disposable?: DisposableStore): Event<O> {\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: Timeout | undefined | null = undefined;\n\t\tlet numDebouncedCalls = 0;\n\t\tlet doFire: (() => void) | undefined;\n\n\t\tconst options: EmitterOptions | undefined = {\n\t\t\tleakWarningThreshold,\n\t\t\tonWillAddFirstListener() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tdoFire = () => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t};\n\n\t\t\t\t\tif (typeof delay === 'number') {\n\t\t\t\t\t\tif (handle) {\n\t\t\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\t\t}\n\t\t\t\t\t\thandle = setTimeout(doFire, delay);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (handle === undefined) {\n\t\t\t\t\t\t\thandle = null;\n\t\t\t\t\t\t\tqueueMicrotask(doFire);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tonWillRemoveListener() {\n\t\t\t\tif (flushOnListenerRemove && numDebouncedCalls > 0) {\n\t\t\t\t\tdoFire?.();\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDidRemoveLastListener() {\n\t\t\t\tdoFire = undefined;\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t};\n\n\t\tif (!disposable) {\n\t\t\t_addLeakageTraceLogic(options);\n\t\t}\n\n\t\tconst emitter = new Emitter<O>(options);\n\n\t\tdisposable?.add(emitter);\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces an event, firing after some delay (default=0) with an array of all event original objects.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function accumulate<T>(event: Event<T>, delay: number | typeof MicrotaskDelay = 0, disposable?: DisposableStore): Event<T[]> {\n\t\treturn Event.debounce<T, T[]>(event, (last, e) => {\n\t\t\tif (!last) {\n\t\t\t\treturn [e];\n\t\t\t}\n\t\t\tlast.push(e);\n\t\t\treturn last;\n\t\t}, delay, undefined, true, undefined, disposable);\n\t}\n\n\t/**\n\t * Filters an event such that some condition is _not_ met more than once in a row, effectively ensuring duplicate\n\t * event objects from different sources do not fire the same event object.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The event source for the new event.\n\t * @param equals The equality condition.\n\t * @param disposable A disposable store to add the new EventEmitter to.\n\t *\n\t * @example\n\t * ```\n\t * // Fire only one time when a single window is opened or focused\n\t * Event.latch(Event.any(onDidOpenWindow, onDidFocusWindow))\n\t * ```\n\t */\n\texport function latch<T>(event: Event<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b, disposable?: DisposableStore): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || !equals(value, cache);\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t}, disposable);\n\t}\n\n\t/**\n\t * Splits an event whose parameter is a union type into 2 separate events for each type in the union.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @example\n\t * ```\n\t * const event = new EventEmitter<number | undefined>().event;\n\t * const [numberEvent, undefinedEvent] = Event.split(event, isUndefined);\n\t * ```\n\t *\n\t * @param event The event source for the new event.\n\t * @param isT A function that determines what event is of the first type.\n\t * @param disposable A disposable store to add the new EventEmitter to.\n\t */\n\texport function split<T, U>(event: Event<T | U>, isT: (e: T | U) => e is T, disposable?: DisposableStore): [Event<T>, Event<U>] {\n\t\treturn [\n\t\t\tEvent.filter(event, isT, disposable),\n\t\t\tEvent.filter(event, e => !isT(e), disposable) as Event<U>,\n\t\t];\n\t}\n\n\t/**\n\t * Buffers an event until it has a listener attached.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The event source for the new event.\n\t * @param flushAfterTimeout Determines whether to flush the buffer after a timeout immediately or after a\n\t * `setTimeout` when the first event listener is added.\n\t * @param _buffer Internal: A source event array used for tests.\n\t *\n\t * @example\n\t * ```\n\t * // Start accumulating events, when the first listener is attached, flush\n\t * // the event after a timeout such that multiple listeners attached before\n\t * // the timeout would receive the event\n\t * this.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, flushAfterTimeout = false, _buffer: T[] = [], disposable?: DisposableStore): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tif (disposable) {\n\t\t\tdisposable.add(listener);\n\t\t}\n\n\t\tconst flush = () => {\n\t\t\tbuffer?.forEach(e => emitter.fire(e));\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonWillAddFirstListener() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t\tif (disposable) {\n\t\t\t\t\t\tdisposable.add(listener);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonDidAddFirstListener() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (flushAfterTimeout) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonDidRemoveLastListener() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\tif (disposable) {\n\t\t\tdisposable.add(emitter);\n\t\t}\n\n\t\treturn emitter.event;\n\t}\n\t/**\n\t * Wraps the event in an {@link IChainableEvent}, allowing a more functional programming style.\n\t *\n\t * @example\n\t * ```\n\t * // Normal\n\t * const onEnterPressNormal = Event.filter(\n\t *   Event.map(onKeyPress.event, e => new StandardKeyboardEvent(e)),\n\t *   e.keyCode === KeyCode.Enter\n\t * ).event;\n\t *\n\t * // Using chain\n\t * const onEnterPressChain = Event.chain(onKeyPress.event, $ => $\n\t *   .map(e => new StandardKeyboardEvent(e))\n\t *   .filter(e => e.keyCode === KeyCode.Enter)\n\t * );\n\t * ```\n\t */\n\texport function chain<T, R>(event: Event<T>, sythensize: ($: IChainableSythensis<T>) => IChainableSythensis<R>): Event<R> {\n\t\tconst fn: Event<R> = (listener, thisArgs, disposables) => {\n\t\t\tconst cs = sythensize(new ChainableSynthesis()) as ChainableSynthesis;\n\t\t\treturn event(function (value) {\n\t\t\t\tconst result = cs.evaluate(value);\n\t\t\t\tif (result !== HaltChainable) {\n\t\t\t\t\tlistener.call(thisArgs, result);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\n\t\treturn fn;\n\t}\n\n\tconst HaltChainable = Symbol('HaltChainable');\n\n\tclass ChainableSynthesis implements IChainableSythensis<any> {\n\t\tprivate readonly steps: ((input: any) => unknown)[] = [];\n\n\t\tmap<O>(fn: (i: any) => O): this {\n\t\t\tthis.steps.push(fn);\n\t\t\treturn this;\n\t\t}\n\n\t\tforEach(fn: (i: any) => void): this {\n\t\t\tthis.steps.push(v => {\n\t\t\t\tfn(v);\n\t\t\t\treturn v;\n\t\t\t});\n\t\t\treturn this;\n\t\t}\n\n\t\tfilter(fn: (e: any) => boolean): this {\n\t\t\tthis.steps.push(v => fn(v) ? v : HaltChainable);\n\t\t\treturn this;\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: any) => R, initial?: R | undefined): this {\n\t\t\tlet last = initial;\n\t\t\tthis.steps.push(v => {\n\t\t\t\tlast = merge(last, v);\n\t\t\t\treturn last;\n\t\t\t});\n\t\t\treturn this;\n\t\t}\n\n\t\tlatch(equals: (a: any, b: any) => boolean = (a, b) => a === b): ChainableSynthesis {\n\t\t\tlet firstCall = true;\n\t\t\tlet cache: any;\n\t\t\tthis.steps.push(value => {\n\t\t\t\tconst shouldEmit = firstCall || !equals(value, cache);\n\t\t\t\tfirstCall = false;\n\t\t\t\tcache = value;\n\t\t\t\treturn shouldEmit ? value : HaltChainable;\n\t\t\t});\n\n\t\t\treturn this;\n\t\t}\n\n\t\tpublic evaluate(value: any) {\n\t\t\tfor (const step of this.steps) {\n\t\t\t\tvalue = step(value);\n\t\t\t\tif (value === HaltChainable) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\t}\n\n\texport interface IChainableSythensis<T> {\n\t\tmap<O>(fn: (i: T) => O): IChainableSythensis<O>;\n\t\tforEach(fn: (i: T) => void): IChainableSythensis<T>;\n\t\tfilter<R extends T>(fn: (e: T) => e is R): IChainableSythensis<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableSythensis<T>;\n\t\treduce<R>(merge: (last: R, event: T) => R, initial: R): IChainableSythensis<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R): IChainableSythensis<R>;\n\t\tlatch(equals?: (a: T, b: T) => boolean): IChainableSythensis<T>;\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\t/**\n\t * Creates an {@link Event} from a node event emitter.\n\t */\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\t/**\n\t * Creates an {@link Event} from a DOM event emitter.\n\t */\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\t/**\n\t * Creates a promise out of an event, using the {@link Event.once} helper.\n\t */\n\texport function toPromise<T>(event: Event<T>, disposables?: IDisposable[] | DisposableStore): CancelablePromise<T> {\n\t\tlet cancelRef: () => void;\n\t\tconst promise = new Promise((resolve, reject) => {\n\t\t\tconst listener = once(event)(resolve, null, disposables);\n\t\t\t// not resolved, matching the behavior of a normal disposal\n\t\t\tcancelRef = () => listener.dispose();\n\t\t}) as CancelablePromise<T>;\n\t\tpromise.cancel = cancelRef!;\n\n\t\treturn promise;\n\t}\n\n\t/**\n\t * A convenience function for forwarding an event to another emitter which\n\t * improves readability.\n\t *\n\t * This is similar to {@link Relay} but allows instantiating and forwarding\n\t * on a single line and also allows for multiple source events.\n\t * @param from The event to forward.\n\t * @param to The emitter to forward the event to.\n\t * @example\n\t * Event.forward(event, emitter);\n\t * // equivalent to\n\t * event(e => emitter.fire(e));\n\t * // equivalent to\n\t * event(emitter.fire, emitter);\n\t */\n\texport function forward<T>(from: Event<T>, to: Emitter<T>): IDisposable {\n\t\treturn from(e => to.fire(e));\n\t}\n\n\t/**\n\t * Adds a listener to an event and calls the listener immediately with undefined as the event object.\n\t *\n\t * @example\n\t * ```\n\t * // Initialize the UI and update it when dataChangeEvent fires\n\t * runAndSubscribe(dataChangeEvent, () => this._updateUI());\n\t * ```\n\t */\n\texport function runAndSubscribe<T>(event: Event<T>, handler: (e: T) => unknown, initial: T): IDisposable;\n\texport function runAndSubscribe<T>(event: Event<T>, handler: (e: T | undefined) => unknown): IDisposable;\n\texport function runAndSubscribe<T>(event: Event<T>, handler: (e: T | undefined) => unknown, initial?: T): IDisposable {\n\t\thandler(initial);\n\t\treturn event(e => handler(e));\n\t}\n\n\tclass EmitterObserver<T> implements IObserver {\n\n\t\treadonly emitter: Emitter<T>;\n\n\t\tprivate _counter = 0;\n\t\tprivate _hasChanged = false;\n\n\t\tconstructor(readonly _observable: IObservable<T>, store: DisposableStore | undefined) {\n\t\t\tconst options: EmitterOptions = {\n\t\t\t\tonWillAddFirstListener: () => {\n\t\t\t\t\t_observable.addObserver(this);\n\n\t\t\t\t\t// Communicate to the observable that we received its current value and would like to be notified about future changes.\n\t\t\t\t\tthis._observable.reportChanges();\n\t\t\t\t},\n\t\t\t\tonDidRemoveLastListener: () => {\n\t\t\t\t\t_observable.removeObserver(this);\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (!store) {\n\t\t\t\t_addLeakageTraceLogic(options);\n\t\t\t}\n\t\t\tthis.emitter = new Emitter<T>(options);\n\t\t\tif (store) {\n\t\t\t\tstore.add(this.emitter);\n\t\t\t}\n\t\t}\n\n\t\tbeginUpdate<T>(_observable: IObservable<T>): void {\n\t\t\t// assert(_observable === this.obs);\n\t\t\tthis._counter++;\n\t\t}\n\n\t\thandlePossibleChange<T>(_observable: IObservable<T>): void {\n\t\t\t// assert(_observable === this.obs);\n\t\t}\n\n\t\thandleChange<T, TChange>(_observable: IObservableWithChange<T, TChange>, _change: TChange): void {\n\t\t\t// assert(_observable === this.obs);\n\t\t\tthis._hasChanged = true;\n\t\t}\n\n\t\tendUpdate<T>(_observable: IObservable<T>): void {\n\t\t\t// assert(_observable === this.obs);\n\t\t\tthis._counter--;\n\t\t\tif (this._counter === 0) {\n\t\t\t\tthis._observable.reportChanges();\n\t\t\t\tif (this._hasChanged) {\n\t\t\t\t\tthis._hasChanged = false;\n\t\t\t\t\tthis.emitter.fire(this._observable.get());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates an event emitter that is fired when the observable changes.\n\t * Each listeners subscribes to the emitter.\n\t */\n\texport function fromObservable<T>(obs: IObservable<T>, store?: DisposableStore): Event<T> {\n\t\tconst observer = new EmitterObserver(obs, store);\n\t\treturn observer.emitter.event;\n\t}\n\n\t/**\n\t * Each listener is attached to the observable directly.\n\t */\n\texport function fromObservableLight(observable: IObservable<unknown>): Event<void> {\n\t\treturn (listener, thisArgs, disposables) => {\n\t\t\tlet count = 0;\n\t\t\tlet didChange = false;\n\t\t\tconst observer: IObserver = {\n\t\t\t\tbeginUpdate() {\n\t\t\t\t\tcount++;\n\t\t\t\t},\n\t\t\t\tendUpdate() {\n\t\t\t\t\tcount--;\n\t\t\t\t\tif (count === 0) {\n\t\t\t\t\t\tobservable.reportChanges();\n\t\t\t\t\t\tif (didChange) {\n\t\t\t\t\t\t\tdidChange = false;\n\t\t\t\t\t\t\tlistener.call(thisArgs);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\thandlePossibleChange() {\n\t\t\t\t\t// noop\n\t\t\t\t},\n\t\t\t\thandleChange() {\n\t\t\t\t\tdidChange = true;\n\t\t\t\t}\n\t\t\t};\n\t\t\tobservable.addObserver(observer);\n\t\t\tobservable.reportChanges();\n\t\t\tconst disposable = {\n\t\t\t\tdispose() {\n\t\t\t\t\tobservable.removeObserver(observer);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\tdisposables.add(disposable);\n\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\tdisposables.push(disposable);\n\t\t\t}\n\n\t\t\treturn disposable;\n\t\t};\n\t}\n}\n\nexport interface EmitterOptions {\n\t/**\n\t * Optional function that's called *before* the very first listener is added\n\t */\n\tonWillAddFirstListener?: Function;\n\t/**\n\t * Optional function that's called *after* the very first listener is added\n\t */\n\tonDidAddFirstListener?: Function;\n\t/**\n\t * Optional function that's called after a listener is added\n\t */\n\tonDidAddListener?: Function;\n\t/**\n\t * Optional function that's called *after* remove the very last listener\n\t */\n\tonDidRemoveLastListener?: Function;\n\t/**\n\t * Optional function that's called *before* a listener is removed\n\t */\n\tonWillRemoveListener?: Function;\n\t/**\n\t * Optional function that's called when a listener throws an error. Defaults to\n\t * {@link onUnexpectedError}\n\t */\n\tonListenerError?: (e: any) => void;\n\t/**\n\t * Number of listeners that are allowed before assuming a leak. Default to\n\t * a globally configured value\n\t *\n\t * @see setGlobalLeakWarningThreshold\n\t */\n\tleakWarningThreshold?: number;\n\t/**\n\t * Pass in a delivery queue, which is useful for ensuring\n\t * in order event delivery across multiple emitters.\n\t */\n\tdeliveryQueue?: EventDeliveryQueue;\n\n\t/** ONLY enable this during development */\n\t_profName?: string;\n}\n\n\nexport class EventProfiling {\n\n\tstatic readonly all = new Set<EventProfiling>();\n\n\tprivate static _idPool = 0;\n\n\treadonly name: string;\n\tpublic listenerCount: number = 0;\n\tpublic invocationCount = 0;\n\tpublic elapsedOverall = 0;\n\tpublic durations: number[] = [];\n\n\tprivate _stopWatch?: StopWatch;\n\n\tconstructor(name: string) {\n\t\tthis.name = `${name}_${EventProfiling._idPool++}`;\n\t\tEventProfiling.all.add(this);\n\t}\n\n\tstart(listenerCount: number): void {\n\t\tthis._stopWatch = new StopWatch();\n\t\tthis.listenerCount = listenerCount;\n\t}\n\n\tstop(): void {\n\t\tif (this._stopWatch) {\n\t\t\tconst elapsed = this._stopWatch.elapsed();\n\t\t\tthis.durations.push(elapsed);\n\t\t\tthis.elapsedOverall += elapsed;\n\t\t\tthis.invocationCount += 1;\n\t\t\tthis._stopWatch = undefined;\n\t\t}\n\t}\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate static _idPool = 1;\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\tprivate readonly _errorHandler: (err: Error) => void,\n\t\treadonly threshold: number,\n\t\treadonly name: string = (LeakageMonitor._idPool++).toString(16).padStart(3, '0')\n\t) { }\n\n\tdispose(): void {\n\t\tthis._stacks?.clear();\n\t}\n\n\tcheck(stack: Stacktrace, listenerCount: number): undefined | (() => void) {\n\n\t\tconst threshold = this.threshold;\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst count = (this._stacks.get(stack.value) || 0);\n\t\tthis._stacks.set(stack.value, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\tconst [topStack, topCount] = this.getMostFrequentStack()!;\n\t\t\tconst message = `[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`;\n\t\t\tconsole.warn(message);\n\t\t\tconsole.warn(topStack!);\n\n\t\t\tconst error = new ListenerLeakError(message, topStack);\n\t\t\tthis._errorHandler(error);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack.value) || 0);\n\t\t\tthis._stacks!.set(stack.value, count - 1);\n\t\t};\n\t}\n\n\tgetMostFrequentStack(): [string, number] | undefined {\n\t\tif (!this._stacks) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet topStack: [string, number] | undefined;\n\t\tlet topCount: number = 0;\n\t\tfor (const [stack, count] of this._stacks) {\n\t\t\tif (!topStack || topCount < count) {\n\t\t\t\ttopStack = [stack, count];\n\t\t\t\ttopCount = count;\n\t\t\t}\n\t\t}\n\t\treturn topStack;\n\t}\n}\n\nclass Stacktrace {\n\n\tstatic create() {\n\t\tconst err = new Error();\n\t\treturn new Stacktrace(err.stack ?? '');\n\t}\n\n\tprivate constructor(readonly value: string) { }\n\n\tprint() {\n\t\tconsole.warn(this.value.split('\\n').slice(2).join('\\n'));\n\t}\n}\n\n// error that is logged when going over the configured listener threshold\nexport class ListenerLeakError extends Error {\n\tconstructor(message: string, stack: string) {\n\t\tsuper(message);\n\t\tthis.name = 'ListenerLeakError';\n\t\tthis.stack = stack;\n\t}\n}\n\n// SEVERE error that is logged when having gone way over the configured listener\n// threshold so that the emitter refuses to accept more listeners\nexport class ListenerRefusalError extends Error {\n\tconstructor(message: string, stack: string) {\n\t\tsuper(message);\n\t\tthis.name = 'ListenerRefusalError';\n\t\tthis.stack = stack;\n\t}\n}\n\nlet id = 0;\nclass UniqueContainer<T> {\n\tstack?: Stacktrace;\n\tpublic id = id++;\n\tconstructor(public readonly value: T) { }\n}\nconst compactionThreshold = 2;\n\ntype ListenerContainer<T> = UniqueContainer<(data: T) => void>;\ntype ListenerOrListeners<T> = (ListenerContainer<T> | undefined)[] | ListenerContainer<T>;\n\nconst forEachListener = <T>(listeners: ListenerOrListeners<T>, fn: (c: ListenerContainer<T>) => void) => {\n\tif (listeners instanceof UniqueContainer) {\n\t\tfn(listeners);\n\t} else {\n\t\tfor (let i = 0; i < listeners.length; i++) {\n\t\t\tconst l = listeners[i];\n\t\t\tif (l) {\n\t\t\t\tfn(l);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate readonly _perfMon?: EventProfiling;\n\tprivate _disposed?: true;\n\tprivate _event?: Event<T>;\n\n\t/**\n\t * A listener, or list of listeners. A single listener is the most common\n\t * for event emitters (#185789), so we optimize that special case to avoid\n\t * wrapping it in an array (just like Node.js itself.)\n\t *\n\t * A list of listeners never 'downgrades' back to a plain function if\n\t * listeners are removed, for two reasons:\n\t *\n\t *  1. That's complicated (especially with the deliveryQueue)\n\t *  2. A listener with >1 listener is likely to have >1 listener again at\n\t *     some point, and swapping between arrays and functions may[citation needed]\n\t *     introduce unnecessary work and garbage.\n\t *\n\t * The array listeners can be 'sparse', to avoid reallocating the array\n\t * whenever any listener is added or removed. If more than `1 / compactionThreshold`\n\t * of the array is empty, only then is it resized.\n\t */\n\tprotected _listeners?: ListenerOrListeners<T>;\n\n\t/**\n\t * Always to be defined if _listeners is an array. It's no longer a true\n\t * queue, but holds the dispatching 'state'. If `fire()` is called on an\n\t * emitter, any work left in the _deliveryQueue is finished first.\n\t */\n\tprivate _deliveryQueue?: EventDeliveryQueuePrivate;\n\tprotected _size = 0;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = (_globalLeakWarningThreshold > 0 || this._options?.leakWarningThreshold)\n\t\t\t? new LeakageMonitor(options?.onListenerError ?? onUnexpectedError, this._options?.leakWarningThreshold ?? _globalLeakWarningThreshold) :\n\t\t\tundefined;\n\t\tthis._perfMon = this._options?._profName ? new EventProfiling(this._options._profName) : undefined;\n\t\tthis._deliveryQueue = this._options?.deliveryQueue as EventDeliveryQueuePrivate | undefined;\n\t}\n\n\tdispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\n\t\t\t// It is bad to have listeners at the time of disposing an emitter, it is worst to have listeners keep the emitter\n\t\t\t// alive via the reference that's embedded in their disposables. Therefore we loop over all remaining listeners and\n\t\t\t// unset their subscriptions/disposables. Looping and blaming remaining listeners is done on next tick because the\n\t\t\t// the following programming pattern is very popular:\n\t\t\t//\n\t\t\t// const someModel = this._disposables.add(new ModelObject()); // (1) create and register model\n\t\t\t// this._disposables.add(someModel.onDidChange(() => { ... }); // (2) subscribe and register model-event listener\n\t\t\t// ...later...\n\t\t\t// this._disposables.dispose(); disposes (1) then (2): don't warn after (1) but after the \"overall dispose\" is done\n\n\t\t\tif (this._deliveryQueue?.current === this) {\n\t\t\t\tthis._deliveryQueue.reset();\n\t\t\t}\n\t\t\tif (this._listeners) {\n\t\t\t\tif (_enableDisposeWithListenerWarning) {\n\t\t\t\t\tconst listeners = this._listeners;\n\t\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\t\tforEachListener(listeners, l => l.stack?.print());\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis._listeners = undefined;\n\t\t\t\tthis._size = 0;\n\t\t\t}\n\t\t\tthis._options?.onDidRemoveLastListener?.();\n\t\t\tthis._leakageMon?.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tthis._event ??= (callback: (e: T) => unknown, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\tif (this._leakageMon && this._size > this._leakageMon.threshold ** 2) {\n\t\t\t\tconst message = `[${this._leakageMon.name}] REFUSES to accept new listeners because it exceeded its threshold by far (${this._size} vs ${this._leakageMon.threshold})`;\n\t\t\t\tconsole.warn(message);\n\n\t\t\t\tconst tuple = this._leakageMon.getMostFrequentStack() ?? ['UNKNOWN stack', -1];\n\t\t\t\tconst error = new ListenerRefusalError(`${message}. HINT: Stack shows most frequent listener (${tuple[1]}-times)`, tuple[0]);\n\t\t\t\tconst errorHandler = this._options?.onListenerError || onUnexpectedError;\n\t\t\t\terrorHandler(error);\n\n\t\t\t\treturn Disposable.None;\n\t\t\t}\n\n\t\t\tif (this._disposed) {\n\t\t\t\t// todo: should we warn if a listener is added to a disposed emitter? This happens often\n\t\t\t\treturn Disposable.None;\n\t\t\t}\n\n\t\t\tif (thisArgs) {\n\t\t\t\tcallback = callback.bind(thisArgs);\n\t\t\t}\n\n\t\t\tconst contained = new UniqueContainer(callback);\n\n\t\t\tlet removeMonitor: Function | undefined;\n\t\t\tlet stack: Stacktrace | undefined;\n\t\t\tif (this._leakageMon && this._size >= Math.ceil(this._leakageMon.threshold * 0.2)) {\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tcontained.stack = Stacktrace.create();\n\t\t\t\tremoveMonitor = this._leakageMon.check(contained.stack, this._size + 1);\n\t\t\t}\n\n\t\t\tif (_enableDisposeWithListenerWarning) {\n\t\t\t\tcontained.stack = stack ?? Stacktrace.create();\n\t\t\t}\n\n\t\t\tif (!this._listeners) {\n\t\t\t\tthis._options?.onWillAddFirstListener?.(this);\n\t\t\t\tthis._listeners = contained;\n\t\t\t\tthis._options?.onDidAddFirstListener?.(this);\n\t\t\t} else if (this._listeners instanceof UniqueContainer) {\n\t\t\t\tthis._deliveryQueue ??= new EventDeliveryQueuePrivate();\n\t\t\t\tthis._listeners = [this._listeners, contained];\n\t\t\t} else {\n\t\t\t\tthis._listeners.push(contained);\n\t\t\t}\n\t\t\tthis._options?.onDidAddListener?.(this);\n\n\t\t\tthis._size++;\n\n\n\t\t\tconst result = toDisposable(() => {\n\t\t\t\tremoveMonitor?.();\n\t\t\t\tthis._removeListener(contained);\n\t\t\t});\n\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\tdisposables.add(result);\n\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\tdisposables.push(result);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\treturn this._event;\n\t}\n\n\tprivate _removeListener(listener: ListenerContainer<T>) {\n\t\tthis._options?.onWillRemoveListener?.(this);\n\n\t\tif (!this._listeners) {\n\t\t\treturn; // expected if a listener gets disposed\n\t\t}\n\n\t\tif (this._size === 1) {\n\t\t\tthis._listeners = undefined;\n\t\t\tthis._options?.onDidRemoveLastListener?.(this);\n\t\t\tthis._size = 0;\n\t\t\treturn;\n\t\t}\n\n\t\t// size > 1 which requires that listeners be a list:\n\t\tconst listeners = this._listeners as (ListenerContainer<T> | undefined)[];\n\n\t\tconst index = listeners.indexOf(listener);\n\t\tif (index === -1) {\n\t\t\tconsole.log('disposed?', this._disposed);\n\t\t\tconsole.log('size?', this._size);\n\t\t\tconsole.log('arr?', JSON.stringify(this._listeners));\n\t\t\tthrow new Error('Attempted to dispose unknown listener');\n\t\t}\n\n\t\tthis._size--;\n\t\tlisteners[index] = undefined;\n\n\t\tconst adjustDeliveryQueue = this._deliveryQueue!.current === this;\n\t\tif (this._size * compactionThreshold <= listeners.length) {\n\t\t\tlet n = 0;\n\t\t\tfor (let i = 0; i < listeners.length; i++) {\n\t\t\t\tif (listeners[i]) {\n\t\t\t\t\tlisteners[n++] = listeners[i];\n\t\t\t\t} else if (adjustDeliveryQueue && n < this._deliveryQueue!.end) {\n\t\t\t\t\tthis._deliveryQueue!.end--;\n\t\t\t\t\tif (n < this._deliveryQueue!.i) {\n\t\t\t\t\t\tthis._deliveryQueue!.i--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlisteners.length = n;\n\t\t}\n\t}\n\n\tprivate _deliver(listener: undefined | UniqueContainer<(value: T) => void>, value: T) {\n\t\tif (!listener) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst errorHandler = this._options?.onListenerError || onUnexpectedError;\n\t\tif (!errorHandler) {\n\t\t\tlistener.value(value);\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tlistener.value(value);\n\t\t} catch (e) {\n\t\t\terrorHandler(e);\n\t\t}\n\t}\n\n\t/** Delivers items in the queue. Assumes the queue is ready to go. */\n\tprivate _deliverQueue(dq: EventDeliveryQueuePrivate) {\n\t\tconst listeners = dq.current!._listeners! as (ListenerContainer<T> | undefined)[];\n\t\twhile (dq.i < dq.end) {\n\t\t\t// important: dq.i is incremented before calling deliver() because it might reenter deliverQueue()\n\t\t\tthis._deliver(listeners[dq.i++], dq.value as T);\n\t\t}\n\t\tdq.reset();\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._deliveryQueue?.current) {\n\t\t\tthis._deliverQueue(this._deliveryQueue);\n\t\t\tthis._perfMon?.stop(); // last fire() will have starting perfmon, stop it before starting the next dispatch\n\t\t}\n\n\t\tthis._perfMon?.start(this._size);\n\n\t\tif (!this._listeners) {\n\t\t\t// no-op\n\t\t} else if (this._listeners instanceof UniqueContainer) {\n\t\t\tthis._deliver(this._listeners, event);\n\t\t} else {\n\t\t\tconst dq = this._deliveryQueue!;\n\t\t\tdq.enqueue(this, event, this._listeners.length);\n\t\t\tthis._deliverQueue(dq);\n\t\t}\n\n\t\tthis._perfMon?.stop();\n\t}\n\n\thasListeners(): boolean {\n\t\treturn this._size > 0;\n\t}\n}\n\nexport interface EventDeliveryQueue {\n\t_isEventDeliveryQueue: true;\n}\n\nexport const createEventDeliveryQueue = (): EventDeliveryQueue => new EventDeliveryQueuePrivate();\n\nclass EventDeliveryQueuePrivate implements EventDeliveryQueue {\n\tdeclare _isEventDeliveryQueue: true;\n\n\t/**\n\t * Index in current's listener list.\n\t */\n\tpublic i = -1;\n\n\t/**\n\t * The last index in the listener's list to deliver.\n\t */\n\tpublic end = 0;\n\n\t/**\n\t * Emitter currently being dispatched on. Emitter._listeners is always an array.\n\t */\n\tpublic current?: Emitter<any>;\n\t/**\n\t * Currently emitting value. Defined whenever `current` is.\n\t */\n\tpublic value?: unknown;\n\n\tpublic enqueue<T>(emitter: Emitter<T>, value: T, end: number) {\n\t\tthis.i = 0;\n\t\tthis.end = end;\n\t\tthis.current = emitter;\n\t\tthis.value = value;\n\t}\n\n\tpublic reset() {\n\t\tthis.i = this.end; // force any current emission loop to stop, mainly for during dispose\n\t\tthis.current = undefined;\n\t\tthis.value = undefined;\n\t}\n}\n\nexport interface IWaitUntil {\n\ttoken: CancellationToken;\n\twaitUntil(thenable: Promise<unknown>): void;\n}\n\nexport type IWaitUntilData<T> = Omit<Omit<T, 'waitUntil'>, 'token'>;\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[(ev: T) => void, IWaitUntilData<T>]>;\n\n\tasync fireAsync(data: IWaitUntilData<T>, token: CancellationToken, promiseJoin?: (p: Promise<unknown>, listener: Function) => Promise<unknown>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tforEachListener(this._listeners, listener => this._asyncDeliveryQueue!.push([listener.value, data]));\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<unknown>[] = [];\n\n\t\t\t// eslint-disable-next-line local/code-no-dangerous-type-assertions\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\ttoken,\n\t\t\t\twaitUntil: (p: Promise<unknown>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, listener);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tlistener(event);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\n\t\t\tawait Promise.allSettled(thenables).then(values => {\n\t\t\t\tfor (const value of values) {\n\t\t\t\t\tif (value.status === 'rejected') {\n\t\t\t\t\t\tonUnexpectedError(value.reason);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprotected _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tpublic get isPaused(): boolean {\n\t\treturn this._isPaused !== 0;\n\t}\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tif (this._eventQueue.size > 0) {\n\t\t\t\t\tconst events = Array.from(this._eventQueue);\n\t\t\t\t\tthis._eventQueue.clear();\n\t\t\t\t\tsuper.fire(this._mergeFn(events));\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (this._size) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class DebounceEmitter<T> extends PauseableEmitter<T> {\n\n\tprivate readonly _delay: number;\n\tprivate _handle: Timeout | undefined;\n\n\tconstructor(options: EmitterOptions & { merge: (input: T[]) => T; delay?: number }) {\n\t\tsuper(options);\n\t\tthis._delay = options.delay ?? 100;\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (!this._handle) {\n\t\t\tthis.pause();\n\t\t\tthis._handle = setTimeout(() => {\n\t\t\t\tthis._handle = undefined;\n\t\t\t\tthis.resume();\n\t\t\t}, this._delay);\n\t\t}\n\t\tsuper.fire(event);\n\t}\n}\n\n/**\n * An emitter which queue all events and then process them at the\n * end of the event loop.\n */\nexport class MicrotaskEmitter<T> extends Emitter<T> {\n\tprivate _queuedEvents: T[] = [];\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\toverride fire(event: T): void {\n\n\t\tif (!this.hasListeners()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._queuedEvents.push(event);\n\t\tif (this._queuedEvents.length === 1) {\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tif (this._mergeFn) {\n\t\t\t\t\tsuper.fire(this._mergeFn(this._queuedEvents));\n\t\t\t\t} else {\n\t\t\t\t\tthis._queuedEvents.forEach(e => super.fire(e));\n\t\t\t\t}\n\t\t\t\tthis._queuedEvents = [];\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * An event emitter that multiplexes many events into a single event.\n *\n * @example Listen to the `onData` event of all `Thing`s, dynamically adding and removing `Thing`s\n * to the multiplexer as needed.\n *\n * ```typescript\n * const anythingDataMultiplexer = new EventMultiplexer<{ data: string }>();\n *\n * const thingListeners = DisposableMap<Thing, IDisposable>();\n *\n * thingService.onDidAddThing(thing => {\n *   thingListeners.set(thing, anythingDataMultiplexer.add(thing.onData);\n * });\n * thingService.onDidRemoveThing(thing => {\n *   thingListeners.deleteAndDispose(thing);\n * });\n *\n * anythingDataMultiplexer.event(e => {\n *   console.log('Something fired data ' + e.data)\n * });\n * ```\n */\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonWillAddFirstListener: () => this.onFirstListenerAdd(),\n\t\t\tonDidRemoveLastListener: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(createSingleCallFunction(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null }): void {\n\t\te.listener?.dispose();\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\n\t\tfor (const e of this.events) {\n\t\t\te.listener?.dispose();\n\t\t}\n\t\tthis.events = [];\n\t}\n}\n\nexport interface IDynamicListEventMultiplexer<TEventType> extends IDisposable {\n\treadonly event: Event<TEventType>;\n}\nexport class DynamicListEventMultiplexer<TItem, TEventType> implements IDynamicListEventMultiplexer<TEventType> {\n\tprivate readonly _store = new DisposableStore();\n\n\treadonly event: Event<TEventType>;\n\n\tconstructor(\n\t\titems: TItem[],\n\t\tonAddItem: Event<TItem>,\n\t\tonRemoveItem: Event<TItem>,\n\t\tgetEvent: (item: TItem) => Event<TEventType>\n\t) {\n\t\tconst multiplexer = this._store.add(new EventMultiplexer<TEventType>());\n\t\tconst itemListeners = this._store.add(new DisposableMap<TItem, IDisposable>());\n\n\t\tfunction addItem(instance: TItem) {\n\t\t\titemListeners.set(instance, multiplexer.add(getEvent(instance)));\n\t\t}\n\n\t\t// Existing items\n\t\tfor (const instance of items) {\n\t\t\taddItem(instance);\n\t\t}\n\n\t\t// Added items\n\t\tthis._store.add(onAddItem(instance => {\n\t\t\taddItem(instance);\n\t\t}));\n\n\t\t// Removed items\n\t\tthis._store.add(onRemoveItem(instance => {\n\t\t\titemListeners.deleteAndDispose(instance);\n\t\t}));\n\n\t\tthis.event = multiplexer.event;\n\t}\n\n\tdispose() {\n\t\tthis._store.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate data: { buffers: Function[] }[] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T>;\n\twrapEvent<T>(event: Event<T>, reduce: (last: T | undefined, event: T) => T): Event<T>;\n\twrapEvent<T, O>(event: Event<T>, reduce: (last: O | undefined, event: T) => O, initial: O): Event<O>;\n\twrapEvent<T, O>(event: Event<T>, reduce?: (last: T | O | undefined, event: T) => T | O, initial?: O): Event<O | T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst data = this.data[this.data.length - 1];\n\n\t\t\t\t// Non-reduce scenario\n\t\t\t\tif (!reduce) {\n\t\t\t\t\t// Buffering case\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tdata.buffers.push(() => listener.call(thisArgs, i));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Not buffering case\n\t\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Reduce scenario\n\t\t\t\tconst reduceData = data as typeof data & {\n\t\t\t\t\t/**\n\t\t\t\t\t * The accumulated items that will be reduced.\n\t\t\t\t\t */\n\t\t\t\t\titems?: T[];\n\t\t\t\t\t/**\n\t\t\t\t\t * The reduced result cached to be shared with other listeners.\n\t\t\t\t\t */\n\t\t\t\t\treducedResult?: T | O;\n\t\t\t\t};\n\n\t\t\t\t// Not buffering case\n\t\t\t\tif (!reduceData) {\n\t\t\t\t\t// TODO: Is there a way to cache this reduce call for all listeners?\n\t\t\t\t\tlistener.call(thisArgs, reduce(initial, i));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Buffering case\n\t\t\t\treduceData.items ??= [];\n\t\t\t\treduceData.items.push(i);\n\t\t\t\tif (reduceData.buffers.length === 0) {\n\t\t\t\t\t// Include a single buffered function that will reduce all events when we're done buffering events\n\t\t\t\t\tdata.buffers.push(() => {\n\t\t\t\t\t\t// cache the reduced result so that the value can be shared across all listeners\n\t\t\t\t\t\treduceData.reducedResult ??= initial\n\t\t\t\t\t\t\t? reduceData.items!.reduce(reduce as (last: O | undefined, event: T) => O, initial)\n\t\t\t\t\t\t\t: reduceData.items!.reduce(reduce as (last: T | undefined, event: T) => T);\n\t\t\t\t\t\tlistener.call(thisArgs, reduceData.reducedResult);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst data = { buffers: new Array<Function>() };\n\t\tthis.data.push(data);\n\t\tconst r = fn();\n\t\tthis.data.pop();\n\t\tdata.buffers.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonDidAddFirstListener: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonDidRemoveLastListener: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n\nexport interface IValueWithChangeEvent<T> {\n\treadonly onDidChange: Event<void>;\n\tget value(): T;\n}\n\nexport class ValueWithChangeEvent<T> implements IValueWithChangeEvent<T> {\n\tpublic static const<T>(value: T): IValueWithChangeEvent<T> {\n\t\treturn new ConstValueWithChangeEvent(value);\n\t}\n\n\tprivate readonly _onDidChange = new Emitter<void>();\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(private _value: T) { }\n\n\tget value(): T {\n\t\treturn this._value;\n\t}\n\n\tset value(value: T) {\n\t\tif (value !== this._value) {\n\t\t\tthis._value = value;\n\t\t\tthis._onDidChange.fire(undefined);\n\t\t}\n\t}\n}\n\nclass ConstValueWithChangeEvent<T> implements IValueWithChangeEvent<T> {\n\tpublic readonly onDidChange: Event<void> = Event.None;\n\n\tconstructor(readonly value: T) { }\n}\n\n/**\n * @param handleItem Is called for each item in the set (but only the first time the item is seen in the set).\n * \tThe returned disposable is disposed if the item is no longer in the set.\n */\nexport function trackSetChanges<T>(getData: () => ReadonlySet<T>, onDidChangeData: Event<unknown>, handleItem: (d: T) => IDisposable): IDisposable {\n\tconst map = new DisposableMap<T, IDisposable>();\n\tlet oldData = new Set(getData());\n\tfor (const d of oldData) {\n\t\tmap.set(d, handleItem(d));\n\t}\n\n\tconst store = new DisposableStore();\n\tstore.add(onDidChangeData(() => {\n\t\tconst newData = getData();\n\t\tconst diff = diffSets(oldData, newData);\n\t\tfor (const r of diff.removed) {\n\t\t\tmap.deleteAndDispose(r);\n\t\t}\n\t\tfor (const a of diff.added) {\n\t\t\tmap.set(a, handleItem(a));\n\t\t}\n\t\toldData = new Set(newData);\n\t}));\n\tstore.add(map);\n\treturn store;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from './event.js';\nimport { DisposableStore, IDisposable } from './lifecycle.js';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None = Object.freeze<CancellationToken>({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled = Object.freeze<CancellationToken>({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tthis._parentListener?.dispose();\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n\nexport function cancelOnDispose(store: DisposableStore): CancellationToken {\n\tconst source = new CancellationTokenSource();\n\tstore.add({ dispose() { source.cancel(); } });\n\treturn source.token;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from './cancellation.js';\nimport { IDisposable } from './lifecycle.js';\n\nexport interface CacheResult<T> extends IDisposable {\n\tpromise: Promise<T>;\n}\n\nexport class Cache<T> {\n\n\tprivate result: CacheResult<T> | null = null;\n\tconstructor(private task: (ct: CancellationToken) => Promise<T>) { }\n\n\tget(): CacheResult<T> {\n\t\tif (this.result) {\n\t\t\treturn this.result;\n\t\t}\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tconst promise = this.task(cts.token);\n\n\t\tthis.result = {\n\t\t\tpromise,\n\t\t\tdispose: () => {\n\t\t\t\tthis.result = null;\n\t\t\t\tcts.cancel();\n\t\t\t\tcts.dispose();\n\t\t\t}\n\t\t};\n\n\t\treturn this.result;\n\t}\n}\n\nexport function identity<T>(t: T): T {\n\treturn t;\n}\n\ninterface ICacheOptions<TArg> {\n\t/**\n\t * The cache key is used to identify the cache entry.\n\t * Strict equality is used to compare cache keys.\n\t*/\n\tgetCacheKey: (arg: TArg) => unknown;\n}\n\n/**\n * Uses a LRU cache to make a given parametrized function cached.\n * Caches just the last key/value.\n*/\nexport class LRUCachedFunction<TArg, TComputed> {\n\tprivate lastCache: TComputed | undefined = undefined;\n\tprivate lastArgKey: unknown | undefined = undefined;\n\n\tprivate readonly _fn: (arg: TArg) => TComputed;\n\tprivate readonly _computeKey: (arg: TArg) => unknown;\n\n\tconstructor(fn: (arg: TArg) => TComputed);\n\tconstructor(options: ICacheOptions<TArg>, fn: (arg: TArg) => TComputed);\n\tconstructor(arg1: ICacheOptions<TArg> | ((arg: TArg) => TComputed), arg2?: (arg: TArg) => TComputed) {\n\t\tif (typeof arg1 === 'function') {\n\t\t\tthis._fn = arg1;\n\t\t\tthis._computeKey = identity;\n\t\t} else {\n\t\t\tthis._fn = arg2!;\n\t\t\tthis._computeKey = arg1.getCacheKey;\n\t\t}\n\t}\n\n\tpublic get(arg: TArg): TComputed {\n\t\tconst key = this._computeKey(arg);\n\t\tif (this.lastArgKey !== key) {\n\t\t\tthis.lastArgKey = key;\n\t\t\tthis.lastCache = this._fn(arg);\n\t\t}\n\t\treturn this.lastCache!;\n\t}\n}\n\n/**\n * Uses an unbounded cache to memoize the results of the given function.\n*/\nexport class CachedFunction<TArg, TComputed> {\n\tprivate readonly _map = new Map<TArg, TComputed>();\n\tprivate readonly _map2 = new Map<unknown, TComputed>();\n\tpublic get cachedValues(): ReadonlyMap<TArg, TComputed> {\n\t\treturn this._map;\n\t}\n\n\tprivate readonly _fn: (arg: TArg) => TComputed;\n\tprivate readonly _computeKey: (arg: TArg) => unknown;\n\n\tconstructor(fn: (arg: TArg) => TComputed);\n\tconstructor(options: ICacheOptions<TArg>, fn: (arg: TArg) => TComputed);\n\tconstructor(arg1: ICacheOptions<TArg> | ((arg: TArg) => TComputed), arg2?: (arg: TArg) => TComputed) {\n\t\tif (typeof arg1 === 'function') {\n\t\t\tthis._fn = arg1;\n\t\t\tthis._computeKey = identity;\n\t\t} else {\n\t\t\tthis._fn = arg2!;\n\t\t\tthis._computeKey = arg1.getCacheKey;\n\t\t}\n\t}\n\n\tpublic get(arg: TArg): TComputed {\n\t\tconst key = this._computeKey(arg);\n\t\tif (this._map2.has(key)) {\n\t\t\treturn this._map2.get(key)!;\n\t\t}\n\n\t\tconst value = this._fn(arg);\n\t\tthis._map.set(arg, value);\n\t\tthis._map2.set(key, value);\n\t\treturn value;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nenum LazyValueState {\n\tUninitialized,\n\tRunning,\n\tCompleted,\n}\n\nexport class Lazy<T> {\n\n\tprivate _state = LazyValueState.Uninitialized;\n\tprivate _value?: T;\n\tprivate _error: Error | undefined;\n\n\tconstructor(\n\t\tprivate readonly executor: () => T,\n\t) { }\n\n\t/**\n\t * True if the lazy value has been resolved.\n\t */\n\tget hasValue(): boolean { return this._state === LazyValueState.Completed; }\n\n\t/**\n\t * Get the wrapped value.\n\t *\n\t * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n\t * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n\t */\n\tget value(): T {\n\t\tif (this._state === LazyValueState.Uninitialized) {\n\t\t\tthis._state = LazyValueState.Running;\n\t\t\ttry {\n\t\t\t\tthis._value = this.executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._state = LazyValueState.Completed;\n\t\t\t}\n\t\t} else if (this._state === LazyValueState.Running) {\n\t\t\tthrow new Error('Cannot read the value of a lazy that is being initialized');\n\t\t}\n\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\t/**\n\t * Get the wrapped value without forcing evaluation.\n\t */\n\tget rawValue(): T | undefined { return this._value; }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCachedFunction } from './cache.js';\nimport { CharCode } from './charCode.js';\nimport { Lazy } from './lazy.js';\nimport { Constants } from './uint.js';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\nconst _format2Regexp = /{([^}]+)}/g;\n\n/**\n * Helper to create a string from a template and a string record.\n * Similar to `format` but with objects instead of positional arguments.\n */\nexport function format2(template: string, values: Record<string, unknown>): string {\n\tif (Object.keys(values).length === 0) {\n\t\treturn template;\n\t}\n\treturn template.replace(_format2Regexp, (match, group) => (values[group] ?? match) as string);\n}\n\n/**\n * Encodes the given value so that it can be used as literal value in html attributes.\n *\n * In other words, computes `$val`, such that `attr` in `<div attr=\"$val\" />` has the runtime value `value`.\n * This prevents XSS injection.\n */\nexport function htmlAttributeEncodeValue(value: string): string {\n\treturn value.replace(/[<>\"'&]/g, ch => {\n\t\tswitch (ch) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '\"': return '&quot;';\n\t\t\tcase '\\'': return '&apos;';\n\t\t\tcase '&': return '&amp;';\n\t\t}\n\t\treturn ch;\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Counts how often `substr` occurs inside `value`.\n */\nexport function count(value: string, substr: string): number {\n\tlet result = 0;\n\tlet index = value.indexOf(substr);\n\twhile (index !== -1) {\n\t\tresult++;\n\t\tindex = value.indexOf(substr, index + substr.length);\n\t}\n\treturn result;\n}\n\nexport function truncate(value: string, maxLength: number, suffix = Ellipsis): string {\n\tif (value.length <= maxLength) {\n\t\treturn value;\n\t}\n\n\treturn `${value.substr(0, maxLength)}${suffix}`;\n}\n\nexport function truncateMiddle(value: string, maxLength: number, suffix = Ellipsis): string {\n\tif (value.length <= maxLength) {\n\t\treturn value;\n\t}\n\n\tconst prefixLength = Math.ceil(maxLength / 2) - suffix.length / 2;\n\tconst suffixLength = Math.floor(maxLength / 2) - suffix.length / 2;\n\n\treturn `${value.substr(0, prefixLength)}${suffix}${value.substr(value.length - suffixLength)}`;\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function joinStrings(items: (string | undefined | null | false)[], separator: string): string {\n\treturn items.filter(item => item !== undefined && item !== null && item !== false).join(separator);\n}\n\nexport function splitLines(str: string): string[] {\n\treturn str.split(/\\r\\n|\\r|\\n/);\n}\n\nexport function splitLinesIncludeSeparators(str: string): string[] {\n\tconst linesWithSeparators: string[] = [];\n\tconst splitLinesAndSeparators = str.split(/(\\r\\n|\\r|\\n)/);\n\tfor (let i = 0; i < Math.ceil(splitLinesAndSeparators.length / 2); i++) {\n\t\tlinesWithSeparators.push(splitLinesAndSeparators[2 * i] + (splitLinesAndSeparators[2 * i + 1] ?? ''));\n\t}\n\treturn linesWithSeparators;\n}\n\nexport function indexOfPattern(str: string, re: RegExp) {\n\tconst match = re.exec(str);\n\tif (match) {\n\t\treturn match.index;\n\t}\n\treturn -1;\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function getIndentationLength(str: string): number {\n\tconst idx = firstNonWhitespaceIndex(str);\n\tif (idx === -1) { return str.length; }\n\treturn idx;\n}\n\n/**\n * Function that works identically to String.prototype.replace, except, the\n * replace function is allowed to be async and return a Promise.\n */\nexport function replaceAsync(str: string, search: RegExp, replacer: (match: string, ...args: any[]) => Promise<string>): Promise<string> {\n\tconst parts: (string | Promise<string>)[] = [];\n\n\tlet last = 0;\n\tfor (const match of str.matchAll(search)) {\n\t\tparts.push(str.slice(last, match.index));\n\t\tif (match.index === undefined) {\n\t\t\tthrow new Error('match.index should be defined');\n\t\t}\n\n\t\tlast = match.index + match[0].length;\n\t\tparts.push(replacer(match[0], ...match.slice(1), match.index, str, match.groups));\n\t}\n\n\tparts.push(str.slice(last));\n\n\treturn Promise.all(parts).then(p => p.join(''));\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tconst codeA = a.charCodeAt(aStart);\n\t\tconst codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (codeA >= 128 || codeB >= 128) {\n\t\t\t// not ASCII letters -> fallback to lower-casing strings\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\n\t\t// mapper lower-case ascii letter onto upper-case varinats\n\t\t// [97-122] (lower ascii) --> [65-90] (upper ascii)\n\t\tif (isLowerAsciiLetter(codeA)) {\n\t\t\tcodeA -= 32;\n\t\t}\n\t\tif (isLowerAsciiLetter(codeB)) {\n\t\t\tcodeB -= 32;\n\t\t}\n\n\t\t// compare both code points\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 0) {\n\t\t\tcontinue;\n\t\t}\n\n\t\treturn diff;\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isAsciiDigit(code: number): boolean {\n\treturn code >= CharCode.Digit0 && code <= CharCode.Digit9;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tconst len = Math.min(a.length, b.length);\n\tlet i: number;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tconst len = Math.min(a.length, b.length);\n\tlet i: number;\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport class CodePointIterator {\n\n\tprivate readonly _str: string;\n\tprivate readonly _len: number;\n\tprivate _offset: number;\n\n\tpublic get offset(): number {\n\t\treturn this._offset;\n\t}\n\n\tconstructor(str: string, offset: number = 0) {\n\t\tthis._str = str;\n\t\tthis._len = str.length;\n\t\tthis._offset = offset;\n\t}\n\n\tpublic setOffset(offset: number): void {\n\t\tthis._offset = offset;\n\t}\n\n\tpublic prevCodePoint(): number {\n\t\tconst codePoint = getPrevCodePoint(this._str, this._offset);\n\t\tthis._offset -= (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\treturn codePoint;\n\t}\n\n\tpublic nextCodePoint(): number {\n\t\tconst codePoint = getNextCodePoint(this._str, this._len, this._offset);\n\t\tthis._offset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\treturn codePoint;\n\t}\n\n\tpublic eol(): boolean {\n\t\treturn (this._offset >= this._len);\n\t}\n}\n\nexport class GraphemeIterator {\n\n\tprivate readonly _iterator: CodePointIterator;\n\n\tpublic get offset(): number {\n\t\treturn this._iterator.offset;\n\t}\n\n\tconstructor(str: string, offset: number = 0) {\n\t\tthis._iterator = new CodePointIterator(str, offset);\n\t}\n\n\tpublic nextGraphemeLength(): number {\n\t\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\t\tconst iterator = this._iterator;\n\t\tconst initialOffset = iterator.offset;\n\n\t\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n\t\twhile (!iterator.eol()) {\n\t\t\tconst offset = iterator.offset;\n\t\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n\t\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\t\t// move iterator back\n\t\t\t\titerator.setOffset(offset);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t\t}\n\t\treturn (iterator.offset - initialOffset);\n\t}\n\n\tpublic prevGraphemeLength(): number {\n\t\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\t\tconst iterator = this._iterator;\n\t\tconst initialOffset = iterator.offset;\n\n\t\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n\t\twhile (iterator.offset > 0) {\n\t\t\tconst offset = iterator.offset;\n\t\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n\t\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\t\t// move iterator back\n\t\t\t\titerator.setOffset(offset);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t\t}\n\t\treturn (initialOffset - iterator.offset);\n\t}\n\n\tpublic eol(): boolean {\n\t\treturn this._iterator.eol();\n\t}\n}\n\nexport function nextCharLength(str: string, initialOffset: number): number {\n\tconst iterator = new GraphemeIterator(str, initialOffset);\n\treturn iterator.nextGraphemeLength();\n}\n\nexport function prevCharLength(str: string, initialOffset: number): number {\n\tconst iterator = new GraphemeIterator(str, initialOffset);\n\treturn iterator.prevGraphemeLength();\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\toffset--;\n\t}\n\tconst endOffset = offset + nextCharLength(str, offset);\n\tconst startOffset = endOffset - prevCharLength(str, endOffset);\n\treturn [startOffset, endOffset];\n}\n\nexport function charCount(str: string): number {\n\tconst iterator = new GraphemeIterator(str);\n\tlet length = 0;\n\twhile (!iterator.eol()) {\n\t\tlength++;\n\t\titerator.nextGraphemeLength();\n\t}\n\treturn length;\n}\n\nlet CONTAINS_RTL: RegExp | undefined = undefined;\n\nfunction makeContainsRtl() {\n\t// Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n\treturn /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\tif (!CONTAINS_RTL) {\n\t\tCONTAINS_RTL = makeContainsRtl();\n\t}\n\n\treturn CONTAINS_RTL.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 - 2EFF   CJK Radicals Supplement\n\t//          2F00 - 2FDF   Kangxi Radicals\n\t//          2FF0 - 2FFF   Ideographic Description Characters\n\t//          3000 - 303F   CJK Symbols and Punctuation\n\t//          3040 - 309F   Hiragana\n\t//          30A0 - 30FF   Katakana\n\t//          3100 - 312F   Bopomofo\n\t//          3130 - 318F   Hangul Compatibility Jamo\n\t//          3190 - 319F   Kanbun\n\t//          31A0 - 31BF   Bopomofo Extended\n\t//          31F0 - 31FF   Katakana Phonetic Extensions\n\t//          3200 - 32FF   Enclosed CJK Letters and Months\n\t//          3300 - 33FF   CJK Compatibility\n\t//          3400 - 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 - 4DFF   Yijing Hexagram Symbols\n\t//          4E00 - 9FFF   CJK Unified Ideographs\n\t//          A000 - A48F   Yi Syllables\n\t//          A490 - A4CF   Yi Radicals\n\t//          AC00 - D7AF   Hangul Syllables\n\t// [IGNORE] D800 - DB7F   High Surrogates\n\t// [IGNORE] DB80 - DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 - DFFF   Low Surrogates\n\t// [IGNORE] E000 - F8FF   Private Use Area\n\t//          F900 - FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 - FE0F   Variation Selectors\n\t// [IGNORE] FE20 - FE2F   Combining Half Marks\n\t// [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 - FE6F   Small Form Variants\n\t// [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n\t//          FF00 - FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 - FFFF   Specials\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n\t\t|| (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n\t\t|| (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n\t\t|| (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129782)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n * The return value can be longer than the given value of `n`. Leading whitespace is always trimmed.\n */\nexport function lcut(text: string, n: number, prefix = ''): string {\n\tconst trimmed = text.trimStart();\n\n\tif (trimmed.length < n) {\n\t\treturn trimmed;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(trimmed)) {\n\t\tif (trimmed.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\tif (i === 0) {\n\t\treturn trimmed;\n\t}\n\n\treturn prefix + trimmed.substring(i).trimStart();\n}\n\n// Defacto standard: https://invisible-island.net/xterm/ctlseqs/ctlseqs.html\nconst CSI_SEQUENCE = /(?:\\x1b\\[|\\x9b)[=?>!]?[\\d;:]*[\"$#'* ]?[a-zA-Z@^`{}|~]/;\nconst OSC_SEQUENCE = /(?:\\x1b\\]|\\x9d).*?(?:\\x1b\\\\|\\x07|\\x9c)/;\nconst ESC_SEQUENCE = /\\x1b(?:[ #%\\(\\)\\*\\+\\-\\.\\/]?[a-zA-Z0-9\\|}~@])/;\nconst CONTROL_SEQUENCES = new RegExp('(?:' + [\n\tCSI_SEQUENCE.source,\n\tOSC_SEQUENCE.source,\n\tESC_SEQUENCE.source,\n].join('|') + ')', 'g');\n\n/** Iterates over parts of a string with CSI sequences */\nexport function* forAnsiStringParts(str: string) {\n\tlet last = 0;\n\tfor (const match of str.matchAll(CONTROL_SEQUENCES)) {\n\t\tif (last !== match.index) {\n\t\t\tyield { isCode: false, str: str.substring(last, match.index) };\n\t\t}\n\n\t\tyield { isCode: true, str: match[0] };\n\t\tlast = match.index + match[0].length;\n\t}\n\n\tif (last !== str.length) {\n\t\tyield { isCode: false, str: str.substring(last) };\n\t}\n}\n\n/**\n * Strips ANSI escape sequences from a string.\n * @param str The dastringa stringo strip the ANSI escape sequences from.\n *\n * @example\n * removeAnsiEscapeCodes('\\u001b[31mHello, World!\\u001b[0m');\n * // 'Hello, World!'\n */\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(CONTROL_SEQUENCES, '');\n\t}\n\n\treturn str;\n}\n\nconst PROMPT_NON_PRINTABLE = /\\\\\\[.*?\\\\\\]/g;\n\n/**\n * Strips ANSI escape sequences from a UNIX-style prompt string (eg. `$PS1`).\n * @param str The string to strip the ANSI escape sequences from.\n *\n * @example\n * removeAnsiEscapeCodesFromPrompt('\\n\\\\[\\u001b[01;34m\\\\]\\\\w\\\\[\\u001b[00m\\\\]\\n\\\\[\\u001b[1;32m\\\\]> \\\\[\\u001b[0m\\\\]');\n * // '\\n\\\\w\\n> '\n */\nexport function removeAnsiEscapeCodesFromPrompt(str: string): string {\n\treturn removeAnsiEscapeCodes(str).replace(PROMPT_NON_PRINTABLE, '');\n}\n\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\tif (idx === -1) {\n\t\treturn str;\n\t}\n\n\tif (str[idx - 1] === '\\r') {\n\t\tidx--;\n\t}\n\n\treturn str.substr(0, idx);\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nfunction breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n\treturn JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n\n//#endregion\n\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset: number, str: string): number {\n\tif (offset === 0) {\n\t\treturn 0;\n\t}\n\n\t// Try to delete emoji part.\n\tconst emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n\tif (emojiOffset !== undefined) {\n\t\treturn emojiOffset;\n\t}\n\n\t// Otherwise, just skip a single code point.\n\tconst iterator = new CodePointIterator(str, offset);\n\titerator.prevCodePoint();\n\treturn iterator.offset;\n}\n\nfunction getOffsetBeforeLastEmojiComponent(initialOffset: number, str: string): number | undefined {\n\t// See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n\t// structure of emojis.\n\tconst iterator = new CodePointIterator(str, initialOffset);\n\tlet codePoint = iterator.prevCodePoint();\n\n\t// Skip modifiers\n\twhile ((isEmojiModifier(codePoint) || codePoint === CodePoint.emojiVariantSelector || codePoint === CodePoint.enclosingKeyCap)) {\n\t\tif (iterator.offset === 0) {\n\t\t\t// Cannot skip modifier, no preceding emoji base.\n\t\t\treturn undefined;\n\t\t}\n\t\tcodePoint = iterator.prevCodePoint();\n\t}\n\n\t// Expect base emoji\n\tif (!isEmojiImprecise(codePoint)) {\n\t\t// Unexpected code point, not a valid emoji.\n\t\treturn undefined;\n\t}\n\n\tlet resultOffset = iterator.offset;\n\n\tif (resultOffset > 0) {\n\t\t// Skip optional ZWJ code points that combine multiple emojis.\n\t\t// In theory, we should check if that ZWJ actually combines multiple emojis\n\t\t// to prevent deleting ZWJs in situations we didn't account for.\n\t\tconst optionalZwjCodePoint = iterator.prevCodePoint();\n\t\tif (optionalZwjCodePoint === CodePoint.zwj) {\n\t\t\tresultOffset = iterator.offset;\n\t\t}\n\t}\n\n\treturn resultOffset;\n}\n\nfunction isEmojiModifier(codePoint: number): boolean {\n\treturn 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\n\nconst enum CodePoint {\n\tzwj = 0x200D,\n\n\t/**\n\t * Variation Selector-16 (VS16)\n\t*/\n\temojiVariantSelector = 0xFE0F,\n\n\t/**\n\t * Combining Enclosing Keycap\n\t */\n\tenclosingKeyCap = 0x20E3,\n\n\tspace = 0x0020,\n}\n\nexport const noBreakWhitespace = '\\xa0';\n\nexport class AmbiguousCharacters {\n\tprivate static readonly ambiguousCharacterData = new Lazy<\n\t\tRecord<\n\t\t\tstring | '_common' | '_default',\n\t\t\t/* code point -> ascii code point */ number[]\n\t\t>\n\t>(() => {\n\t\t// Generated using https://github.com/hediet/vscode-unicode-data\n\t\t// Stored as key1, value1, key2, value2, ...\n\t\treturn JSON.parse(\n\t\t\t'{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,1523,96,8242,96,1370,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,118002,50,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,118003,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,118004,52,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,118005,53,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,118006,54,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,118007,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,118008,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,118009,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,117974,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,117975,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71913,67,71922,67,65315,67,8557,67,8450,67,8493,67,117976,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,117977,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,117978,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,117979,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,117980,71,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,117981,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,117983,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,117984,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,118001,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,117982,108,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,117985,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,117986,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,117987,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,118000,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,117988,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,117989,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,117990,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,117991,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,117992,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,117993,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,117994,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,117995,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71910,87,71919,87,117996,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,117997,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,117998,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,71909,90,66293,90,65338,90,8484,90,8488,90,117999,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65283,35,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],\\\"_default\\\":[160,32,8211,45,65374,126,8218,44,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"cs\\\":[65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,8218,44,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"fr\\\":[65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,8218,44,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"ja\\\":[8211,45,8218,44,65281,33,8216,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65292,44,65297,49,65307,59],\\\"ko\\\":[8211,45,65374,126,8218,44,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"ru\\\":[65374,126,8218,44,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,8218,44,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41,65292,44,65297,49,65307,59,65311,63],\\\"zh-hans\\\":[160,32,65374,126,8218,44,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65297,49],\\\"zh-hant\\\":[8211,45,65374,126,8218,44,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89]}'\n\t\t);\n\t});\n\n\tprivate static readonly cache = new LRUCachedFunction<\n\t\tstring[],\n\t\tAmbiguousCharacters\n\t>({ getCacheKey: JSON.stringify }, (locales) => {\n\t\tfunction arrayToMap(arr: number[]): Map<number, number> {\n\t\t\tconst result = new Map<number, number>();\n\t\t\tfor (let i = 0; i < arr.length; i += 2) {\n\t\t\t\tresult.set(arr[i], arr[i + 1]);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction mergeMaps(\n\t\t\tmap1: Map<number, number>,\n\t\t\tmap2: Map<number, number>\n\t\t): Map<number, number> {\n\t\t\tconst result = new Map<number, number>(map1);\n\t\t\tfor (const [key, value] of map2) {\n\t\t\t\tresult.set(key, value);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction intersectMaps(\n\t\t\tmap1: Map<number, number> | undefined,\n\t\t\tmap2: Map<number, number>\n\t\t) {\n\t\t\tif (!map1) {\n\t\t\t\treturn map2;\n\t\t\t}\n\t\t\tconst result = new Map<number, number>();\n\t\t\tfor (const [key, value] of map1) {\n\t\t\t\tif (map2.has(key)) {\n\t\t\t\t\tresult.set(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tconst data = this.ambiguousCharacterData.value;\n\n\t\tlet filteredLocales = locales.filter(\n\t\t\t(l) => !l.startsWith('_') && l in data\n\t\t);\n\t\tif (filteredLocales.length === 0) {\n\t\t\tfilteredLocales = ['_default'];\n\t\t}\n\n\t\tlet languageSpecificMap: Map<number, number> | undefined = undefined;\n\t\tfor (const locale of filteredLocales) {\n\t\t\tconst map = arrayToMap(data[locale]);\n\t\t\tlanguageSpecificMap = intersectMaps(languageSpecificMap, map);\n\t\t}\n\n\t\tconst commonMap = arrayToMap(data['_common']);\n\t\tconst map = mergeMaps(commonMap, languageSpecificMap!);\n\n\t\treturn new AmbiguousCharacters(map);\n\t});\n\n\tpublic static getInstance(locales: Set<string>): AmbiguousCharacters {\n\t\treturn AmbiguousCharacters.cache.get(Array.from(locales));\n\t}\n\n\tprivate static _locales = new Lazy<string[]>(() =>\n\t\tObject.keys(AmbiguousCharacters.ambiguousCharacterData.value).filter(\n\t\t\t(k) => !k.startsWith('_')\n\t\t)\n\t);\n\tpublic static getLocales(): string[] {\n\t\treturn AmbiguousCharacters._locales.value;\n\t}\n\n\tprivate constructor(\n\t\tprivate readonly confusableDictionary: Map<number, number>\n\t) { }\n\n\tpublic isAmbiguous(codePoint: number): boolean {\n\t\treturn this.confusableDictionary.has(codePoint);\n\t}\n\n\tpublic containsAmbiguousCharacter(str: string): boolean {\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tconst codePoint = str.codePointAt(i);\n\t\t\tif (typeof codePoint === 'number' && this.isAmbiguous(codePoint)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the non basic ASCII code point that the given code point can be confused,\n\t * or undefined if such code point does note exist.\n\t */\n\tpublic getPrimaryConfusable(codePoint: number): number | undefined {\n\t\treturn this.confusableDictionary.get(codePoint);\n\t}\n\n\tpublic getConfusableCodePoints(): ReadonlySet<number> {\n\t\treturn new Set(this.confusableDictionary.keys());\n\t}\n}\n\nexport class InvisibleCharacters {\n\tprivate static getRawData(): Record<string | '_common', number[]> {\n\t\t// Generated using https://github.com/hediet/vscode-unicode-data\n\t\treturn JSON.parse('{\\\"_common\\\":[11,12,13,127,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999],\\\"cs\\\":[173,8203,12288],\\\"de\\\":[173,8203,12288],\\\"es\\\":[8203,12288],\\\"fr\\\":[173,8203,12288],\\\"it\\\":[160,173,12288],\\\"ja\\\":[173],\\\"ko\\\":[173,12288],\\\"pl\\\":[173,8203,12288],\\\"pt-BR\\\":[173,8203,12288],\\\"qps-ploc\\\":[160,173,8203,12288],\\\"ru\\\":[173,12288],\\\"tr\\\":[160,173,8203,12288],\\\"zh-hans\\\":[160,173,8203,12288],\\\"zh-hant\\\":[173,12288]}');\n\t}\n\n\tprivate static _data: Set<number> | undefined = undefined;\n\n\tprivate static getData() {\n\t\tif (!this._data) {\n\t\t\tthis._data = new Set([...Object.values(InvisibleCharacters.getRawData())].flat());\n\t\t}\n\t\treturn this._data;\n\t}\n\n\tpublic static isInvisibleCharacter(codePoint: number): boolean {\n\t\treturn InvisibleCharacters.getData().has(codePoint);\n\t}\n\n\tpublic static containsInvisibleCharacter(str: string): boolean {\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tconst codePoint = str.codePointAt(i);\n\t\t\tif (typeof codePoint === 'number' && (InvisibleCharacters.isInvisibleCharacter(codePoint) || codePoint === CodePoint.space)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static get codePoints(): ReadonlySet<number> {\n\t\treturn InvisibleCharacters.getData();\n\t}\n}\n\nexport const Ellipsis = '\\u2026';\n\n/**\n * Convert a Unicode string to a string in which each 16-bit unit occupies only one byte\n *\n * From https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/btoa\n */\nfunction toBinary(str: string): string {\n\tconst codeUnits = new Uint16Array(str.length);\n\tfor (let i = 0; i < codeUnits.length; i++) {\n\t\tcodeUnits[i] = str.charCodeAt(i);\n\t}\n\tlet binary = '';\n\tconst uint8array = new Uint8Array(codeUnits.buffer);\n\tfor (let i = 0; i < uint8array.length; i++) {\n\t\tbinary += String.fromCharCode(uint8array[i]);\n\t}\n\treturn binary;\n}\n\n/**\n * Version of the global `btoa` function that handles multi-byte characters instead\n * of throwing an exception.\n */\n\nexport function multibyteAwareBtoa(str: string): string {\n\treturn btoa(toBinary(str));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from './charCode.js';\nimport { isAbsolute, join, normalize, posix, sep } from './path.js';\nimport { isWindows } from './platform.js';\nimport { equalsIgnoreCase, rtrim, startsWithIgnoreCase } from './strings.js';\nimport { isNumber } from './types.js';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath: string) {\n\tif (osPath.indexOf('/') === -1) {\n\t\tosPath = toSlashes(osPath);\n\t}\n\tif (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n\t\tosPath = '/' + osPath;\n\t}\n\treturn osPath;\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(1);\n\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(pos + 1);\n\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqual` instead. If you are\n * in a context without services, consider to pass down the `extUri` from the outside\n * or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqualOrParent` instead. If\n * you are in a context without services, consider to pass down the `extUri` from the\n * outside, or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\treturn removeTrailingPathSeparator(candidate);\n}\n\nexport function removeTrailingPathSeparator(candidate: string): string {\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn hasDriveLetter(pathNormalized) &&\n\t\t\t(path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function hasDriveLetter(path: string, isWindowsOS: boolean = isWindows): boolean {\n\tif (isWindowsOS) {\n\t\treturn isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === CharCode.Colon;\n\t}\n\n\treturn false;\n}\n\nexport function getDriveLetter(path: string, isWindowsOS: boolean = isWindows): string | undefined {\n\treturn hasDriveLetter(path, isWindowsOS) ? path[0] : undefined;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tfor (const segment of segments) {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t}\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n\nconst pathChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst windowsSafePathFirstChars = 'BDEFGHIJKMOQRSTUVWXYZbdefghijkmoqrstuvwxyz0123456789';\n\nexport function randomPath(parent?: string, prefix?: string, randomLength = 8): string {\n\tlet suffix = '';\n\tfor (let i = 0; i < randomLength; i++) {\n\t\tlet pathCharsTouse: string;\n\t\tif (i === 0 && isWindows && !prefix && (randomLength === 3 || randomLength === 4)) {\n\n\t\t\t// Windows has certain reserved file names that cannot be used, such\n\t\t\t// as AUX, CON, PRN, etc. We want to avoid generating a random name\n\t\t\t// that matches that pattern, so we use a different set of characters\n\t\t\t// for the first character of the name that does not include any of\n\t\t\t// the reserved names first characters.\n\n\t\t\tpathCharsTouse = windowsSafePathFirstChars;\n\t\t} else {\n\t\t\tpathCharsTouse = pathChars;\n\t\t}\n\n\t\tsuffix += pathCharsTouse.charAt(Math.floor(Math.random() * pathCharsTouse.length));\n\t}\n\n\tlet randomFileName: string;\n\tif (prefix) {\n\t\trandomFileName = `${prefix}-${suffix}`;\n\t} else {\n\t\trandomFileName = suffix;\n\t}\n\n\tif (parent) {\n\t\treturn join(parent, randomFileName);\n\t}\n\n\treturn randomFileName;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from './errors.js';\nimport * as platform from './platform.js';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from './strings.js';\nimport { URI } from './uri.js';\nimport * as paths from './path.js';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n\n\texport const vscodeUserData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\texport const vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n\texport const vscodeNotebookCellMetadataDiff = 'vscode-notebook-cell-metadata-diff';\n\texport const vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n\texport const vscodeNotebookCellOutputDiff = 'vscode-notebook-cell-output-diff';\n\texport const vscodeNotebookMetadata = 'vscode-notebook-metadata';\n\texport const vscodeInteractiveInput = 'vscode-interactive-input';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const vscodeWorkspaceTrust = 'vscode-workspace-trust';\n\n\texport const vscodeTerminal = 'vscode-terminal';\n\n\t/** Scheme used for code blocks in chat. */\n\texport const vscodeChatCodeBlock = 'vscode-chat-code-block';\n\n\t/** Scheme used for LHS of code compare (aka diff) blocks in chat. */\n\texport const vscodeChatCodeCompareBlock = 'vscode-chat-code-compare-block';\n\n\t/** Scheme used for the chat input editor. */\n\texport const vscodeChatEditor = 'vscode-chat-editor';\n\n\t/** Scheme used for the chat input part */\n\texport const vscodeChatInput = 'chatSessionInput';\n\n\t/** Scheme for chat session content */\n\texport const vscodeChatSession = 'vscode-chat-session';\n\n\t/**\n\t * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n\t */\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n\n\t/**\n\t * Scheme used as a replacement of `file` scheme to load\n\t * files with our custom protocol handler (desktop only).\n\t */\n\texport const vscodeFileResource = 'vscode-file';\n\n\t/**\n\t * Scheme used for temporary resources\n\t */\n\texport const tmp = 'tmp';\n\n\t/**\n\t * Scheme used vs live share\n\t */\n\texport const vsls = 'vsls';\n\n\t/**\n\t * Scheme used for the Source Control commit input's text document\n\t */\n\texport const vscodeSourceControl = 'vscode-scm';\n\n\t/**\n\t * Scheme used for input box for creating comments.\n\t */\n\texport const commentsInput = 'comment';\n\n\t/**\n\t * Scheme used for special rendering of settings in the release notes\n\t */\n\texport const codeSetting = 'code-setting';\n\n\t/**\n\t * Scheme used for output panel resources\n\t */\n\texport const outputChannel = 'output';\n\n\t/**\n\t * Scheme used for the accessible view\n\t */\n\texport const accessibleView = 'accessible-view';\n\n\t/**\n\t * Used for snapshots of chat edits\n\t */\n\texport const chatEditingSnapshotScheme = 'chat-editing-snapshot-text-model';\n\texport const chatEditingModel = 'chat-editing-text-model';\n}\n\nexport function matchesScheme(target: URI | string, scheme: string): boolean {\n\tif (URI.isUri(target)) {\n\t\treturn equalsIgnoreCase(target.scheme, scheme);\n\t} else {\n\t\treturn startsWithIgnoreCase(target, scheme + ':');\n\t}\n}\n\nexport function matchesSomeScheme(target: URI | string, ...schemes: string[]): boolean {\n\treturn schemes.some(scheme => matchesScheme(target, scheme));\n}\n\nexport const connectionTokenCookieName = 'vscode-tkn';\nexport const connectionTokenQueryName = 'tkn';\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\tprivate _serverRootPath: string = '/';\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tsetServerRootPath(product: { quality?: string; commit?: string }, serverBasePath: string | undefined): void {\n\t\tthis._serverRootPath = paths.posix.join(serverBasePath ?? '/', getServerProductSegment(product));\n\t}\n\n\tgetServerRootPath(): string {\n\t\treturn this._serverRootPath;\n\t}\n\n\tprivate get _remoteResourcesPath(): string {\n\t\treturn paths.posix.join(this._serverRootPath, Schemas.vscodeRemoteResource);\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\tgetPreferredWebSchema(): 'http' | 'https' {\n\t\treturn this._preferredWebSchema;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\ttry {\n\t\t\t\treturn this._delegate(uri);\n\t\t\t} catch (err) {\n\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t\treturn uri;\n\t\t\t}\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\tconst port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: `${host}:${port}`,\n\t\t\tpath: platform.isWeb\n\t\t\t\t? (window.location.pathname + \"/\" + this._remoteResourcesPath).replace(/\\/\\/+/g, \"/\")\n\t\t\t\t: this._remoteResourcesPath,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nexport function getServerProductSegment(product: { quality?: string; commit?: string }) {\n\treturn `${product.quality ?? 'oss'}-${product.commit ?? 'dev'}`;\n}\n\n/**\n * A string pointing to a path inside the app. It should not begin with ./ or ../\n */\nexport type AppResourcePath = (\n\t`a${string}` | `b${string}` | `c${string}` | `d${string}` | `e${string}` | `f${string}`\n\t| `g${string}` | `h${string}` | `i${string}` | `j${string}` | `k${string}` | `l${string}`\n\t| `m${string}` | `n${string}` | `o${string}` | `p${string}` | `q${string}` | `r${string}`\n\t| `s${string}` | `t${string}` | `u${string}` | `v${string}` | `w${string}` | `x${string}`\n\t| `y${string}` | `z${string}`\n);\n\nexport const builtinExtensionsPath: AppResourcePath = 'vs/../../extensions';\nexport const nodeModulesPath: AppResourcePath = 'vs/../../node_modules';\nexport const nodeModulesAsarPath: AppResourcePath = 'vs/../../node_modules.asar';\nexport const nodeModulesAsarUnpackedPath: AppResourcePath = 'vs/../../node_modules.asar.unpacked';\n\nexport const VSCODE_AUTHORITY = 'vscode-app';\n\nclass FileAccessImpl {\n\n\tprivate static readonly FALLBACK_AUTHORITY = VSCODE_AUTHORITY;\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(resourcePath: AppResourcePath | ''): URI {\n\t\tconst uri = this.toUri(resourcePath);\n\t\treturn this.uriToBrowserUri(uri);\n\t}\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\turiToBrowserUri(uri: URI): URI {\n\t\t// Handle remote URIs via `RemoteAuthorities`\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\t// Convert to `vscode-file` resource..\n\t\tif (\n\t\t\t// ...only ever for `file` resources\n\t\t\turi.scheme === Schemas.file &&\n\t\t\t(\n\t\t\t\t// ...and we run in native environments\n\t\t\t\tplatform.isNative ||\n\t\t\t\t// ...or web worker extensions on desktop\n\t\t\t\t(platform.webWorkerOrigin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)\n\t\t\t)\n\t\t) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.vscodeFileResource,\n\t\t\t\t// We need to provide an authority here so that it can serve\n\t\t\t\t// as origin for network and loading matters in chromium.\n\t\t\t\t// If the URI is not coming with an authority already, we\n\t\t\t\t// add our own\n\t\t\t\tauthority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(resourcePath: AppResourcePath | ''): URI {\n\t\tconst uri = this.toUri(resourcePath);\n\t\treturn this.uriToFileUri(uri);\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\turiToFileUri(uri: URI): URI {\n\t\t// Only convert the URI if it is `vscode-file:` scheme\n\t\tif (uri.scheme === Schemas.vscodeFileResource) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\t// Only preserve the `authority` if it is different from\n\t\t\t\t// our fallback authority. This ensures we properly preserve\n\t\t\t\t// Windows UNC paths that come with their own authority.\n\t\t\t\tauthority: uri.authority !== FileAccessImpl.FALLBACK_AUTHORITY ? uri.authority : null,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\tif (globalThis._VSCODE_FILE_ROOT) {\n\t\t\tconst rootUriOrPath = globalThis._VSCODE_FILE_ROOT;\n\n\t\t\t// File URL (with scheme)\n\t\t\tif (/^\\w[\\w\\d+.-]*:\\/\\//.test(rootUriOrPath)) {\n\t\t\t\treturn URI.joinPath(URI.parse(rootUriOrPath, true), uriOrModule);\n\t\t\t}\n\n\t\t\t// File Path (no scheme)\n\t\t\tconst modulePath = paths.join(rootUriOrPath, uriOrModule);\n\t\t\treturn URI.file(modulePath);\n\t\t}\n\n\t\tthrow new Error('Cannot determine URI for module id!');\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n\nexport const CacheControlheaders: Record<string, string> = Object.freeze({\n\t'Cache-Control': 'no-cache, no-store'\n});\n\nexport const DocumentPolicyheaders: Record<string, string> = Object.freeze({\n\t'Document-Policy': 'include-js-call-stacks-in-crash-reports'\n});\n\nexport namespace COI {\n\n\tconst coiHeaders = new Map<'3' | '2' | '1' | string, Record<string, string>>([\n\t\t['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n\t\t['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t\t['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t]);\n\n\texport const CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n\n\tconst coiSearchParamName = 'vscode-coi';\n\n\t/**\n\t * Extract desired headers from `vscode-coi` invocation\n\t */\n\texport function getHeadersFromQuery(url: string | URI | URL): Record<string, string> | undefined {\n\t\tlet params: URLSearchParams | undefined;\n\t\tif (typeof url === 'string') {\n\t\t\tparams = new URL(url).searchParams;\n\t\t} else if (url instanceof URL) {\n\t\t\tparams = url.searchParams;\n\t\t} else if (URI.isUri(url)) {\n\t\t\tparams = new URL(url.toString(true)).searchParams;\n\t\t}\n\t\tconst value = params?.get(coiSearchParamName);\n\t\tif (!value) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn coiHeaders.get(value);\n\t}\n\n\t/**\n\t * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n\t * isn't enabled the current context\n\t */\n\texport function addSearchParam(urlOrSearch: URLSearchParams | Record<string, string>, coop: boolean, coep: boolean): void {\n\t\tif (!(<any>globalThis).crossOriginIsolated) {\n\t\t\t// depends on the current context being COI\n\t\t\treturn;\n\t\t}\n\t\tconst value = coop && coep ? '3' : coep ? '2' : '1';\n\t\tif (urlOrSearch instanceof URLSearchParams) {\n\t\t\turlOrSearch.set(coiSearchParamName, value);\n\t\t} else {\n\t\t\t(<Record<string, string>>urlOrSearch)[coiSearchParamName] = value;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from './charCode.js';\nimport * as extpath from './extpath.js';\nimport { Schemas } from './network.js';\nimport * as paths from './path.js';\nimport { isLinux, isWindows } from './platform.js';\nimport { compare as strCompare, equalsIgnoreCase } from './strings.js';\nimport { URI, uriToFsPath } from './uri.js';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\" or at least same length as `parentCandidate`\n\t * @param parentCandidate A uri which is \"shorter\" or up to same length as `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see {@link ResourceMap}\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t/**\n\t * Whether the casing of the path-component of the uri should be ignored.\n\t */\n\tignorePathCasing(uri: URI): boolean;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI;\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tignorePathCasing(uri: URI): boolean {\n\t\treturn this._ignorePathCasing(uri);\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/';\n\t\tconst toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tpath = extpath.toPosixPath(path); // we allow path to be a windows path\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string | undefined, a2: string | undefined) {\n\t\treturn a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as resources from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { LanguageId, StandardTokenType } from '../../../../editor/common/encodedTokenAttributes.js';\n\nexport interface IValidGrammarDefinition {\n\tlocation: URI;\n\tlanguage?: string;\n\tscopeName: string;\n\tembeddedLanguages: IValidEmbeddedLanguagesMap;\n\ttokenTypes: IValidTokenTypeMap;\n\tinjectTo?: string[];\n\tbalancedBracketSelectors: string[];\n\tunbalancedBracketSelectors: string[];\n\tsourceExtensionId?: string;\n}\n\nexport interface IValidTokenTypeMap {\n\t[selector: string]: StandardTokenType;\n}\n\nexport interface IValidEmbeddedLanguagesMap {\n\t[scopeName: string]: LanguageId;\n}\n\nexport class TMScopeRegistry {\n\n\tprivate _scopeNameToLanguageRegistration: { [scopeName: string]: IValidGrammarDefinition };\n\n\tconstructor() {\n\t\tthis._scopeNameToLanguageRegistration = Object.create(null);\n\t}\n\n\tpublic reset(): void {\n\t\tthis._scopeNameToLanguageRegistration = Object.create(null);\n\t}\n\n\tpublic register(def: IValidGrammarDefinition): void {\n\t\tif (this._scopeNameToLanguageRegistration[def.scopeName]) {\n\t\t\tconst existingRegistration = this._scopeNameToLanguageRegistration[def.scopeName];\n\t\t\tif (!resources.isEqual(existingRegistration.location, def.location)) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`Overwriting grammar scope name to file mapping for scope ${def.scopeName}.\\n` +\n\t\t\t\t\t`Old grammar file: ${existingRegistration.location.toString()}.\\n` +\n\t\t\t\t\t`New grammar file: ${def.location.toString()}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tthis._scopeNameToLanguageRegistration[def.scopeName] = def;\n\t}\n\n\tpublic getGrammarDefinition(scopeName: string): IValidGrammarDefinition | null {\n\t\treturn this._scopeNameToLanguageRegistration[scopeName] || null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IValidEmbeddedLanguagesMap, IValidGrammarDefinition, TMScopeRegistry } from './TMScopeRegistry.js';\nimport type { IGrammar, IOnigLib, IRawTheme, Registry, StateStack } from 'vscode-textmate';\n\ninterface ITMGrammarFactoryHost {\n\tlogTrace(msg: string): void;\n\tlogError(msg: string, err: any): void;\n\treadFile(resource: URI): Promise<string>;\n}\n\nexport interface ICreateGrammarResult {\n\tlanguageId: string;\n\tgrammar: IGrammar | null;\n\tinitialState: StateStack;\n\tcontainsEmbeddedLanguages: boolean;\n\tsourceExtensionId?: string;\n}\n\nexport const missingTMGrammarErrorMessage = 'No TM Grammar registered for this language.';\n\nexport class TMGrammarFactory extends Disposable {\n\n\tprivate readonly _host: ITMGrammarFactoryHost;\n\tprivate readonly _initialState: StateStack;\n\tprivate readonly _scopeRegistry: TMScopeRegistry;\n\tprivate readonly _injections: { [scopeName: string]: string[] };\n\tprivate readonly _injectedEmbeddedLanguages: { [scopeName: string]: IValidEmbeddedLanguagesMap[] };\n\tprivate readonly _languageToScope: Map<string, string>;\n\tprivate readonly _grammarRegistry: Registry;\n\n\tconstructor(host: ITMGrammarFactoryHost, grammarDefinitions: IValidGrammarDefinition[], vscodeTextmate: typeof import('vscode-textmate'), onigLib: Promise<IOnigLib>) {\n\t\tsuper();\n\t\tthis._host = host;\n\t\tthis._initialState = vscodeTextmate.INITIAL;\n\t\tthis._scopeRegistry = new TMScopeRegistry();\n\t\tthis._injections = {};\n\t\tthis._injectedEmbeddedLanguages = {};\n\t\tthis._languageToScope = new Map<string, string>();\n\t\tthis._grammarRegistry = this._register(new vscodeTextmate.Registry({\n\t\t\tonigLib: onigLib,\n\t\t\tloadGrammar: async (scopeName: string) => {\n\t\t\t\tconst grammarDefinition = this._scopeRegistry.getGrammarDefinition(scopeName);\n\t\t\t\tif (!grammarDefinition) {\n\t\t\t\t\tthis._host.logTrace(`No grammar found for scope ${scopeName}`);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst location = grammarDefinition.location;\n\t\t\t\ttry {\n\t\t\t\t\tconst content = await this._host.readFile(location);\n\t\t\t\t\treturn vscodeTextmate.parseRawGrammar(content, location.path);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis._host.logError(`Unable to load and parse grammar for scope ${scopeName} from ${location}`, e);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetInjections: (scopeName: string) => {\n\t\t\t\tconst scopeParts = scopeName.split('.');\n\t\t\t\tlet injections: string[] = [];\n\t\t\t\tfor (let i = 1; i <= scopeParts.length; i++) {\n\t\t\t\t\tconst subScopeName = scopeParts.slice(0, i).join('.');\n\t\t\t\t\tinjections = [...injections, ...(this._injections[subScopeName] || [])];\n\t\t\t\t}\n\t\t\t\treturn injections;\n\t\t\t}\n\t\t}));\n\n\t\tfor (const validGrammar of grammarDefinitions) {\n\t\t\tthis._scopeRegistry.register(validGrammar);\n\n\t\t\tif (validGrammar.injectTo) {\n\t\t\t\tfor (const injectScope of validGrammar.injectTo) {\n\t\t\t\t\tlet injections = this._injections[injectScope];\n\t\t\t\t\tif (!injections) {\n\t\t\t\t\t\tthis._injections[injectScope] = injections = [];\n\t\t\t\t\t}\n\t\t\t\t\tinjections.push(validGrammar.scopeName);\n\t\t\t\t}\n\n\t\t\t\tif (validGrammar.embeddedLanguages) {\n\t\t\t\t\tfor (const injectScope of validGrammar.injectTo) {\n\t\t\t\t\t\tlet injectedEmbeddedLanguages = this._injectedEmbeddedLanguages[injectScope];\n\t\t\t\t\t\tif (!injectedEmbeddedLanguages) {\n\t\t\t\t\t\t\tthis._injectedEmbeddedLanguages[injectScope] = injectedEmbeddedLanguages = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinjectedEmbeddedLanguages.push(validGrammar.embeddedLanguages);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (validGrammar.language) {\n\t\t\t\tthis._languageToScope.set(validGrammar.language, validGrammar.scopeName);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic has(languageId: string): boolean {\n\t\treturn this._languageToScope.has(languageId);\n\t}\n\n\tpublic setTheme(theme: IRawTheme, colorMap: string[]): void {\n\t\tthis._grammarRegistry.setTheme(theme, colorMap);\n\t}\n\n\tpublic getColorMap(): string[] {\n\t\treturn this._grammarRegistry.getColorMap();\n\t}\n\n\tpublic async createGrammar(languageId: string, encodedLanguageId: number): Promise<ICreateGrammarResult> {\n\t\tconst scopeName = this._languageToScope.get(languageId);\n\t\tif (typeof scopeName !== 'string') {\n\t\t\t// No TM grammar defined\n\t\t\tthrow new Error(missingTMGrammarErrorMessage);\n\t\t}\n\n\t\tconst grammarDefinition = this._scopeRegistry.getGrammarDefinition(scopeName);\n\t\tif (!grammarDefinition) {\n\t\t\t// No TM grammar defined\n\t\t\tthrow new Error(missingTMGrammarErrorMessage);\n\t\t}\n\n\t\tconst embeddedLanguages = grammarDefinition.embeddedLanguages;\n\t\tif (this._injectedEmbeddedLanguages[scopeName]) {\n\t\t\tconst injectedEmbeddedLanguages = this._injectedEmbeddedLanguages[scopeName];\n\t\t\tfor (const injected of injectedEmbeddedLanguages) {\n\t\t\t\tfor (const scope of Object.keys(injected)) {\n\t\t\t\t\tembeddedLanguages[scope] = injected[scope];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst containsEmbeddedLanguages = (Object.keys(embeddedLanguages).length > 0);\n\n\t\tlet grammar: IGrammar | null;\n\n\t\ttry {\n\t\t\tgrammar = await this._grammarRegistry.loadGrammarWithConfiguration(\n\t\t\t\tscopeName,\n\t\t\t\tencodedLanguageId,\n\t\t\t\t{\n\t\t\t\t\tembeddedLanguages,\n\t\t\t\t\ttokenTypes: <any>grammarDefinition.tokenTypes,\n\t\t\t\t\tbalancedBracketSelectors: grammarDefinition.balancedBracketSelectors,\n\t\t\t\t\tunbalancedBracketSelectors: grammarDefinition.unbalancedBracketSelectors,\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tif (err.message && err.message.startsWith('No grammar provided for')) {\n\t\t\t\t// No TM grammar defined\n\t\t\t\tthrow new Error(missingTMGrammarErrorMessage);\n\t\t\t}\n\t\t\tthrow err;\n\t\t}\n\n\t\treturn {\n\t\t\tlanguageId: languageId,\n\t\t\tgrammar: grammar,\n\t\t\tinitialState: this._initialState,\n\t\t\tcontainsEmbeddedLanguages: containsEmbeddedLanguages,\n\t\t\tsourceExtensionId: grammarDefinition.sourceExtensionId,\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\nexport const generateUuid = (function (): () => string {\n\n\t// use `randomUUID` if possible\n\tif (typeof crypto.randomUUID === 'function') {\n\t\t// see https://developer.mozilla.org/en-US/docs/Web/API/Window/crypto\n\t\t// > Although crypto is available on all windows, the returned Crypto object only has one\n\t\t// > usable feature in insecure contexts: the getRandomValues() method.\n\t\t// > In general, you should use this API only in secure contexts.\n\n\t\treturn crypto.randomUUID.bind(crypto);\n\t}\n\n\t// prep-work\n\tconst _data = new Uint8Array(16);\n\tconst _hex: string[] = [];\n\tfor (let i = 0; i < 256; i++) {\n\t\t_hex.push(i.toString(16).padStart(2, '0'));\n\t}\n\n\treturn function generateUuid(): string {\n\t\t// get data\n\t\tcrypto.getRandomValues(_data);\n\n\t\t// set version bits\n\t\t_data[6] = (_data[6] & 0x0f) | 0x40;\n\t\t_data[8] = (_data[8] & 0x3f) | 0x80;\n\n\t\t// print as string\n\t\tlet i = 0;\n\t\tlet result = '';\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += '-';\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += '-';\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += '-';\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += '-';\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\tresult += _hex[_data[i++]];\n\t\treturn result;\n\t};\n})();\n\n/** Namespace should be 3 letter. */\nexport function prefixedUuid(namespace: string): string {\n\treturn `${namespace}-${generateUuid()}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AppResourcePath, FileAccess, nodeModulesAsarPath, nodeModulesPath, Schemas, VSCODE_AUTHORITY } from './base/common/network.js';\nimport * as platform from './base/common/platform.js';\nimport { IProductConfiguration } from './base/common/product.js';\nimport { URI } from './base/common/uri.js';\nimport { generateUuid } from './base/common/uuid.js';\n\nexport const canASAR = false; // TODO@esm: ASAR disabled in ESM\n\ndeclare const window: any;\ndeclare const document: any;\ndeclare const self: any;\ndeclare const globalThis: any;\n\nclass DefineCall {\n\tconstructor(\n\t\tpublic readonly id: string | null | undefined,\n\t\tpublic readonly dependencies: string[] | null | undefined,\n\t\tpublic readonly callback: any\n\t) { }\n}\n\nenum AMDModuleImporterState {\n\tUninitialized = 1,\n\tInitializedInternal,\n\tInitializedExternal\n}\n\nclass AMDModuleImporter {\n\tpublic static INSTANCE = new AMDModuleImporter();\n\n\tprivate readonly _isWebWorker = (typeof self === 'object' && self.constructor && self.constructor.name === 'DedicatedWorkerGlobalScope');\n\tprivate readonly _isRenderer = typeof document === 'object';\n\n\tprivate readonly _defineCalls: DefineCall[] = [];\n\tprivate _state = AMDModuleImporterState.Uninitialized;\n\tprivate _amdPolicy: Pick<TrustedTypePolicy<{\n\t\tcreateScriptURL(value: string): string;\n\t}>, 'name' | 'createScriptURL'> | undefined;\n\n\tconstructor() { }\n\n\tprivate _initialize(): void {\n\t\tif (this._state === AMDModuleImporterState.Uninitialized) {\n\t\t\tif (globalThis.define) {\n\t\t\t\tthis._state = AMDModuleImporterState.InitializedExternal;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._state = AMDModuleImporterState.InitializedInternal;\n\n\t\tglobalThis.define = (id: any, dependencies: any, callback: any) => {\n\t\t\tif (typeof id !== 'string') {\n\t\t\t\tcallback = dependencies;\n\t\t\t\tdependencies = id;\n\t\t\t\tid = null;\n\t\t\t}\n\t\t\tif (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\n\t\t\t\tcallback = dependencies;\n\t\t\t\tdependencies = null;\n\t\t\t}\n\t\t\t// if (!dependencies) {\n\t\t\t// \tdependencies = ['require', 'exports', 'module'];\n\t\t\t// }\n\t\t\tthis._defineCalls.push(new DefineCall(id, dependencies, callback));\n\t\t};\n\n\t\tglobalThis.define.amd = true;\n\n\t\tif (this._isRenderer) {\n\t\t\tthis._amdPolicy = globalThis._VSCODE_WEB_PACKAGE_TTP ?? window.trustedTypes?.createPolicy('amdLoader', {\n\t\t\t\tcreateScriptURL(value: any) {\n\t\t\t\t\tif (value.startsWith(window.location.origin)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\tif (value.startsWith(`${Schemas.vscodeFileResource}://${VSCODE_AUTHORITY}`)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`[trusted_script_src] Invalid script url: ${value}`);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (this._isWebWorker) {\n\t\t\tthis._amdPolicy = globalThis._VSCODE_WEB_PACKAGE_TTP ?? globalThis.trustedTypes?.createPolicy('amdLoader', {\n\t\t\t\tcreateScriptURL(value: string) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic async load<T>(scriptSrc: string): Promise<T> {\n\t\tthis._initialize();\n\n\t\tif (this._state === AMDModuleImporterState.InitializedExternal) {\n\t\t\treturn new Promise<T>(resolve => {\n\t\t\t\tconst tmpModuleId = generateUuid();\n\t\t\t\tglobalThis.define(tmpModuleId, [scriptSrc], function (moduleResult: T) {\n\t\t\t\t\tresolve(moduleResult);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tconst defineCall = await (this._isWebWorker ? this._workerLoadScript(scriptSrc) : this._isRenderer ? this._rendererLoadScript(scriptSrc) : this._nodeJSLoadScript(scriptSrc));\n\t\tif (!defineCall) {\n\t\t\tconsole.warn(`Did not receive a define call from script ${scriptSrc}`);\n\t\t\treturn <T>undefined;\n\t\t}\n\t\t// TODO@esm require, module\n\t\tconst exports = {};\n\t\tconst dependencyObjs: any[] = [];\n\t\tconst dependencyModules: string[] = [];\n\n\t\tif (Array.isArray(defineCall.dependencies)) {\n\n\t\t\tfor (const mod of defineCall.dependencies) {\n\t\t\t\tif (mod === 'exports') {\n\t\t\t\t\tdependencyObjs.push(exports);\n\t\t\t\t} else {\n\t\t\t\t\tdependencyModules.push(mod);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dependencyModules.length > 0) {\n\t\t\tthrow new Error(`Cannot resolve dependencies for script ${scriptSrc}. The dependencies are: ${dependencyModules.join(', ')}`);\n\t\t}\n\t\tif (typeof defineCall.callback === 'function') {\n\t\t\treturn defineCall.callback(...dependencyObjs) ?? exports;\n\t\t} else {\n\t\t\treturn defineCall.callback;\n\t\t}\n\t}\n\n\tprivate _rendererLoadScript(scriptSrc: string): Promise<DefineCall | undefined> {\n\t\treturn new Promise<DefineCall | undefined>((resolve, reject) => {\n\t\t\tconst scriptElement = document.createElement('script');\n\t\t\tscriptElement.setAttribute('async', 'async');\n\t\t\tscriptElement.setAttribute('type', 'text/javascript');\n\n\t\t\tconst unbind = () => {\n\t\t\t\tscriptElement.removeEventListener('load', loadEventListener);\n\t\t\t\tscriptElement.removeEventListener('error', errorEventListener);\n\t\t\t};\n\n\t\t\tconst loadEventListener = (e: any) => {\n\t\t\t\tunbind();\n\t\t\t\tresolve(this._defineCalls.pop());\n\t\t\t};\n\n\t\t\tconst errorEventListener = (e: any) => {\n\t\t\t\tunbind();\n\t\t\t\treject(e);\n\t\t\t};\n\n\t\t\tscriptElement.addEventListener('load', loadEventListener);\n\t\t\tscriptElement.addEventListener('error', errorEventListener);\n\t\t\tif (this._amdPolicy) {\n\t\t\t\tscriptSrc = this._amdPolicy.createScriptURL(scriptSrc) as unknown as string;\n\t\t\t}\n\t\t\tscriptElement.setAttribute('src', scriptSrc);\n\t\t\twindow.document.getElementsByTagName('head')[0].appendChild(scriptElement);\n\t\t});\n\t}\n\n\tprivate async _workerLoadScript(scriptSrc: string): Promise<DefineCall | undefined> {\n\t\tif (this._amdPolicy) {\n\t\t\tscriptSrc = this._amdPolicy.createScriptURL(scriptSrc) as unknown as string;\n\t\t}\n\t\tawait import(scriptSrc);\n\t\treturn this._defineCalls.pop();\n\t}\n\n\tprivate async _nodeJSLoadScript(scriptSrc: string): Promise<DefineCall | undefined> {\n\t\ttry {\n\t\t\tconst fs = (await import(`${'fs'}`)).default;\n\t\t\tconst vm = (await import(`${'vm'}`)).default;\n\t\t\tconst module = (await import(`${'module'}`)).default;\n\n\t\t\tconst filePath = URI.parse(scriptSrc).fsPath;\n\t\t\tconst content = fs.readFileSync(filePath).toString();\n\t\t\tconst scriptSource = module.wrap(content.replace(/^#!.*/, ''));\n\t\t\tconst script = new vm.Script(scriptSource);\n\t\t\tconst compileWrapper = script.runInThisContext();\n\t\t\tcompileWrapper.apply();\n\t\t\treturn this._defineCalls.pop();\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nconst cache = new Map<string, Promise<any>>();\n\n/**\n * Utility for importing an AMD node module. This util supports AMD and ESM contexts and should be used while the ESM adoption\n * is on its way.\n *\n * e.g. pass in `vscode-textmate/release/main.js`\n */\nexport async function importAMDNodeModule<T>(nodeModuleName: string, pathInsideNodeModule: string, isBuilt?: boolean): Promise<T> {\n\tif (isBuilt === undefined) {\n\t\tconst product = globalThis._VSCODE_PRODUCT_JSON as unknown as IProductConfiguration;\n\t\tisBuilt = Boolean((product ?? globalThis.vscode?.context?.configuration()?.product)?.commit);\n\t}\n\n\tconst nodeModulePath = pathInsideNodeModule ? `${nodeModuleName}/${pathInsideNodeModule}` : nodeModuleName;\n\tif (cache.has(nodeModulePath)) {\n\t\treturn cache.get(nodeModulePath)!;\n\t}\n\tlet scriptSrc: string;\n\tif (/^\\w[\\w\\d+.-]*:\\/\\//.test(nodeModulePath)) {\n\t\t// looks like a URL\n\t\t// bit of a special case for: src/vs/workbench/services/languageDetection/browser/languageDetectionWebWorker.ts\n\t\tscriptSrc = nodeModulePath;\n\t} else {\n\t\tconst useASAR = (canASAR && isBuilt && !platform.isWeb);\n\t\tconst actualNodeModulesPath = (useASAR ? nodeModulesAsarPath : nodeModulesPath);\n\t\tconst resourcePath: AppResourcePath = `${actualNodeModulesPath}/${nodeModulePath}`;\n\t\tscriptSrc = FileAccess.asBrowserUri(resourcePath).toString(true);\n\t}\n\tconst result = AMDModuleImporter.INSTANCE.load<T>(scriptSrc);\n\tcache.set(nodeModulePath, result);\n\treturn result;\n}\n\nexport function resolveAmdNodeModulePath(nodeModuleName: string, pathInsideNodeModule: string): string {\n\tconst product = globalThis._VSCODE_PRODUCT_JSON as unknown as IProductConfiguration;\n\tconst isBuilt = Boolean((product ?? globalThis.vscode?.context?.configuration()?.product)?.commit);\n\tconst useASAR = (canASAR && isBuilt && !platform.isWeb);\n\n\tconst nodeModulePath = `${nodeModuleName}/${pathInsideNodeModule}`;\n\tconst actualNodeModulesPath = (useASAR ? nodeModulesAsarPath : nodeModulesPath);\n\tconst resourcePath: AppResourcePath = `${actualNodeModulesPath}/${nodeModulePath}`;\n\treturn FileAccess.asBrowserUri(resourcePath).toString(true);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Can be passed into the Delayed to defer using a microtask\n * */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from './cancellation.js';\nimport { BugIndicatingError, CancellationError } from './errors.js';\nimport { Emitter, Event } from './event.js';\nimport { Disposable, DisposableMap, DisposableStore, IDisposable, isDisposable, MutableDisposable, toDisposable } from './lifecycle.js';\nimport { extUri as defaultExtUri, IExtUri } from './resources.js';\nimport { URI } from './uri.js';\nimport { setTimeout0 } from './platform.js';\nimport { MicrotaskDelay } from './symbols.js';\nimport { Lazy } from './lazy.js';\n\nexport function isThenable<T>(obj: unknown): obj is Promise<T> {\n\treturn !!obj && typeof (obj as unknown as Promise<T>).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\n/**\n * Returns a promise that can be cancelled using the provided cancellation token.\n *\n * @remarks When cancellation is requested, the promise will be rejected with a {@link CancellationError}.\n * If the promise resolves to a disposable object, it will be automatically disposed when cancellation\n * is requested.\n *\n * @param callback A function that accepts a cancellation token and returns a promise\n * @returns A promise that can be cancelled\n */\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\n\tlet isCancelled = false;\n\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tisCancelled = true;\n\t\t\tsubscription.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\n\t\t\tif (!isCancelled) {\n\t\t\t\tresolve(value);\n\n\t\t\t} else if (isDisposable(value)) {\n\t\t\t\t// promise has been cancelled, result is disposable and will\n\t\t\t\t// be cleaned up\n\t\t\t\tvalue.dispose();\n\t\t\t}\n\t\t}, err => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t\tsource.dispose();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: unknown) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: unknown) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\n/**\n * Returns a promise that resolves with `undefined` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\n\n/**\n * Returns a promise that resolves with `defaultValue` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\tresolve(defaultValue);\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns a promise that rejects with an {@CancellationError} as soon as the passed token is cancelled.\n * @see {@link raceCancellation}\n */\nexport function raceCancellationError<T>(promise: Promise<T>, token: CancellationToken): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Wraps a cancellable promise such that it is no cancellable. Can be used to\n * avoid issues with shared promises that would normally be returned as\n * cancellable to consumers.\n */\nexport function notCancellablePromise<T>(promise: CancelablePromise<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tpromise.then(resolve, reject);\n\t});\n}\n\n/**\n * Returns as soon as one of the promises resolves or rejects and cancels remaining promises\n */\nexport function raceCancellablePromises<T>(cancellablePromises: (CancelablePromise<T> | Promise<T>)[]): CancelablePromise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\tconst promise = Promise.race(promises) as CancelablePromise<T>;\n\tpromise.cancel = () => {\n\t\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\t\tif (index !== resolvedPromiseIndex && (cancellablePromise as CancelablePromise<T>).cancel) {\n\t\t\t\t(cancellablePromise as CancelablePromise<T>).cancel();\n\t\t\t}\n\t\t});\n\t};\n\tpromise.finally(() => {\n\t\tpromise.cancel();\n\t});\n\treturn promise;\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\n/**\n * Creates and returns a new promise, plus its `resolve` and `reject` callbacks.\n *\n * Replace with standardized [`Promise.withResolvers`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/withResolvers) once it is supported\n */\nexport function promiseWithResolvers<T>(): { promise: Promise<T>; resolve: (value: T | PromiseLike<T>) => void; reject: (err?: any) => void } {\n\tlet resolve: (value: T | PromiseLike<T>) => void;\n\tlet reject: (reason?: any) => void;\n\tconst promise = new Promise<T>((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\treturn { promise, resolve: resolve!, reject: reject! };\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler implements IDisposable {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tprivate isDisposed = false;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.isDisposed) {\n\t\t\treturn Promise.reject(new Error('Throttler is disposed'));\n\t\t}\n\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tif (this.isDisposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(resolve => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(resolve);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.queuedPromise!.then(resolve, reject);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.activePromise!.then((result: T) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tresolve(result);\n\t\t\t}, (err: unknown) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<unknown> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask(), () => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<unknown>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n\n\tkeys(): IterableIterator<TKey> {\n\t\treturn this.promiseMap.keys();\n\t}\n}\n\ninterface IScheduledLater extends IDisposable {\n\tisTriggered(): boolean;\n}\n\nconst timeoutDeferred = (timeout: number, fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tconst handle = setTimeout(() => {\n\t\tscheduled = false;\n\t\tfn();\n\t}, timeout);\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => {\n\t\t\tclearTimeout(handle);\n\t\t\tscheduled = false;\n\t\t},\n\t};\n};\n\nconst microtaskDeferred = (fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tqueueMicrotask(() => {\n\t\tif (scheduled) {\n\t\t\tscheduled = false;\n\t\t\tfn();\n\t\t}\n\t});\n\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => { scheduled = false; },\n\t};\n};\n\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate deferred: IScheduledLater | null;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: unknown) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number | typeof MicrotaskDelay) {\n\t\tthis.deferred = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((resolve, reject) => {\n\t\t\t\tthis.doResolve = resolve;\n\t\t\t\tthis.doReject = reject;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tconst fn = () => {\n\t\t\tthis.deferred = null;\n\t\t\tthis.doResolve?.(null);\n\t\t};\n\n\t\tthis.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn !!this.deferred?.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tthis.doReject?.(new CancellationError());\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tthis.deferred?.dispose();\n\t\tthis.deferred = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as unknown as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t\tthis.throttler.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently after a certain period of\n * time or when open is called explicitly\n */\nexport class AutoOpenBarrier extends Barrier {\n\n\tprivate readonly _timeout: Timeout;\n\n\tconstructor(autoOpenTimeMs: number) {\n\t\tsuper();\n\t\tthis._timeout = setTimeout(() => this.open(), autoOpenTimeMs);\n\t}\n\n\toverride open(): void {\n\t\tclearTimeout(this._timeout);\n\t\tsuper.open();\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(() => {\n\t\t\tdisposable.dispose();\n\t\t\tresolve();\n\t\t}, millis);\n\t\tconst disposable = token.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\tdisposable.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t});\n}\n\n/**\n * Creates a timeout that can be disposed using its returned value.\n * @param handler The timeout handler.\n * @param timeout An optional timeout in milliseconds.\n * @param store An optional {@link DisposableStore} that will have the timeout disposable managed automatically.\n *\n * @example\n * const store = new DisposableStore;\n * // Call the timeout after 1000ms at which point it will be automatically\n * // evicted from the store.\n * const timeoutDisposable = disposableTimeout(() => {}, 1000, store);\n *\n * if (foo) {\n *   // Cancel the timeout and evict it from store.\n *   timeoutDisposable.dispose();\n * }\n */\nexport function disposableTimeout(handler: () => void, timeout = 0, store?: DisposableStore): IDisposable {\n\tconst timer = setTimeout(() => {\n\t\thandler();\n\t\tif (store) {\n\t\t\tdisposable.dispose();\n\t\t}\n\t}, timeout);\n\tconst disposable = toDisposable(() => {\n\t\tclearTimeout(timer);\n\t\tstore?.delete(disposable);\n\t});\n\tstore?.add(disposable);\n\treturn disposable;\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: unknown): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result as T);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\n/**\n * Returns the result of the first promise that matches the \"shouldStop\",\n * running all promises in parallel. Supports cancelable promises.\n */\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop?: (t: T) => boolean, defaultValue?: T | null): Promise<T | null>;\nexport function firstParallel<T, R extends T>(promiseList: Promise<T>[], shouldStop: (t: T) => t is R, defaultValue?: R | null): Promise<R | null>;\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null) {\n\tif (promiseList.length === 0) {\n\t\treturn Promise.resolve(defaultValue);\n\t}\n\n\tlet todo = promiseList.length;\n\tconst finish = () => {\n\t\ttodo = -1;\n\t\tfor (const promise of promiseList) {\n\t\t\t(promise as Partial<CancelablePromise<T>>).cancel?.();\n\t\t}\n\t};\n\n\treturn new Promise<T | null>((resolve, reject) => {\n\t\tfor (const promise of promiseList) {\n\t\t\tpromise.then(result => {\n\t\t\t\tif (--todo >= 0 && shouldStop(result)) {\n\t\t\t\t\tfinish();\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else if (todo === 0) {\n\t\t\t\t\tresolve(defaultValue);\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (--todo >= 0) {\n\t\t\t\t\t\tfinish();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t});\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: unknown) => void;\n}\n\nexport interface ILimiter<T> {\n\n\treadonly size: number;\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T>;\n\n\tclear(): void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> implements ILimiter<T> {\n\n\tprivate _size = 0;\n\tprivate _isDisposed = false;\n\tprivate runningPromises: number;\n\tprivate readonly maxDegreeOfParalellism: number;\n\tprivate readonly outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onDrained: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onDrained = new Emitter<void>();\n\t}\n\n\t/**\n\t *\n\t * @returns A promise that resolved when all work is done (onDrained) or when\n\t * there is nothing to do\n\t */\n\twhenIdle(): Promise<void> {\n\t\treturn this.size > 0\n\t\t\t? Event.toPromise(this.onDrained)\n\t\t\t: Promise.resolve();\n\t}\n\n\tget onDrained(): Event<void> {\n\t\treturn this._onDrained.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error('Object has been disposed');\n\t\t}\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis.runningPromises--;\n\t\tif (--this._size === 0) {\n\t\t\tthis._onDrained.fire();\n\t\t}\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t}\n\t}\n\n\tclear(): void {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error('Object has been disposed');\n\t\t}\n\t\tthis.outstandingPromises.length = 0;\n\t\tthis._size = this.runningPromises;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tthis.outstandingPromises.length = 0; // stop further processing\n\t\tthis._size = 0;\n\t\tthis._onDrained.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * Same as `Queue`, ensures that only 1 task is executed at the same time. The difference to `Queue` is that\n * there is only 1 task about to be scheduled next. As such, calling `queue` while a task is executing will\n * replace the currently queued task until it executes.\n *\n * As such, the returned promise may not be from the factory that is passed in but from the next factory that\n * is running after having called `queue`.\n */\nexport class LimitedQueue {\n\n\tprivate readonly sequentializer = new TaskSequentializer();\n\n\tprivate tasks = 0;\n\n\tqueue(factory: ITask<Promise<void>>): Promise<void> {\n\t\tif (!this.sequentializer.isRunning()) {\n\t\t\treturn this.sequentializer.run(this.tasks++, factory());\n\t\t}\n\n\t\treturn this.sequentializer.queue(() => {\n\t\t\treturn this.sequentializer.run(this.tasks++, factory());\n\t\t});\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tprivate readonly drainers = new Set<DeferredPromise<void>>();\n\n\tprivate drainListeners: DisposableMap<number> | undefined = undefined;\n\tprivate drainListenerCount = 0;\n\n\tasync whenDrained(): Promise<void> {\n\t\tif (this.isDrained()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst promise = new DeferredPromise<void>();\n\t\tthis.drainers.add(promise);\n\n\t\treturn promise.p;\n\t}\n\n\tprivate isDrained(): boolean {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tif (queue.size > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tqueueSize(resource: URI, extUri: IExtUri = defaultExtUri): number {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\treturn this.queues.get(key)?.size ?? 0;\n\t}\n\n\tqueueFor(resource: URI, factory: ITask<Promise<void>>, extUri: IExtUri = defaultExtUri): Promise<void> {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\tlet queue = this.queues.get(key);\n\t\tif (!queue) {\n\t\t\tqueue = new Queue<void>();\n\t\t\tconst drainListenerId = this.drainListenerCount++;\n\t\t\tconst drainListener = Event.once(queue.onDrained)(() => {\n\t\t\t\tqueue?.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t\tthis.onDidQueueDrain();\n\n\t\t\t\tthis.drainListeners?.deleteAndDispose(drainListenerId);\n\n\t\t\t\tif (this.drainListeners?.size === 0) {\n\t\t\t\t\tthis.drainListeners.dispose();\n\t\t\t\t\tthis.drainListeners = undefined;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!this.drainListeners) {\n\t\t\t\tthis.drainListeners = new DisposableMap();\n\t\t\t}\n\t\t\tthis.drainListeners.set(drainListenerId, drainListener);\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn queue.queue(factory);\n\t}\n\n\tprivate onDidQueueDrain(): void {\n\t\tif (!this.isDrained()) {\n\t\t\treturn; // not done yet\n\t\t}\n\n\t\tthis.releaseDrainers();\n\t}\n\n\tprivate releaseDrainers(): void {\n\t\tfor (const drainer of this.drainers) {\n\t\t\tdrainer.complete();\n\t\t}\n\n\t\tthis.drainers.clear();\n\t}\n\n\tdispose(): void {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tqueue.dispose();\n\t\t}\n\n\t\tthis.queues.clear();\n\n\t\t// Even though we might still have pending\n\t\t// tasks queued, after the queues have been\n\t\t// disposed, we can no longer track them, so\n\t\t// we release drainers to prevent hanging\n\t\t// promises when the resource queue is being\n\t\t// disposed.\n\t\tthis.releaseDrainers();\n\n\t\tthis.drainListeners?.dispose();\n\t}\n}\n\nexport type Task<T = void> = () => (Promise<T> | T);\n\n/**\n * Processes tasks in the order they were scheduled.\n*/\nexport class TaskQueue {\n\tprivate _runningTask: Task<any> | undefined = undefined;\n\tprivate _pendingTasks: { task: Task<any>; deferred: DeferredPromise<any>; setUndefinedWhenCleared: boolean }[] = [];\n\n\t/**\n\t * Waits for the current and pending tasks to finish, then runs and awaits the given task.\n\t * If the task is skipped because of clearPending, the promise is rejected with a CancellationError.\n\t*/\n\tpublic schedule<T>(task: Task<T>): Promise<T> {\n\t\tconst deferred = new DeferredPromise<T>();\n\t\tthis._pendingTasks.push({ task, deferred, setUndefinedWhenCleared: false });\n\t\tthis._runIfNotRunning();\n\t\treturn deferred.p;\n\t}\n\n\t/**\n\t * Waits for the current and pending tasks to finish, then runs and awaits the given task.\n\t * If the task is skipped because of clearPending, the promise is resolved with undefined.\n\t*/\n\tpublic scheduleSkipIfCleared<T>(task: Task<T>): Promise<T | undefined> {\n\t\tconst deferred = new DeferredPromise<T>();\n\t\tthis._pendingTasks.push({ task, deferred, setUndefinedWhenCleared: true });\n\t\tthis._runIfNotRunning();\n\t\treturn deferred.p;\n\t}\n\n\tprivate _runIfNotRunning(): void {\n\t\tif (this._runningTask === undefined) {\n\t\t\tthis._processQueue();\n\t\t}\n\t}\n\n\tprivate async _processQueue(): Promise<void> {\n\t\tif (this._pendingTasks.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst next = this._pendingTasks.shift();\n\t\tif (!next) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._runningTask) {\n\t\t\tthrow new BugIndicatingError();\n\t\t}\n\n\t\tthis._runningTask = next.task;\n\n\t\ttry {\n\t\t\tconst result = await next.task();\n\t\t\tnext.deferred.complete(result);\n\t\t} catch (e) {\n\t\t\tnext.deferred.error(e);\n\t\t} finally {\n\t\t\tthis._runningTask = undefined;\n\t\t\tthis._processQueue();\n\t\t}\n\t}\n\n\t/**\n\t * Clears all pending tasks. Does not cancel the currently running task.\n\t*/\n\tpublic clearPending(): void {\n\t\tconst tasks = this._pendingTasks;\n\t\tthis._pendingTasks = [];\n\t\tfor (const task of tasks) {\n\t\t\tif (task.setUndefinedWhenCleared) {\n\t\t\t\ttask.deferred.complete(undefined);\n\t\t\t} else {\n\t\t\t\ttask.deferred.error(new CancellationError());\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: Timeout | undefined;\n\tprivate _isDisposed = false;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = undefined;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis._isDisposed = true;\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== undefined) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = undefined;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new BugIndicatingError(`Calling 'cancelAndSet' on a disposed TimeoutTimer`);\n\t\t}\n\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = undefined;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new BugIndicatingError(`Calling 'setIfNotSet' on a disposed TimeoutTimer`);\n\t\t}\n\n\t\tif (this._token !== undefined) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = undefined;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate disposable: IDisposable | undefined = undefined;\n\tprivate isDisposed = false;\n\n\tcancel(): void {\n\t\tthis.disposable?.dispose();\n\t\tthis.disposable = undefined;\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number, context = globalThis): void {\n\t\tif (this.isDisposed) {\n\t\t\tthrow new BugIndicatingError(`Calling 'cancelAndSet' on a disposed IntervalTimer`);\n\t\t}\n\n\t\tthis.cancel();\n\t\tconst handle = context.setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\n\t\tthis.disposable = toDisposable(() => {\n\t\t\tcontext.clearInterval(handle);\n\t\t\tthis.disposable = undefined;\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.isDisposed = true;\n\t}\n}\n\nexport class RunOnceScheduler implements IDisposable {\n\n\tprotected runner: ((...args: unknown[]) => void) | null;\n\n\tprivate timeoutToken: Timeout | undefined;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = undefined;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== undefined;\n\t}\n\n\tflush(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tthis.cancel();\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = undefined;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tthis.runner?.();\n\t}\n}\n\n/**\n * Same as `RunOnceScheduler`, but doesn't count the time spent in sleep mode.\n * > **NOTE**: Only offers 1s resolution.\n *\n * When calling `setTimeout` with 3hrs, and putting the computer immediately to sleep\n * for 8hrs, `setTimeout` will fire **as soon as the computer wakes from sleep**. But\n * this scheduler will execute 3hrs **after waking the computer from sleep**.\n */\nexport class ProcessTimeRunOnceScheduler {\n\n\tprivate runner: (() => void) | null;\n\tprivate timeout: number;\n\n\tprivate counter: number;\n\tprivate intervalToken: Timeout | undefined;\n\tprivate intervalHandler: () => void;\n\n\tconstructor(runner: () => void, delay: number) {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.counter = 0;\n\t\tthis.intervalToken = undefined;\n\t\tthis.intervalHandler = this.onInterval.bind(this);\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearInterval(this.intervalToken);\n\t\t\tthis.intervalToken = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.cancel();\n\t\tthis.counter = Math.ceil(delay / 1000);\n\t\tthis.intervalToken = setInterval(this.intervalHandler, 1000);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.intervalToken !== undefined;\n\t}\n\n\tprivate onInterval() {\n\t\tthis.counter--;\n\t\tif (this.counter > 0) {\n\t\t\t// still need to wait\n\t\t\treturn;\n\t\t}\n\n\t\t// time elapsed\n\t\tclearInterval(this.intervalToken);\n\t\tthis.intervalToken = undefined;\n\t\tthis.runner?.();\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected override doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tthis.runner?.(units);\n\t}\n\n\toverride dispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface IThrottledWorkerOptions {\n\n\t/**\n\t * maximum of units the worker will pass onto handler at once\n\t */\n\tmaxWorkChunkSize: number;\n\n\t/**\n\t * maximum of units the worker will keep in memory for processing\n\t */\n\tmaxBufferedWork: number | undefined;\n\n\t/**\n\t * delay before processing the next round of chunks when chunk size exceeds limits\n\t */\n\tthrottleDelay: number;\n\n\t/**\n\t * When enabled will guarantee that two distinct calls to `work()` are not executed\n\t * without throttle delay between them.\n\t * Otherwise if the worker isn't currently throttling it will execute work immediately.\n\t */\n\twaitThrottleDelayBetweenWorkUnits?: boolean;\n}\n\n/**\n * The `ThrottledWorker` will accept units of work `T`\n * to handle. The contract is:\n * * there is a maximum of units the worker can handle at once (via `maxWorkChunkSize`)\n * * there is a maximum of units the worker will keep in memory for processing (via `maxBufferedWork`)\n * * after having handled `maxWorkChunkSize` units, the worker needs to rest (via `throttleDelay`)\n */\nexport class ThrottledWorker<T> extends Disposable {\n\n\tprivate readonly pendingWork: T[] = [];\n\n\tprivate readonly throttler = this._register(new MutableDisposable<RunOnceScheduler>());\n\tprivate disposed = false;\n\tprivate lastExecutionTime = 0;\n\n\tconstructor(\n\t\tprivate options: IThrottledWorkerOptions,\n\t\tprivate readonly handler: (units: T[]) => void\n\t) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * The number of work units that are pending to be processed.\n\t */\n\tget pending(): number { return this.pendingWork.length; }\n\n\t/**\n\t * Add units to be worked on. Use `pending` to figure out\n\t * how many units are not yet processed after this method\n\t * was called.\n\t *\n\t * @returns whether the work was accepted or not. If the\n\t * worker is disposed, it will not accept any more work.\n\t * If the number of pending units would become larger\n\t * than `maxPendingWork`, more work will also not be accepted.\n\t */\n\twork(units: readonly T[]): boolean {\n\t\tif (this.disposed) {\n\t\t\treturn false; // work not accepted: disposed\n\t\t}\n\n\t\t// Check for reaching maximum of pending work\n\t\tif (typeof this.options.maxBufferedWork === 'number') {\n\n\t\t\t// Throttled: simple check if pending + units exceeds max pending\n\t\t\tif (this.throttler.value) {\n\t\t\t\tif (this.pending + units.length > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Unthrottled: same as throttled, but account for max chunk getting\n\t\t\t// worked on directly without being pending\n\t\t\telse {\n\t\t\t\tif (this.pending + units.length - this.options.maxWorkChunkSize > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add to pending units first\n\t\tfor (const unit of units) {\n\t\t\tthis.pendingWork.push(unit);\n\t\t}\n\n\t\tconst timeSinceLastExecution = Date.now() - this.lastExecutionTime;\n\n\t\tif (!this.throttler.value && (!this.options.waitThrottleDelayBetweenWorkUnits || timeSinceLastExecution >= this.options.throttleDelay)) {\n\t\t\t// Work directly if we are not throttling and we are not\n\t\t\t// enforced to throttle between `work()` calls.\n\t\t\tthis.doWork();\n\t\t} else if (!this.throttler.value && this.options.waitThrottleDelayBetweenWorkUnits) {\n\t\t\t// Otherwise, schedule the throttler to work.\n\t\t\tthis.scheduleThrottler(Math.max(this.options.throttleDelay - timeSinceLastExecution, 0));\n\t\t} else {\n\t\t\t// Otherwise, our work will be picked up by the running throttler\n\t\t}\n\n\t\treturn true; // work accepted\n\t}\n\n\tprivate doWork(): void {\n\t\tthis.lastExecutionTime = Date.now();\n\n\t\t// Extract chunk to handle and handle it\n\t\tthis.handler(this.pendingWork.splice(0, this.options.maxWorkChunkSize));\n\n\t\t// If we have remaining work, schedule it after a delay\n\t\tif (this.pendingWork.length > 0) {\n\t\t\tthis.scheduleThrottler();\n\t\t}\n\t}\n\n\tprivate scheduleThrottler(delay = this.options.throttleDelay): void {\n\t\tthis.throttler.value = new RunOnceScheduler(() => {\n\t\t\tthis.throttler.clear();\n\n\t\t\tthis.doWork();\n\t\t}, delay);\n\t\tthis.throttler.value.schedule();\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.pendingWork.length = 0;\n\t\tthis.disposed = true;\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n\ntype IdleApi = Pick<typeof globalThis, 'requestIdleCallback' | 'cancelIdleCallback'>;\n\n\n/**\n * Execute the callback the next time the browser is idle, returning an\n * {@link IDisposable} that will cancel the callback when disposed. This wraps\n * [requestIdleCallback] so it will fallback to [setTimeout] if the environment\n * doesn't support it.\n *\n * @param callback The callback to run when idle, this includes an\n * [IdleDeadline] that provides the time alloted for the idle callback by the\n * browser. Not respecting this deadline will result in a degraded user\n * experience.\n * @param timeout A timeout at which point to queue no longer wait for an idle\n * callback but queue it on the regular event loop (like setTimeout). Typically\n * this should not be used.\n *\n * [IdleDeadline]: https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline\n * [requestIdleCallback]: https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback\n * [setTimeout]: https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout\n *\n * **Note** that there is `dom.ts#runWhenWindowIdle` which is better suited when running inside a browser\n * context\n */\nexport let runWhenGlobalIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\nexport let _runWhenIdle: (targetWindow: IdleApi, callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\n(function () {\n\tconst safeGlobal: any = globalThis;\n\tif (typeof safeGlobal.requestIdleCallback !== 'function' || typeof safeGlobal.cancelIdleCallback !== 'function') {\n\t\t_runWhenIdle = (_targetWindow, runner, timeout?) => {\n\t\t\tsetTimeout0(() => {\n\t\t\t\tif (disposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst end = Date.now() + 15; // one frame at 64fps\n\t\t\t\tconst deadline: IdleDeadline = {\n\t\t\t\t\tdidTimeout: true,\n\t\t\t\t\ttimeRemaining() {\n\t\t\t\t\t\treturn Math.max(0, end - Date.now());\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\trunner(Object.freeze(deadline));\n\t\t\t});\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\t_runWhenIdle = (targetWindow: typeof safeGlobal, runner, timeout?) => {\n\t\t\tconst handle: number = targetWindow.requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\ttargetWindow.cancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n\trunWhenGlobalIdle = (runner, timeout) => _runWhenIdle(globalThis, runner, timeout);\n})();\n\nexport abstract class AbstractIdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: unknown;\n\n\tconstructor(targetWindow: IdleApi, executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = _runWhenIdle(targetWindow, () => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\tget isInitialized(): boolean {\n\t\treturn this._didRun;\n\t}\n}\n\n/**\n * An `IdleValue` that always uses the current window (which might be throttled or inactive)\n *\n * **Note** that there is `dom.ts#WindowIdleValue` which is better suited when running inside a browser\n * context\n */\nexport class GlobalIdleValue<T> extends AbstractIdleValue<T> {\n\n\tconstructor(executor: () => T) {\n\t\tsuper(globalThis, executor);\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IRunningTask {\n\treadonly taskId: number;\n\treadonly cancel: () => void;\n\treadonly promise: Promise<void>;\n}\n\ninterface IQueuedTask {\n\treadonly promise: Promise<void>;\n\treadonly promiseResolve: () => void;\n\treadonly promiseReject: (error: Error) => void;\n\trun: ITask<Promise<void>>;\n}\n\nexport interface ITaskSequentializerWithRunningTask {\n\treadonly running: Promise<void>;\n}\n\nexport interface ITaskSequentializerWithQueuedTask {\n\treadonly queued: IQueuedTask;\n}\n\n/**\n * @deprecated use `LimitedQueue` instead for an easier to use API\n */\nexport class TaskSequentializer {\n\n\tprivate _running?: IRunningTask;\n\tprivate _queued?: IQueuedTask;\n\n\tisRunning(taskId?: number): this is ITaskSequentializerWithRunningTask {\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._running?.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._running;\n\t}\n\n\tget running(): Promise<void> | undefined {\n\t\treturn this._running?.promise;\n\t}\n\n\tcancelRunning(): void {\n\t\tthis._running?.cancel();\n\t}\n\n\trun(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._running = { taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.doneRunning(taskId), () => this.doneRunning(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate doneRunning(taskId: number): void {\n\t\tif (this._running && taskId === this._running.taskId) {\n\n\t\t\t// only set running to done if the promise finished that is associated with that taskId\n\t\t\tthis._running = undefined;\n\n\t\t\t// schedule the queued task now that we are free if we have any\n\t\t\tthis.runQueued();\n\t\t}\n\t}\n\n\tprivate runQueued(): void {\n\t\tif (this._queued) {\n\t\t\tconst queued = this._queued;\n\t\t\tthis._queued = undefined;\n\n\t\t\t// Run queued task and complete on the associated promise\n\t\t\tqueued.run().then(queued.promiseResolve, queued.promiseReject);\n\t\t}\n\t}\n\n\t/**\n\t * Note: the promise to schedule as next run MUST itself call `run`.\n\t *       Otherwise, this sequentializer will report `false` for `isRunning`\n\t *       even when this task is running. Missing this detail means that\n\t *       suddenly multiple tasks will run in parallel.\n\t */\n\tqueue(run: ITask<Promise<void>>): Promise<void> {\n\n\t\t// this is our first queued task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._queued) {\n\t\t\tconst { promise, resolve: promiseResolve, reject: promiseReject } = promiseWithResolvers<void>();\n\t\t\tthis._queued = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous queued task, just overwrite it\n\t\telse {\n\t\t\tthis._queued.run = run;\n\t\t}\n\n\t\treturn this._queued.promise;\n\t}\n\n\thasQueued(): this is ITaskSequentializerWithQueuedTask {\n\t\treturn !!this._queued;\n\t}\n\n\tasync join(): Promise<void> {\n\t\treturn this._queued?.promise ?? this._running?.promise;\n\t}\n}\n\n//#endregion\n\n//#region\n\n/**\n * The `IntervalCounter` allows to count the number\n * of calls to `increment()` over a duration of\n * `interval`. This utility can be used to conditionally\n * throttle a frequent task when a certain threshold\n * is reached.\n */\nexport class IntervalCounter {\n\n\tprivate lastIncrementTime = 0;\n\n\tprivate value = 0;\n\n\tconstructor(private readonly interval: number, private readonly nowFn = () => Date.now()) { }\n\n\tincrement(): number {\n\t\tconst now = this.nowFn();\n\n\t\t// We are outside of the range of `interval` and as such\n\t\t// start counting from 0 and remember the time\n\t\tif (now - this.lastIncrementTime > this.interval) {\n\t\t\tthis.lastIncrementTime = now;\n\t\t\tthis.value = 0;\n\t\t}\n\n\t\tthis.value++;\n\n\t\treturn this.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nexport type ValueCallback<T = unknown> = (value: T | Promise<T>) => void;\n\nconst enum DeferredOutcome {\n\tResolved,\n\tRejected\n}\n\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise<T> {\n\n\tprivate completeCallback!: ValueCallback<T>;\n\tprivate errorCallback!: (err: unknown) => void;\n\tprivate outcome?: { outcome: DeferredOutcome.Rejected; value: unknown } | { outcome: DeferredOutcome.Resolved; value: T };\n\n\tpublic get isRejected() {\n\t\treturn this.outcome?.outcome === DeferredOutcome.Rejected;\n\t}\n\n\tpublic get isResolved() {\n\t\treturn this.outcome?.outcome === DeferredOutcome.Resolved;\n\t}\n\n\tpublic get isSettled() {\n\t\treturn !!this.outcome;\n\t}\n\n\tpublic get value() {\n\t\treturn this.outcome?.outcome === DeferredOutcome.Resolved ? this.outcome?.value : undefined;\n\t}\n\n\tpublic readonly p: Promise<T>;\n\n\tconstructor() {\n\t\tthis.p = new Promise<T>((c, e) => {\n\t\t\tthis.completeCallback = c;\n\t\t\tthis.errorCallback = e;\n\t\t});\n\t}\n\n\tpublic complete(value: T) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.completeCallback(value);\n\t\t\tthis.outcome = { outcome: DeferredOutcome.Resolved, value };\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic error(err: unknown) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.errorCallback(err);\n\t\t\tthis.outcome = { outcome: DeferredOutcome.Rejected, value: err };\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic settleWith(promise: Promise<T>): Promise<void> {\n\t\treturn promise.then(\n\t\t\tvalue => this.complete(value),\n\t\t\terror => this.error(error)\n\t\t);\n\t}\n\n\tpublic cancel() {\n\t\treturn this.error(new CancellationError());\n\t}\n}\n\n//#endregion\n\n//#region Promises\n\nexport namespace Promises {\n\n\t/**\n\t * A drop-in replacement for `Promise.all` with the only difference\n\t * that the method awaits every promise to either fulfill or reject.\n\t *\n\t * Similar to `Promise.all`, only the first error will be returned\n\t * if any.\n\t */\n\texport async function settled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tlet firstError: Error | undefined = undefined;\n\n\t\tconst result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n\t\t\tif (!firstError) {\n\t\t\t\tfirstError = error;\n\t\t\t}\n\n\t\t\treturn undefined; // do not rethrow so that other promises can settle\n\t\t})));\n\n\t\tif (typeof firstError !== 'undefined') {\n\t\t\tthrow firstError;\n\t\t}\n\n\t\treturn result as unknown as T[]; // cast is needed and protected by the `throw` above\n\t}\n\n\t/**\n\t * A helper to create a new `Promise<T>` with a body that is a promise\n\t * itself. By default, an error that raises from the async body will\n\t * end up as a unhandled rejection, so this utility properly awaits the\n\t * body and rejects the promise as a normal promise does without async\n\t * body.\n\t *\n\t * This method should only be used in rare cases where otherwise `async`\n\t * cannot be used (e.g. when callbacks are involved that require this).\n\t */\n\texport function withAsyncBody<T, E = Error>(bodyFn: (resolve: (value: T) => unknown, reject: (error: E) => unknown) => Promise<unknown>): Promise<T> {\n\t\t// eslint-disable-next-line no-async-promise-executor\n\t\treturn new Promise<T>(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tawait bodyFn(resolve, reject);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class StatefulPromise<T> {\n\tprivate _value: T | undefined = undefined;\n\tget value(): T | undefined { return this._value; }\n\n\tprivate _error: unknown = undefined;\n\tget error(): unknown { return this._error; }\n\n\tprivate _isResolved = false;\n\tget isResolved() { return this._isResolved; }\n\n\tpublic readonly promise: Promise<T>;\n\n\tconstructor(promise: Promise<T>) {\n\t\tthis.promise = promise.then(\n\t\t\tvalue => {\n\t\t\t\tthis._value = value;\n\t\t\t\tthis._isResolved = true;\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tthis._error = error;\n\t\t\t\tthis._isResolved = true;\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Returns the resolved value.\n\t * Throws if the promise is not resolved yet.\n\t */\n\tpublic requireValue(): T {\n\t\tif (!this._isResolved) {\n\t\t\tthrow new BugIndicatingError('Promise is not resolved yet');\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\nexport class LazyStatefulPromise<T> {\n\tprivate readonly _promise = new Lazy(() => new StatefulPromise(this._compute()));\n\n\tconstructor(\n\t\tprivate readonly _compute: () => Promise<T>,\n\t) { }\n\n\t/**\n\t * Returns the resolved value.\n\t * Throws if the promise is not resolved yet.\n\t */\n\tpublic requireValue(): T {\n\t\treturn this._promise.value.requireValue();\n\t}\n\n\t/**\n\t * Returns the promise (and triggers a computation of the promise if not yet done so).\n\t */\n\tpublic getPromise(): Promise<T> {\n\t\treturn this._promise.value.promise;\n\t}\n\n\t/**\n\t * Reads the current value without triggering a computation of the promise.\n\t */\n\tpublic get currentValue(): T | undefined {\n\t\treturn this._promise.rawValue?.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nconst enum AsyncIterableSourceState {\n\tInitial,\n\tDoneOK,\n\tDoneError,\n}\n\n/**\n * An object that allows to emit async values asynchronously or bring the iterable to an error state using `reject()`.\n * This emitter is valid only for the duration of the executor (until the promise returned by the executor settles).\n */\nexport interface AsyncIterableEmitter<T> {\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitOne(value: T): void;\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitMany(values: T[]): void;\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `reject()` have already been called, this method has no effect.\n\t */\n\treject(error: Error): void;\n}\n\n/**\n * An executor for the `AsyncIterableObject` that has access to an emitter.\n */\nexport interface AsyncIterableExecutor<T> {\n\t/**\n\t * @param emitter An object that allows to emit async values valid only for the duration of the executor.\n\t */\n\t(emitter: AsyncIterableEmitter<T>): unknown | Promise<unknown>;\n}\n\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport class AsyncIterableObject<T> implements AsyncIterable<T> {\n\n\tpublic static fromArray<T>(items: T[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>((writer) => {\n\t\t\twriter.emitMany(items);\n\t\t});\n\t}\n\n\tpublic static fromPromise<T>(promise: Promise<T[]>): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\temitter.emitMany(await promise);\n\t\t});\n\t}\n\n\tpublic static fromPromisesResolveOrder<T>(promises: Promise<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tawait Promise.all(promises.map(async (p) => emitter.emitOne(await p)));\n\t\t});\n\t}\n\n\tpublic static merge<T>(iterables: AsyncIterable<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject(async (emitter) => {\n\t\t\tawait Promise.all(iterables.map(async (iterable) => {\n\t\t\t\tfor await (const item of iterable) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\t}\n\n\tpublic static EMPTY = AsyncIterableObject.fromArray<any>([]);\n\n\tprivate _state: AsyncIterableSourceState;\n\tprivate _results: T[];\n\tprivate _error: Error | null;\n\tprivate readonly _onReturn?: () => void | Promise<void>;\n\tprivate readonly _onStateChanged: Emitter<void>;\n\n\tconstructor(executor: AsyncIterableExecutor<T>, onReturn?: () => void | Promise<void>) {\n\t\tthis._state = AsyncIterableSourceState.Initial;\n\t\tthis._results = [];\n\t\tthis._error = null;\n\t\tthis._onReturn = onReturn;\n\t\tthis._onStateChanged = new Emitter<void>();\n\n\t\tqueueMicrotask(async () => {\n\t\t\tconst writer: AsyncIterableEmitter<T> = {\n\t\t\t\temitOne: (item) => this.emitOne(item),\n\t\t\t\temitMany: (items) => this.emitMany(items),\n\t\t\t\treject: (error) => this.reject(error)\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tawait Promise.resolve(executor(writer));\n\t\t\t\tthis.resolve();\n\t\t\t} catch (err) {\n\t\t\t\tthis.reject(err);\n\t\t\t} finally {\n\t\t\t\twriter.emitOne = undefined!;\n\t\t\t\twriter.emitMany = undefined!;\n\t\t\t\twriter.reject = undefined!;\n\t\t\t}\n\t\t});\n\t}\n\n\t[Symbol.asyncIterator](): AsyncIterator<T, undefined, undefined> {\n\t\tlet i = 0;\n\t\treturn {\n\t\t\tnext: async () => {\n\t\t\t\tdo {\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneError) {\n\t\t\t\t\t\tthrow this._error;\n\t\t\t\t\t}\n\t\t\t\t\tif (i < this._results.length) {\n\t\t\t\t\t\treturn { done: false, value: this._results[i++] };\n\t\t\t\t\t}\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneOK) {\n\t\t\t\t\t\treturn { done: true, value: undefined };\n\t\t\t\t\t}\n\t\t\t\t\tawait Event.toPromise(this._onStateChanged.event);\n\t\t\t\t} while (true);\n\t\t\t},\n\t\t\treturn: async () => {\n\t\t\t\tthis._onReturn?.();\n\t\t\t\treturn { done: true, value: undefined };\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic static map<T, R>(iterable: AsyncIterable<T>, mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn new AsyncIterableObject<R>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\temitter.emitOne(mapFn(item));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic map<R>(mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn AsyncIterableObject.map(this, mapFn);\n\t}\n\n\tpublic static filter<T>(iterable: AsyncIterable<T>, filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\tif (filterFn(item)) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic filter<T2 extends T>(filterFn: (item: T) => item is T2): AsyncIterableObject<T2>;\n\tpublic filter(filterFn: (item: T) => boolean): AsyncIterableObject<T>;\n\tpublic filter(filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn AsyncIterableObject.filter(this, filterFn);\n\t}\n\n\tpublic static coalesce<T>(iterable: AsyncIterable<T | undefined | null>): AsyncIterableObject<T> {\n\t\treturn <AsyncIterableObject<T>>AsyncIterableObject.filter(iterable, item => !!item);\n\t}\n\n\tpublic coalesce(): AsyncIterableObject<NonNullable<T>> {\n\t\treturn AsyncIterableObject.coalesce(this) as AsyncIterableObject<NonNullable<T>>;\n\t}\n\n\tpublic static async toPromise<T>(iterable: AsyncIterable<T>): Promise<T[]> {\n\t\tconst result: T[] = [];\n\t\tfor await (const item of iterable) {\n\t\t\tresult.push(item);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic toPromise(): Promise<T[]> {\n\t\treturn AsyncIterableObject.toPromise(this);\n\t}\n\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitOne(value: T): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results.push(value);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitMany(values: T[]): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results = this._results.concat(values);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Calling `resolve()` will mark the result array as complete.\n\t *\n\t * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate resolve(): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneOK;\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate reject(error: Error) {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneError;\n\t\tthis._error = error;\n\t\tthis._onStateChanged.fire();\n\t}\n}\n\n\nexport function createCancelableAsyncIterableProducer<T>(callback: (token: CancellationToken) => AsyncIterable<T>): CancelableAsyncIterableProducer<T> {\n\tconst source = new CancellationTokenSource();\n\tconst innerIterable = callback(source.token);\n\n\treturn new CancelableAsyncIterableProducer<T>(source, async (emitter) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(new CancellationError());\n\t\t});\n\t\ttry {\n\t\t\tfor await (const item of innerIterable) {\n\t\t\t\tif (source.token.isCancellationRequested) {\n\t\t\t\t\t// canceled in the meantime\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\temitter.emitOne(item);\n\t\t\t}\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t} catch (err) {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(err);\n\t\t}\n\t});\n}\n\nexport class AsyncIterableSource<T> {\n\n\tprivate readonly _deferred = new DeferredPromise<void>();\n\tprivate readonly _asyncIterable: AsyncIterableObject<T>;\n\n\tprivate _errorFn: (error: Error) => void;\n\tprivate _emitOneFn: (item: T) => void;\n\tprivate _emitManyFn: (item: T[]) => void;\n\n\t/**\n\t *\n\t * @param onReturn A function that will be called when consuming the async iterable\n\t * has finished by the consumer, e.g the for-await-loop has be existed (break, return) early.\n\t * This is NOT called when resolving this source by its owner.\n\t */\n\tconstructor(onReturn?: () => Promise<void> | void) {\n\t\tthis._asyncIterable = new AsyncIterableObject(emitter => {\n\n\t\t\tif (earlyError) {\n\t\t\t\temitter.reject(earlyError);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (earlyItems) {\n\t\t\t\temitter.emitMany(earlyItems);\n\t\t\t}\n\t\t\tthis._errorFn = (error: Error) => emitter.reject(error);\n\t\t\tthis._emitOneFn = (item: T) => emitter.emitOne(item);\n\t\t\tthis._emitManyFn = (items: T[]) => emitter.emitMany(items);\n\t\t\treturn this._deferred.p;\n\t\t}, onReturn);\n\n\t\tlet earlyError: Error | undefined;\n\t\tlet earlyItems: T[] | undefined;\n\n\n\t\tthis._errorFn = (error: Error) => {\n\t\t\tif (!earlyError) {\n\t\t\t\tearlyError = error;\n\t\t\t}\n\t\t};\n\t\tthis._emitOneFn = (item: T) => {\n\t\t\tif (!earlyItems) {\n\t\t\t\tearlyItems = [];\n\t\t\t}\n\t\t\tearlyItems.push(item);\n\t\t};\n\t\tthis._emitManyFn = (items: T[]) => {\n\t\t\tif (!earlyItems) {\n\t\t\t\tearlyItems = items.slice();\n\t\t\t} else {\n\t\t\t\titems.forEach(item => earlyItems!.push(item));\n\t\t\t}\n\t\t};\n\t}\n\n\tget asyncIterable(): AsyncIterableObject<T> {\n\t\treturn this._asyncIterable;\n\t}\n\n\tresolve(): void {\n\t\tthis._deferred.complete();\n\t}\n\n\treject(error: Error): void {\n\t\tthis._errorFn(error);\n\t\tthis._deferred.complete();\n\t}\n\n\temitOne(item: T): void {\n\t\tthis._emitOneFn(item);\n\t}\n\n\temitMany(items: T[]) {\n\t\tthis._emitManyFn(items);\n\t}\n}\n\nexport function cancellableIterable<T>(iterableOrIterator: AsyncIterator<T> | AsyncIterable<T>, token: CancellationToken): AsyncIterableIterator<T> {\n\tconst iterator = Symbol.asyncIterator in iterableOrIterator ? iterableOrIterator[Symbol.asyncIterator]() : iterableOrIterator;\n\n\treturn {\n\t\tasync next(): Promise<IteratorResult<T>> {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn { done: true, value: undefined };\n\t\t\t}\n\t\t\tconst result = await raceCancellation(iterator.next(), token);\n\t\t\treturn result || { done: true, value: undefined };\n\t\t},\n\t\tthrow: iterator.throw?.bind(iterator),\n\t\treturn: iterator.return?.bind(iterator),\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn this;\n\t\t}\n\t};\n}\n\ntype ProducerConsumerValue<T> = {\n\tok: true;\n\tvalue: T;\n} | {\n\tok: false;\n\terror: Error;\n};\n\nclass ProducerConsumer<T> {\n\tprivate readonly _unsatisfiedConsumers: DeferredPromise<T>[] = [];\n\tprivate readonly _unconsumedValues: ProducerConsumerValue<T>[] = [];\n\tprivate _finalValue: ProducerConsumerValue<T> | undefined;\n\n\tpublic get hasFinalValue(): boolean {\n\t\treturn !!this._finalValue;\n\t}\n\n\tproduce(value: ProducerConsumerValue<T>): void {\n\t\tthis._ensureNoFinalValue();\n\t\tif (this._unsatisfiedConsumers.length > 0) {\n\t\t\tconst deferred = this._unsatisfiedConsumers.shift()!;\n\t\t\tthis._resolveOrRejectDeferred(deferred, value);\n\t\t} else {\n\t\t\tthis._unconsumedValues.push(value);\n\t\t}\n\t}\n\n\tproduceFinal(value: ProducerConsumerValue<T>): void {\n\t\tthis._ensureNoFinalValue();\n\t\tthis._finalValue = value;\n\t\tfor (const deferred of this._unsatisfiedConsumers) {\n\t\t\tthis._resolveOrRejectDeferred(deferred, value);\n\t\t}\n\t\tthis._unsatisfiedConsumers.length = 0;\n\t}\n\n\tprivate _ensureNoFinalValue(): void {\n\t\tif (this._finalValue) {\n\t\t\tthrow new BugIndicatingError('ProducerConsumer: cannot produce after final value has been set');\n\t\t}\n\t}\n\n\tprivate _resolveOrRejectDeferred(deferred: DeferredPromise<T>, value: ProducerConsumerValue<T>): void {\n\t\tif (value.ok) {\n\t\t\tdeferred.complete(value.value);\n\t\t} else {\n\t\t\tdeferred.error(value.error);\n\t\t}\n\t}\n\n\tconsume(): Promise<T> {\n\t\tif (this._unconsumedValues.length > 0 || this._finalValue) {\n\t\t\tconst value = this._unconsumedValues.length > 0 ? this._unconsumedValues.shift()! : this._finalValue!;\n\t\t\tif (value.ok) {\n\t\t\t\treturn Promise.resolve(value.value);\n\t\t\t} else {\n\t\t\t\treturn Promise.reject(value.error);\n\t\t\t}\n\t\t} else {\n\t\t\tconst deferred = new DeferredPromise<T>();\n\t\t\tthis._unsatisfiedConsumers.push(deferred);\n\t\t\treturn deferred.p;\n\t\t}\n\t}\n}\n\n/**\n * Important difference to AsyncIterableObject:\n * If it is iterated two times, the second iterator will not see the values emitted by the first iterator.\n */\nexport class AsyncIterableProducer<T> implements AsyncIterable<T> {\n\tprivate readonly _producerConsumer = new ProducerConsumer<IteratorResult<T>>();\n\n\tconstructor(executor: AsyncIterableExecutor<T>, private readonly _onReturn?: () => void) {\n\t\tqueueMicrotask(async () => {\n\t\t\tconst p = executor({\n\t\t\t\temitOne: value => this._producerConsumer.produce({ ok: true, value: { done: false, value: value } }),\n\t\t\t\temitMany: values => {\n\t\t\t\t\tfor (const value of values) {\n\t\t\t\t\t\tthis._producerConsumer.produce({ ok: true, value: { done: false, value: value } });\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treject: error => this._finishError(error),\n\t\t\t});\n\n\t\t\tif (!this._producerConsumer.hasFinalValue) {\n\t\t\t\ttry {\n\t\t\t\t\tawait p;\n\t\t\t\t\tthis._finishOk();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis._finishError(error);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static fromArray<T>(items: T[]): AsyncIterableProducer<T> {\n\t\treturn new AsyncIterableProducer<T>((writer) => {\n\t\t\twriter.emitMany(items);\n\t\t});\n\t}\n\n\tpublic static fromPromise<T>(promise: Promise<T[]>): AsyncIterableProducer<T> {\n\t\treturn new AsyncIterableProducer<T>(async (emitter) => {\n\t\t\temitter.emitMany(await promise);\n\t\t});\n\t}\n\n\tpublic static fromPromisesResolveOrder<T>(promises: Promise<T>[]): AsyncIterableProducer<T> {\n\t\treturn new AsyncIterableProducer<T>(async (emitter) => {\n\t\t\tawait Promise.all(promises.map(async (p) => emitter.emitOne(await p)));\n\t\t});\n\t}\n\n\tpublic static merge<T>(iterables: AsyncIterable<T>[]): AsyncIterableProducer<T> {\n\t\treturn new AsyncIterableProducer(async (emitter) => {\n\t\t\tawait Promise.all(iterables.map(async (iterable) => {\n\t\t\t\tfor await (const item of iterable) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\t}\n\n\tpublic static EMPTY = AsyncIterableProducer.fromArray<any>([]);\n\n\tpublic static map<T, R>(iterable: AsyncIterable<T>, mapFn: (item: T) => R): AsyncIterableProducer<R> {\n\t\treturn new AsyncIterableProducer<R>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\temitter.emitOne(mapFn(item));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic map<R>(mapFn: (item: T) => R): AsyncIterableProducer<R> {\n\t\treturn AsyncIterableProducer.map(this, mapFn);\n\t}\n\n\tpublic static coalesce<T>(iterable: AsyncIterable<T | undefined | null>): AsyncIterableProducer<T> {\n\t\treturn <AsyncIterableProducer<T>>AsyncIterableProducer.filter(iterable, item => !!item);\n\t}\n\n\tpublic coalesce(): AsyncIterableProducer<NonNullable<T>> {\n\t\treturn AsyncIterableProducer.coalesce(this) as AsyncIterableProducer<NonNullable<T>>;\n\t}\n\n\tpublic static filter<T>(iterable: AsyncIterable<T>, filterFn: (item: T) => boolean): AsyncIterableProducer<T> {\n\t\treturn new AsyncIterableProducer<T>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\tif (filterFn(item)) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic filter<T2 extends T>(filterFn: (item: T) => item is T2): AsyncIterableProducer<T2>;\n\tpublic filter(filterFn: (item: T) => boolean): AsyncIterableProducer<T>;\n\tpublic filter(filterFn: (item: T) => boolean): AsyncIterableProducer<T> {\n\t\treturn AsyncIterableProducer.filter(this, filterFn);\n\t}\n\n\tprivate _finishOk(): void {\n\t\tif (!this._producerConsumer.hasFinalValue) {\n\t\t\tthis._producerConsumer.produceFinal({ ok: true, value: { done: true, value: undefined } });\n\t\t}\n\t}\n\n\tprivate _finishError(error: Error): void {\n\t\tif (!this._producerConsumer.hasFinalValue) {\n\t\t\tthis._producerConsumer.produceFinal({ ok: false, error: error });\n\t\t}\n\t\t// Warning: this can cause to dropped errors.\n\t}\n\n\tprivate readonly _iterator: AsyncIterator<T, void, void> = {\n\t\tnext: () => this._producerConsumer.consume(),\n\t\treturn: () => {\n\t\t\tthis._onReturn?.();\n\t\t\treturn Promise.resolve({ done: true, value: undefined });\n\t\t},\n\t\tthrow: async (e) => {\n\t\t\tthis._finishError(e);\n\t\t\treturn { done: true, value: undefined };\n\t\t},\n\t};\n\n\t[Symbol.asyncIterator](): AsyncIterator<T, void, void> {\n\t\treturn this._iterator;\n\t}\n}\n\nexport class CancelableAsyncIterableProducer<T> extends AsyncIterableProducer<T> {\n\tconstructor(\n\t\tprivate readonly _source: CancellationTokenSource,\n\t\texecutor: AsyncIterableExecutor<T>\n\t) {\n\t\tsuper(executor);\n\t}\n\n\tcancel(): void {\n\t\tthis._source.cancel();\n\t}\n}\n\n//#endregion\n\nexport const AsyncReaderEndOfStream = Symbol('AsyncReaderEndOfStream');\n\nexport class AsyncReader<T> {\n\tprivate _buffer: T[] = [];\n\tprivate _atEnd = false;\n\n\tpublic get endOfStream(): boolean { return this._buffer.length === 0 && this._atEnd; }\n\tprivate _extendBufferPromise: Promise<void> | undefined;\n\n\tconstructor(\n\t\tprivate readonly _source: AsyncIterator<T>\n\t) {\n\t}\n\n\tpublic async read(): Promise<T | typeof AsyncReaderEndOfStream> {\n\t\tif (this._buffer.length === 0 && !this._atEnd) {\n\t\t\tawait this._extendBuffer();\n\t\t}\n\t\tif (this._buffer.length === 0) {\n\t\t\treturn AsyncReaderEndOfStream;\n\t\t}\n\t\treturn this._buffer.shift()!;\n\t}\n\n\tpublic async readWhile(predicate: (value: T) => boolean, callback: (element: T) => unknown): Promise<void> {\n\t\tdo {\n\t\t\tconst piece = await this.peek();\n\t\t\tif (piece === AsyncReaderEndOfStream) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!predicate(piece)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tawait this.read(); // consume\n\t\t\tawait callback(piece);\n\t\t} while (true);\n\t}\n\n\tpublic readBufferedOrThrow(): T | typeof AsyncReaderEndOfStream {\n\t\tconst value = this.peekBufferedOrThrow();\n\t\tthis._buffer.shift();\n\t\treturn value;\n\t}\n\n\tpublic async consumeToEnd(): Promise<void> {\n\t\twhile (!this.endOfStream) {\n\t\t\tawait this.read();\n\t\t}\n\t}\n\n\tpublic async peek(): Promise<T | typeof AsyncReaderEndOfStream> {\n\t\tif (this._buffer.length === 0 && !this._atEnd) {\n\t\t\tawait this._extendBuffer();\n\t\t}\n\t\tif (this._buffer.length === 0) {\n\t\t\treturn AsyncReaderEndOfStream;\n\t\t}\n\t\treturn this._buffer[0];\n\t}\n\n\tpublic peekBufferedOrThrow(): T | typeof AsyncReaderEndOfStream {\n\t\tif (this._buffer.length === 0) {\n\t\t\tif (this._atEnd) {\n\t\t\t\treturn AsyncReaderEndOfStream;\n\t\t\t}\n\t\t\tthrow new BugIndicatingError('No buffered elements');\n\t\t}\n\n\t\treturn this._buffer[0];\n\t}\n\n\tpublic async peekTimeout(timeoutMs: number): Promise<T | typeof AsyncReaderEndOfStream | undefined> {\n\t\tif (this._buffer.length === 0 && !this._atEnd) {\n\t\t\tawait raceTimeout(this._extendBuffer(), timeoutMs);\n\t\t}\n\t\tif (this._atEnd) {\n\t\t\treturn AsyncReaderEndOfStream;\n\t\t}\n\t\tif (this._buffer.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._buffer[0];\n\t}\n\n\tprivate _extendBuffer(): Promise<void> {\n\t\tif (this._atEnd) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tif (!this._extendBufferPromise) {\n\t\t\tthis._extendBufferPromise = (async () => {\n\t\t\t\tconst { value, done } = await this._source.next();\n\t\t\t\tthis._extendBufferPromise = undefined;\n\t\t\t\tif (done) {\n\t\t\t\t\tthis._atEnd = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis._buffer.push(value);\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\n\t\treturn this._extendBufferPromise;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IDebugNameData {\n\t/**\n\t * The owner object of an observable.\n\t * Used for debugging only, such as computing a name for the observable by iterating over the fields of the owner.\n\t */\n\treadonly owner?: DebugOwner | undefined;\n\n\t/**\n\t * A string or function that returns a string that represents the name of the observable.\n\t * Used for debugging only.\n\t */\n\treadonly debugName?: DebugNameSource | undefined;\n\n\t/**\n\t * A function that points to the defining function of the object.\n\t * Used for debugging only.\n\t */\n\treadonly debugReferenceFn?: Function | undefined;\n}\n\nexport class DebugNameData {\n\tconstructor(\n\t\tpublic readonly owner: DebugOwner | undefined,\n\t\tpublic readonly debugNameSource: DebugNameSource | undefined,\n\t\tpublic readonly referenceFn: Function | undefined,\n\t) { }\n\n\tpublic getDebugName(target: object): string | undefined {\n\t\treturn getDebugName(target, this);\n\t}\n}\n\n/**\n * The owning object of an observable.\n * Is only used for debugging purposes, such as computing a name for the observable by iterating over the fields of the owner.\n */\nexport type DebugOwner = object | undefined;\nexport type DebugNameSource = string | (() => string | undefined);\n\nconst countPerName = new Map<string, number>();\nconst cachedDebugName = new WeakMap<object, string>();\n\nexport function getDebugName(target: object, data: DebugNameData): string | undefined {\n\tconst cached = cachedDebugName.get(target);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tconst dbgName = computeDebugName(target, data);\n\tif (dbgName) {\n\t\tlet count = countPerName.get(dbgName) ?? 0;\n\t\tcount++;\n\t\tcountPerName.set(dbgName, count);\n\t\tconst result = count === 1 ? dbgName : `${dbgName}#${count}`;\n\t\tcachedDebugName.set(target, result);\n\t\treturn result;\n\t}\n\treturn undefined;\n}\n\nfunction computeDebugName(self: object, data: DebugNameData): string | undefined {\n\tconst cached = cachedDebugName.get(self);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tconst ownerStr = data.owner ? formatOwner(data.owner) + `.` : '';\n\n\tlet result: string | undefined;\n\tconst debugNameSource = data.debugNameSource;\n\tif (debugNameSource !== undefined) {\n\t\tif (typeof debugNameSource === 'function') {\n\t\t\tresult = debugNameSource();\n\t\t\tif (result !== undefined) {\n\t\t\t\treturn ownerStr + result;\n\t\t\t}\n\t\t} else {\n\t\t\treturn ownerStr + debugNameSource;\n\t\t}\n\t}\n\n\tconst referenceFn = data.referenceFn;\n\tif (referenceFn !== undefined) {\n\t\tresult = getFunctionName(referenceFn);\n\t\tif (result !== undefined) {\n\t\t\treturn ownerStr + result;\n\t\t}\n\t}\n\n\tif (data.owner !== undefined) {\n\t\tconst key = findKey(data.owner, self);\n\t\tif (key !== undefined) {\n\t\t\treturn ownerStr + key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nfunction findKey(obj: object, value: object): string | undefined {\n\tfor (const key in obj) {\n\t\tif ((obj as any)[key] === value) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst countPerClassName = new Map<string, number>();\nconst ownerId = new WeakMap<object, string>();\n\nfunction formatOwner(owner: object): string {\n\tconst id = ownerId.get(owner);\n\tif (id) {\n\t\treturn id;\n\t}\n\tconst className = getClassName(owner) ?? 'Object';\n\tlet count = countPerClassName.get(className) ?? 0;\n\tcount++;\n\tcountPerClassName.set(className, count);\n\tconst result = count === 1 ? className : `${className}#${count}`;\n\townerId.set(owner, result);\n\treturn result;\n}\n\nexport function getClassName(obj: object): string | undefined {\n\tconst ctor = obj.constructor;\n\tif (ctor) {\n\t\tif (ctor.name === 'Object') {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn ctor.name;\n\t}\n\treturn undefined;\n}\n\nexport function getFunctionName(fn: Function): string | undefined {\n\tconst fnSrc = fn.toString();\n\t// Pattern: /** @description ... */\n\tconst regexp = /\\/\\*\\*\\s*@description\\s*([^*]*)\\*\\//;\n\tconst match = regexp.exec(fnSrc);\n\tconst result = match ? match[1] : undefined;\n\treturn result?.trim();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from './arrays.js';\n\nexport type EqualityComparer<T> = (a: T, b: T) => boolean;\n\n/**\n * Compares two items for equality using strict equality.\n*/\nexport const strictEquals: EqualityComparer<any> = (a, b) => a === b;\n\n/**\n * Checks if the items of two arrays are equal.\n * By default, strict equality is used to compare elements, but a custom equality comparer can be provided.\n */\nexport function itemsEquals<T>(itemEquals: EqualityComparer<T> = strictEquals): EqualityComparer<readonly T[]> {\n\treturn (a, b) => arrays.equals(a, b, itemEquals);\n}\n\n/**\n * Two items are considered equal, if their stringified representations are equal.\n*/\nexport function jsonStringifyEquals<T>(): EqualityComparer<T> {\n\treturn (a, b) => JSON.stringify(a) === JSON.stringify(b);\n}\n\n/**\n * Uses `item.equals(other)` to determine equality.\n */\nexport function itemEquals<T extends { equals(other: T): boolean }>(): EqualityComparer<T> {\n\treturn (a, b) => a.equals(b);\n}\n\n/**\n * Checks if two items are both null or undefined, or are equal according to the provided equality comparer.\n*/\nexport function equalsIfDefined<T>(v1: T | undefined | null, v2: T | undefined | null, equals: EqualityComparer<T>): boolean;\n/**\n * Returns an equality comparer that checks if two items are both null or undefined, or are equal according to the provided equality comparer.\n*/\nexport function equalsIfDefined<T>(equals: EqualityComparer<T>): EqualityComparer<T | undefined | null>;\nexport function equalsIfDefined<T>(equalsOrV1: EqualityComparer<T> | T, v2?: T | undefined | null, equals?: EqualityComparer<T>): EqualityComparer<T | undefined | null> | boolean {\n\tif (equals !== undefined) {\n\t\tconst v1 = equalsOrV1 as T | undefined;\n\t\tif (v1 === undefined || v1 === null || v2 === undefined || v2 === null) {\n\t\t\treturn v2 === v1;\n\t\t}\n\t\treturn equals(v1, v2);\n\t} else {\n\t\tconst equals = equalsOrV1 as EqualityComparer<T>;\n\t\treturn (v1, v2) => {\n\t\t\tif (v1 === undefined || v1 === null || v2 === undefined || v2 === null) {\n\t\t\t\treturn v2 === v1;\n\t\t\t}\n\t\t\treturn equals(v1, v2);\n\t\t};\n\t}\n}\n\n/**\n * Drills into arrays (items ordered) and objects (keys unordered) and uses strict equality on everything else.\n*/\nexport function structuralEquals<T>(a: T, b: T): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t}\n\n\tif (Array.isArray(a) && Array.isArray(b)) {\n\t\tif (a.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\tif (!structuralEquals(a[i], b[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tif (a && typeof a === 'object' && b && typeof b === 'object') {\n\t\tif (Object.getPrototypeOf(a) === Object.prototype && Object.getPrototypeOf(b) === Object.prototype) {\n\t\t\tconst aObj = a as Record<string, unknown>;\n\t\t\tconst bObj = b as Record<string, unknown>;\n\t\t\tconst keysA = Object.keys(aObj);\n\t\t\tconst keysB = Object.keys(bObj);\n\t\t\tconst keysBSet = new Set(keysB);\n\n\t\t\tif (keysA.length !== keysB.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfor (const key of keysA) {\n\t\t\t\tif (!keysBSet.has(key)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (!structuralEquals(aObj[key], bObj[key])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * `getStructuralKey(a) === getStructuralKey(b) <=> structuralEquals(a, b)`\n * (assuming that a and b are not cyclic structures and nothing extends globalThis Array).\n*/\nexport function getStructuralKey(t: unknown): string {\n\treturn JSON.stringify(toNormalizedJsonStructure(t));\n}\n\nlet objectId = 0;\nconst objIds = new WeakMap<object, number>();\n\nfunction toNormalizedJsonStructure(t: unknown): unknown {\n\tif (Array.isArray(t)) {\n\t\treturn t.map(toNormalizedJsonStructure);\n\t}\n\n\tif (t && typeof t === 'object') {\n\t\tif (Object.getPrototypeOf(t) === Object.prototype) {\n\t\t\tconst tObj = t as Record<string, unknown>;\n\t\t\tconst res: Record<string, unknown> = Object.create(null);\n\t\t\tfor (const key of Object.keys(tObj).sort()) {\n\t\t\t\tres[key] = toNormalizedJsonStructure(tObj[key]);\n\t\t\t}\n\t\t\treturn res;\n\t\t} else {\n\t\t\tlet objId = objIds.get(t);\n\t\t\tif (objId === undefined) {\n\t\t\t\tobjId = objectId++;\n\t\t\t\tobjIds.set(t, objId);\n\t\t\t}\n\t\t\t// Random string to prevent collisions\n\t\t\treturn objId + '----2b76a038c20c4bcc';\n\t\t}\n\t}\n\treturn t;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore, onUnexpectedError } from './commonFacade/deps.js';\n\n/**\n * Represents an observable value.\n *\n * @template T The type of the values the observable can hold.\n */\n// This interface exists so that, for example for string observables,\n// typescript renders the type as `IObservable<string>` instead of `IObservable<string, unknown>`.\nexport interface IObservable<T> extends IObservableWithChange<T, unknown> { }\n\n/**\n * Represents an observable value.\n *\n * @template T The type of the values the observable can hold.\n * @template TChange The type used to describe value changes\n * (usually `void` and only used in advanced scenarios).\n * While observers can miss temporary values of an observable,\n * they will receive all change values (as long as they are subscribed)!\n */\nexport interface IObservableWithChange<T, TChange = unknown> {\n\t/**\n\t * Returns the current value.\n\t *\n\t * Calls {@link IObserver.handleChange} if the observable notices that the value changed.\n\t * Must not be called from {@link IObserver.handleChange}!\n\t */\n\tget(): T;\n\n\t/**\n\t * Forces the observable to check for changes and report them.\n\t *\n\t * Has the same effect as calling {@link IObservable.get}, but does not force the observable\n\t * to actually construct the value, e.g. if change deltas are used.\n\t * Calls {@link IObserver.handleChange} if the observable notices that the value changed.\n\t * Must not be called from {@link IObserver.handleChange}!\n\t */\n\treportChanges(): void;\n\n\t/**\n\t * Adds the observer to the set of subscribed observers.\n\t * This method is idempotent.\n\t */\n\taddObserver(observer: IObserver): void;\n\n\t/**\n\t * Removes the observer from the set of subscribed observers.\n\t * This method is idempotent.\n\t */\n\tremoveObserver(observer: IObserver): void;\n\n\t// #region These members have a standard implementation and are only part of the interface for convenience.\n\n\t/**\n\t * Reads the current value and subscribes the reader to this observable.\n\t *\n\t * Calls {@link IReader.readObservable} if a reader is given, otherwise {@link IObservable.get}\n\t * (see {@link ConvenientObservable.read} for the implementation).\n\t */\n\tread(reader: IReader | undefined): T;\n\n\t/**\n\t * Makes sure this value is computed eagerly.\n\t */\n\trecomputeInitiallyAndOnChange(store: DisposableStore, handleValue?: (value: T) => void): IObservable<T>;\n\n\t/**\n\t * Makes sure this value is cached.\n\t */\n\tkeepObserved(store: DisposableStore): IObservable<T>;\n\n\t/**\n\t * Creates a derived observable that depends on this observable.\n\t * Use the reader to read other observables\n\t * (see {@link ConvenientObservable.map} for the implementation).\n\t */\n\tmap<TNew>(fn: (value: T, reader: IReader) => TNew): IObservable<TNew>;\n\tmap<TNew>(owner: object, fn: (value: T, reader: IReader) => TNew): IObservable<TNew>;\n\n\tflatten<TNew>(this: IObservable<IObservable<TNew>>): IObservable<TNew>;\n\n\t/**\n\t * ONLY FOR DEBUGGING!\n\t * Logs computations of this derived.\n\t*/\n\tlog(): IObservableWithChange<T, TChange>;\n\n\t/**\n\t * A human-readable name for debugging purposes.\n\t */\n\treadonly debugName: string;\n\n\t/**\n\t * This property captures the type of the change object. Do not use it at runtime!\n\t */\n\treadonly TChange: TChange;\n\n\t// #endregion\n}\n\n/**\n * Represents an observer that can be subscribed to an observable.\n *\n * If an observer is subscribed to an observable and that observable didn't signal\n * a change through one of the observer methods, the observer can assume that the\n * observable didn't change.\n * If an observable reported a possible change, {@link IObservable.reportChanges} forces\n * the observable to report an actual change if there was one.\n */\nexport interface IObserver {\n\t/**\n\t * Signals that the given observable might have changed and a transaction potentially modifying that observable started.\n\t * Before the given observable can call this method again, is must call {@link IObserver.endUpdate}.\n\t *\n\t * Implementations must not get/read the value of other observables, as they might not have received this event yet!\n\t * The method {@link IObservable.reportChanges} can be used to force the observable to report the changes.\n\t */\n\tbeginUpdate<T>(observable: IObservable<T>): void;\n\n\t/**\n\t * Signals that the transaction that potentially modified the given observable ended.\n\t * This is a good place to react to (potential) changes.\n\t */\n\tendUpdate<T>(observable: IObservable<T>): void;\n\n\t/**\n\t * Signals that the given observable might have changed.\n\t * The method {@link IObservable.reportChanges} can be used to force the observable to report the changes.\n\t *\n\t * Implementations must not get/read the value of other observables, as they might not have received this event yet!\n\t * The change should be processed lazily or in {@link IObserver.endUpdate}.\n\t */\n\thandlePossibleChange<T>(observable: IObservable<T>): void;\n\n\t/**\n\t * Signals that the given {@link observable} changed.\n\t *\n\t * Implementations must not get/read the value of other observables, as they might not have received this event yet!\n\t * The change should be processed lazily or in {@link IObserver.endUpdate}.\n\t *\n\t * @param change Indicates how or why the value changed.\n\t */\n\thandleChange<T, TChange>(observable: IObservableWithChange<T, TChange>, change: TChange): void;\n}\n\nexport interface IReader {\n\t/**\n\t * Reads the value of an observable and subscribes to it.\n\t */\n\treadObservable<T>(observable: IObservableWithChange<T, any>): T;\n}\n\nexport interface ISettable<T, TChange = void> {\n\t/**\n\t * Sets the value of the observable.\n\t * Use a transaction to batch multiple changes (with a transaction, observers only react at the end of the transaction).\n\t *\n\t * @param transaction When given, value changes are handled on demand or when the transaction ends.\n\t * @param change Describes how or why the value changed.\n\t */\n\tset(value: T, transaction: ITransaction | undefined, change: TChange): void;\n}\n\nexport interface ITransaction {\n\t/**\n\t * Calls {@link Observer.beginUpdate} immediately\n\t * and {@link Observer.endUpdate} when the transaction ends.\n\t */\n\tupdateObserver(observer: IObserver, observable: IObservableWithChange<any, any>): void;\n}\n\n/**\n * This function is used to indicate that the caller recovered from an error that indicates a bug.\n*/\nexport function handleBugIndicatingErrorRecovery(message: string) {\n\tconst err = new Error('BugIndicatingErrorRecovery: ' + message);\n\tonUnexpectedError(err);\n\tconsole.error('recovered from an error that indicates a bug', err);\n}\n\n/**\n * A settable observable.\n */\nexport interface ISettableObservable<T, TChange = void> extends IObservableWithChange<T, TChange>, ISettable<T, TChange> {\n}\n\nexport interface IReaderWithStore extends IReader {\n\t/**\n\t * Items in this store get disposed just before the observable recomputes/reruns or when it becomes unobserved.\n\t*/\n\tget store(): DisposableStore;\n\n\t/**\n\t * Items in this store get disposed just after the observable recomputes/reruns or when it becomes unobserved.\n\t * This is important if the current run needs the undisposed result from the last run.\n\t *\n\t * Warning: Items in this store might still get disposed before dependents (that read the now disposed value in the past) are recomputed with the new (undisposed) value!\n\t * A clean solution for this is ref counting.\n\t*/\n\tget delayedStore(): DisposableStore;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AutorunObserver } from '../reactions/autorunImpl.js';\nimport { IObservable } from '../base.js';\nimport { TransactionImpl } from '../transaction.js';\nimport type { Derived } from '../observables/derivedImpl.js';\nimport { DebugLocation } from '../debugLocation.js';\n\nlet globalObservableLogger: IObservableLogger | undefined;\n\nexport function addLogger(logger: IObservableLogger): void {\n\tif (!globalObservableLogger) {\n\t\tglobalObservableLogger = logger;\n\t} else if (globalObservableLogger instanceof ComposedLogger) {\n\t\tglobalObservableLogger.loggers.push(logger);\n\t} else {\n\t\tglobalObservableLogger = new ComposedLogger([globalObservableLogger, logger]);\n\t}\n}\n\nexport function getLogger(): IObservableLogger | undefined {\n\treturn globalObservableLogger;\n}\n\nlet globalObservableLoggerFn: ((obs: IObservable<any>) => void) | undefined = undefined;\nexport function setLogObservableFn(fn: (obs: IObservable<any>) => void): void {\n\tglobalObservableLoggerFn = fn;\n}\n\nexport function logObservable(obs: IObservable<any>): void {\n\tif (globalObservableLoggerFn) {\n\t\tglobalObservableLoggerFn(obs);\n\t}\n}\n\nexport interface IChangeInformation {\n\toldValue: unknown;\n\tnewValue: unknown;\n\tchange: unknown;\n\tdidChange: boolean;\n\thadValue: boolean;\n}\n\nexport interface IObservableLogger {\n\thandleObservableCreated(observable: IObservable<any>, location: DebugLocation): void;\n\thandleOnListenerCountChanged(observable: IObservable<any>, newCount: number): void;\n\n\thandleObservableUpdated(observable: IObservable<any>, info: IChangeInformation): void;\n\n\thandleAutorunCreated(autorun: AutorunObserver, location: DebugLocation): void;\n\thandleAutorunDisposed(autorun: AutorunObserver): void;\n\thandleAutorunDependencyChanged(autorun: AutorunObserver, observable: IObservable<any>, change: unknown): void;\n\thandleAutorunStarted(autorun: AutorunObserver): void;\n\thandleAutorunFinished(autorun: AutorunObserver): void;\n\n\thandleDerivedDependencyChanged(derived: Derived<any, any, any>, observable: IObservable<any>, change: unknown): void;\n\thandleDerivedCleared(observable: Derived<any, any, any>): void;\n\n\thandleBeginTransaction(transaction: TransactionImpl): void;\n\thandleEndTransaction(transaction: TransactionImpl): void;\n}\n\nclass ComposedLogger implements IObservableLogger {\n\tconstructor(\n\t\tpublic readonly loggers: IObservableLogger[],\n\t) { }\n\n\thandleObservableCreated(observable: IObservable<any>, location: DebugLocation): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.handleObservableCreated(observable, location);\n\t\t}\n\t}\n\thandleOnListenerCountChanged(observable: IObservable<any>, newCount: number): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.handleOnListenerCountChanged(observable, newCount);\n\t\t}\n\t}\n\thandleObservableUpdated(observable: IObservable<any>, info: IChangeInformation): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.handleObservableUpdated(observable, info);\n\t\t}\n\t}\n\thandleAutorunCreated(autorun: AutorunObserver, location: DebugLocation): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.handleAutorunCreated(autorun, location);\n\t\t}\n\t}\n\thandleAutorunDisposed(autorun: AutorunObserver): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.handleAutorunDisposed(autorun);\n\t\t}\n\t}\n\thandleAutorunDependencyChanged(autorun: AutorunObserver, observable: IObservable<any>, change: unknown): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.handleAutorunDependencyChanged(autorun, observable, change);\n\t\t}\n\t}\n\thandleAutorunStarted(autorun: AutorunObserver): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.handleAutorunStarted(autorun);\n\t\t}\n\t}\n\thandleAutorunFinished(autorun: AutorunObserver): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.handleAutorunFinished(autorun);\n\t\t}\n\t}\n\thandleDerivedDependencyChanged(derived: Derived<any>, observable: IObservable<any>, change: unknown): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.handleDerivedDependencyChanged(derived, observable, change);\n\t\t}\n\t}\n\thandleDerivedCleared(observable: Derived<any>): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.handleDerivedCleared(observable);\n\t\t}\n\t}\n\thandleBeginTransaction(transaction: TransactionImpl): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.handleBeginTransaction(transaction);\n\t\t}\n\t}\n\thandleEndTransaction(transaction: TransactionImpl): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.handleEndTransaction(transaction);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { handleBugIndicatingErrorRecovery, IObservable, IObserver, ITransaction } from './base.js';\nimport { getFunctionName } from './debugName.js';\nimport { getLogger } from './logging/logging.js';\n\n/**\n * Starts a transaction in which many observables can be changed at once.\n * {@link fn} should start with a JS Doc using `@description` to give the transaction a debug name.\n * Reaction run on demand or when the transaction ends.\n */\n\nexport function transaction(fn: (tx: ITransaction) => void, getDebugName?: () => string): void {\n\tconst tx = new TransactionImpl(fn, getDebugName);\n\ttry {\n\t\tfn(tx);\n\t} finally {\n\t\ttx.finish();\n\t}\n}\nlet _globalTransaction: ITransaction | undefined = undefined;\n\nexport function globalTransaction(fn: (tx: ITransaction) => void) {\n\tif (_globalTransaction) {\n\t\tfn(_globalTransaction);\n\t} else {\n\t\tconst tx = new TransactionImpl(fn, undefined);\n\t\t_globalTransaction = tx;\n\t\ttry {\n\t\t\tfn(tx);\n\t\t} finally {\n\t\t\ttx.finish(); // During finish, more actions might be added to the transaction.\n\n\t\t\t// Which is why we only clear the global transaction after finish.\n\t\t\t_globalTransaction = undefined;\n\t\t}\n\t}\n}\n/** @deprecated */\n\nexport async function asyncTransaction(fn: (tx: ITransaction) => Promise<void>, getDebugName?: () => string): Promise<void> {\n\tconst tx = new TransactionImpl(fn, getDebugName);\n\ttry {\n\t\tawait fn(tx);\n\t} finally {\n\t\ttx.finish();\n\t}\n}\n/**\n * Allows to chain transactions.\n */\n\nexport function subtransaction(tx: ITransaction | undefined, fn: (tx: ITransaction) => void, getDebugName?: () => string): void {\n\tif (!tx) {\n\t\ttransaction(fn, getDebugName);\n\t} else {\n\t\tfn(tx);\n\t}\n} export class TransactionImpl implements ITransaction {\n\tprivate _updatingObservers: { observer: IObserver; observable: IObservable<any> }[] | null = [];\n\n\tconstructor(public readonly _fn: Function, private readonly _getDebugName?: () => string) {\n\t\tgetLogger()?.handleBeginTransaction(this);\n\t}\n\n\tpublic getDebugName(): string | undefined {\n\t\tif (this._getDebugName) {\n\t\t\treturn this._getDebugName();\n\t\t}\n\t\treturn getFunctionName(this._fn);\n\t}\n\n\tpublic updateObserver(observer: IObserver, observable: IObservable<any>): void {\n\t\tif (!this._updatingObservers) {\n\t\t\t// This happens when a transaction is used in a callback or async function.\n\t\t\t// If an async transaction is used, make sure the promise awaits all users of the transaction (e.g. no race).\n\t\t\thandleBugIndicatingErrorRecovery('Transaction already finished!');\n\t\t\t// Error recovery\n\t\t\ttransaction(tx => {\n\t\t\t\ttx.updateObserver(observer, observable);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\t// When this gets called while finish is active, they will still get considered\n\t\tthis._updatingObservers.push({ observer, observable });\n\t\tobserver.beginUpdate(observable);\n\t}\n\n\tpublic finish(): void {\n\t\tconst updatingObservers = this._updatingObservers;\n\t\tif (!updatingObservers) {\n\t\t\thandleBugIndicatingErrorRecovery('transaction.finish() has already been called!');\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0; i < updatingObservers.length; i++) {\n\t\t\tconst { observer, observable } = updatingObservers[i];\n\t\t\tobserver.endUpdate(observable);\n\t\t}\n\t\t// Prevent anyone from updating observers from now on.\n\t\tthis._updatingObservers = null;\n\t\tgetLogger()?.handleEndTransaction(this);\n\t}\n\n\tpublic debugGetUpdatingObservers() {\n\t\treturn this._updatingObservers;\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport type DebugLocation = DebugLocationImpl | undefined;\n\nexport namespace DebugLocation {\n\tlet enabled = false;\n\n\texport function enable(): void {\n\t\tenabled = true;\n\t}\n\n\texport function ofCaller(): DebugLocation {\n\t\tif (!enabled) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst Err = Error as any as { stackTraceLimit: number }; // For the monaco editor checks, which don't have the nodejs types.\n\n\t\tconst l = Err.stackTraceLimit;\n\t\tErr.stackTraceLimit = 3;\n\t\tconst stack = new Error().stack!;\n\t\tErr.stackTraceLimit = l;\n\n\t\treturn DebugLocationImpl.fromStack(stack, 2);\n\t}\n}\n\nclass DebugLocationImpl implements ILocation {\n\tpublic static fromStack(stack: string, parentIdx: number): DebugLocationImpl | undefined {\n\t\tconst lines = stack.split('\\n');\n\t\tconst location = parseLine(lines[parentIdx + 1]);\n\t\tif (location) {\n\t\t\treturn new DebugLocationImpl(\n\t\t\t\tlocation.fileName,\n\t\t\t\tlocation.line,\n\t\t\t\tlocation.column,\n\t\t\t\tlocation.id\n\t\t\t);\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tconstructor(\n\t\tpublic readonly fileName: string,\n\t\tpublic readonly line: number,\n\t\tpublic readonly column: number,\n\t\tpublic readonly id: string,\n\t) {\n\t}\n}\n\n\nexport interface ILocation {\n\tfileName: string;\n\tline: number;\n\tcolumn: number;\n\tid: string;\n}\n\nfunction parseLine(stackLine: string): ILocation | undefined {\n\tconst match = stackLine.match(/\\((.*):(\\d+):(\\d+)\\)/);\n\tif (match) {\n\t\treturn {\n\t\t\tfileName: match[1],\n\t\t\tline: parseInt(match[2]),\n\t\t\tcolumn: parseInt(match[3]),\n\t\t\tid: stackLine,\n\t\t};\n\t}\n\n\tconst match2 = stackLine.match(/at ([^\\(\\)]*):(\\d+):(\\d+)/);\n\n\tif (match2) {\n\t\treturn {\n\t\t\tfileName: match2[1],\n\t\t\tline: parseInt(match2[2]),\n\t\t\tcolumn: parseInt(match2[3]),\n\t\t\tid: stackLine,\n\t\t};\n\t}\n\n\treturn undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport type DebugLocation = DebugLocationImpl | undefined;\n\nexport namespace DebugLocation {\n\tlet enabled = false;\n\n\texport function enable(): void {\n\t\tenabled = true;\n\t}\n\n\texport function ofCaller(): DebugLocation {\n\t\tif (!enabled) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst Err = Error as any as { stackTraceLimit: number }; // For the monaco editor checks, which don't have the nodejs types.\n\n\t\tconst l = Err.stackTraceLimit;\n\t\tErr.stackTraceLimit = 3;\n\t\tconst stack = new Error().stack!;\n\t\tErr.stackTraceLimit = l;\n\n\t\treturn DebugLocationImpl.fromStack(stack, 2);\n\t}\n}\n\nclass DebugLocationImpl implements ILocation {\n\tpublic static fromStack(stack: string, parentIdx: number): DebugLocationImpl | undefined {\n\t\tconst lines = stack.split('\\n');\n\t\tconst location = parseLine(lines[parentIdx + 1]);\n\t\tif (location) {\n\t\t\treturn new DebugLocationImpl(\n\t\t\t\tlocation.fileName,\n\t\t\t\tlocation.line,\n\t\t\t\tlocation.column,\n\t\t\t\tlocation.id\n\t\t\t);\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tconstructor(\n\t\tpublic readonly fileName: string,\n\t\tpublic readonly line: number,\n\t\tpublic readonly column: number,\n\t\tpublic readonly id: string,\n\t) {\n\t}\n}\n\n\nexport interface ILocation {\n\tfileName: string;\n\tline: number;\n\tcolumn: number;\n\tid: string;\n}\n\nfunction parseLine(stackLine: string): ILocation | undefined {\n\tconst match = stackLine.match(/\\((.*):(\\d+):(\\d+)\\)/);\n\tif (match) {\n\t\treturn {\n\t\t\tfileName: match[1],\n\t\t\tline: parseInt(match[2]),\n\t\t\tcolumn: parseInt(match[3]),\n\t\t\tid: stackLine,\n\t\t};\n\t}\n\n\tconst match2 = stackLine.match(/at ([^\\(\\)]*):(\\d+):(\\d+)/);\n\n\tif (match2) {\n\t\treturn {\n\t\t\tfileName: match2[1],\n\t\t\tline: parseInt(match2[2]),\n\t\t\tcolumn: parseInt(match2[3]),\n\t\t\tid: stackLine,\n\t\t};\n\t}\n\n\treturn undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IObservableWithChange, IObserver, IReader, IObservable } from '../base.js';\nimport { DisposableStore } from '../commonFacade/deps.js';\nimport { DebugLocation } from '../debugLocation.js';\nimport { DebugOwner, getFunctionName } from '../debugName.js';\nimport { getLogger, logObservable } from '../logging/logging.js';\nimport type { keepObserved, recomputeInitiallyAndOnChange } from '../utils/utils.js';\nimport { derivedOpts } from './derived.js';\n\nlet _derived: typeof derivedOpts;\n/**\n * @internal\n * This is to allow splitting files.\n*/\nexport function _setDerivedOpts(derived: typeof _derived) {\n\t_derived = derived;\n}\n\nlet _recomputeInitiallyAndOnChange: typeof recomputeInitiallyAndOnChange;\nexport function _setRecomputeInitiallyAndOnChange(recomputeInitiallyAndOnChange: typeof _recomputeInitiallyAndOnChange) {\n\t_recomputeInitiallyAndOnChange = recomputeInitiallyAndOnChange;\n}\n\nlet _keepObserved: typeof keepObserved;\nexport function _setKeepObserved(keepObserved: typeof _keepObserved) {\n\t_keepObserved = keepObserved;\n}\n\nexport abstract class ConvenientObservable<T, TChange> implements IObservableWithChange<T, TChange> {\n\tget TChange(): TChange { return null!; }\n\n\tpublic abstract get(): T;\n\n\tpublic reportChanges(): void {\n\t\tthis.get();\n\t}\n\n\tpublic abstract addObserver(observer: IObserver): void;\n\tpublic abstract removeObserver(observer: IObserver): void;\n\n\t/** @sealed */\n\tpublic read(reader: IReader | undefined): T {\n\t\tif (reader) {\n\t\t\treturn reader.readObservable(this);\n\t\t} else {\n\t\t\treturn this.get();\n\t\t}\n\t}\n\n\t/** @sealed */\n\tpublic map<TNew>(fn: (value: T, reader: IReader) => TNew): IObservable<TNew>;\n\tpublic map<TNew>(owner: DebugOwner, fn: (value: T, reader: IReader) => TNew): IObservable<TNew>;\n\tpublic map<TNew>(fnOrOwner: DebugOwner | ((value: T, reader: IReader) => TNew), fnOrUndefined?: (value: T, reader: IReader) => TNew, debugLocation: DebugLocation = DebugLocation.ofCaller()): IObservable<TNew> {\n\t\tconst owner = fnOrUndefined === undefined ? undefined : fnOrOwner as DebugOwner;\n\t\tconst fn = fnOrUndefined === undefined ? fnOrOwner as (value: T, reader: IReader) => TNew : fnOrUndefined;\n\n\t\treturn _derived(\n\t\t\t{\n\t\t\t\towner,\n\t\t\t\tdebugName: () => {\n\t\t\t\t\tconst name = getFunctionName(fn);\n\t\t\t\t\tif (name !== undefined) {\n\t\t\t\t\t\treturn name;\n\t\t\t\t\t}\n\n\t\t\t\t\t// regexp to match `x => x.y` or `x => x?.y` where x and y can be arbitrary identifiers (uses backref):\n\t\t\t\t\tconst regexp = /^\\s*\\(?\\s*([a-zA-Z_$][a-zA-Z_$0-9]*)\\s*\\)?\\s*=>\\s*\\1(?:\\??)\\.([a-zA-Z_$][a-zA-Z_$0-9]*)\\s*$/;\n\t\t\t\t\tconst match = regexp.exec(fn.toString());\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\treturn `${this.debugName}.${match[2]}`;\n\t\t\t\t\t}\n\t\t\t\t\tif (!owner) {\n\t\t\t\t\t\treturn `${this.debugName} (mapped)`;\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t\tdebugReferenceFn: fn,\n\t\t\t},\n\t\t\t(reader) => fn(this.read(reader), reader),\n\t\t\tdebugLocation,\n\t\t);\n\t}\n\n\tpublic abstract log(): IObservableWithChange<T, TChange>;\n\n\t/**\n\t * @sealed\n\t * Converts an observable of an observable value into a direct observable of the value.\n\t*/\n\tpublic flatten<TNew>(this: IObservable<IObservableWithChange<TNew, any>>): IObservable<TNew> {\n\t\treturn _derived(\n\t\t\t{\n\t\t\t\towner: undefined,\n\t\t\t\tdebugName: () => `${this.debugName} (flattened)`,\n\t\t\t},\n\t\t\t(reader) => this.read(reader).read(reader)\n\t\t);\n\t}\n\n\tpublic recomputeInitiallyAndOnChange(store: DisposableStore, handleValue?: (value: T) => void): IObservable<T> {\n\t\tstore.add(_recomputeInitiallyAndOnChange!(this, handleValue));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Ensures that this observable is observed. This keeps the cache alive.\n\t * However, in case of deriveds, it does not force eager evaluation (only when the value is read/get).\n\t * Use `recomputeInitiallyAndOnChange` for eager evaluation.\n\t */\n\tpublic keepObserved(store: DisposableStore): IObservable<T> {\n\t\tstore.add(_keepObserved!(this));\n\t\treturn this;\n\t}\n\n\tpublic abstract get debugName(): string;\n\n\tprotected get debugValue() {\n\t\treturn this.get();\n\t}\n}\n\nexport abstract class BaseObservable<T, TChange = void> extends ConvenientObservable<T, TChange> {\n\tprotected readonly _observers = new Set<IObserver>();\n\n\tconstructor(debugLocation: DebugLocation) {\n\t\tsuper();\n\t\tgetLogger()?.handleObservableCreated(this, debugLocation);\n\t}\n\n\tpublic addObserver(observer: IObserver): void {\n\t\tconst len = this._observers.size;\n\t\tthis._observers.add(observer);\n\t\tif (len === 0) {\n\t\t\tthis.onFirstObserverAdded();\n\t\t}\n\t\tif (len !== this._observers.size) {\n\t\t\tgetLogger()?.handleOnListenerCountChanged(this, this._observers.size);\n\t\t}\n\t}\n\n\tpublic removeObserver(observer: IObserver): void {\n\t\tconst deleted = this._observers.delete(observer);\n\t\tif (deleted && this._observers.size === 0) {\n\t\t\tthis.onLastObserverRemoved();\n\t\t}\n\t\tif (deleted) {\n\t\t\tgetLogger()?.handleOnListenerCountChanged(this, this._observers.size);\n\t\t}\n\t}\n\n\tprotected onFirstObserverAdded(): void { }\n\tprotected onLastObserverRemoved(): void { }\n\n\tpublic override log(): IObservableWithChange<T, TChange> {\n\t\tconst hadLogger = !!getLogger();\n\t\tlogObservable(this);\n\t\tif (!hadLogger) {\n\t\t\tgetLogger()?.handleObservableCreated(this, DebugLocation.ofCaller());\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic debugGetObservers() {\n\t\treturn this._observers;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ISettableObservable, ITransaction } from '../base.js';\nimport { TransactionImpl } from '../transaction.js';\nimport { BaseObservable } from './baseObservable.js';\nimport { EqualityComparer, IDisposable, strictEquals } from '../commonFacade/deps.js';\nimport { DebugNameData } from '../debugName.js';\nimport { getLogger } from '../logging/logging.js';\nimport { DebugLocation } from '../debugLocation.js';\n\n/**\n * Creates an observable value.\n * Observers get informed when the value changes.\n * @template TChange An arbitrary type to describe how or why the value changed. Defaults to `void`.\n * Observers will receive every single change value.\n */\n\nexport function observableValue<T, TChange = void>(name: string, initialValue: T): ISettableObservable<T, TChange>;\nexport function observableValue<T, TChange = void>(owner: object, initialValue: T): ISettableObservable<T, TChange>;\nexport function observableValue<T, TChange = void>(nameOrOwner: string | object, initialValue: T, debugLocation = DebugLocation.ofCaller()): ISettableObservable<T, TChange> {\n\tlet debugNameData: DebugNameData;\n\tif (typeof nameOrOwner === 'string') {\n\t\tdebugNameData = new DebugNameData(undefined, nameOrOwner, undefined);\n\t} else {\n\t\tdebugNameData = new DebugNameData(nameOrOwner, undefined, undefined);\n\t}\n\treturn new ObservableValue(debugNameData, initialValue, strictEquals, debugLocation);\n}\n\nexport class ObservableValue<T, TChange = void>\n\textends BaseObservable<T, TChange>\n\timplements ISettableObservable<T, TChange> {\n\tprotected _value: T;\n\n\tget debugName() {\n\t\treturn this._debugNameData.getDebugName(this) ?? 'ObservableValue';\n\t}\n\n\tconstructor(\n\t\tprivate readonly _debugNameData: DebugNameData,\n\t\tinitialValue: T,\n\t\tprivate readonly _equalityComparator: EqualityComparer<T>,\n\t\tdebugLocation: DebugLocation\n\t) {\n\t\tsuper(debugLocation);\n\t\tthis._value = initialValue;\n\n\t\tgetLogger()?.handleObservableUpdated(this, { hadValue: false, newValue: initialValue, change: undefined, didChange: true, oldValue: undefined });\n\t}\n\tpublic override get(): T {\n\t\treturn this._value;\n\t}\n\n\tpublic set(value: T, tx: ITransaction | undefined, change: TChange): void {\n\t\tif (change === undefined && this._equalityComparator(this._value, value)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet _tx: TransactionImpl | undefined;\n\t\tif (!tx) {\n\t\t\ttx = _tx = new TransactionImpl(() => { }, () => `Setting ${this.debugName}`);\n\t\t}\n\t\ttry {\n\t\t\tconst oldValue = this._value;\n\t\t\tthis._setValue(value);\n\t\t\tgetLogger()?.handleObservableUpdated(this, { oldValue, newValue: value, change, didChange: true, hadValue: true });\n\n\t\t\tfor (const observer of this._observers) {\n\t\t\t\ttx.updateObserver(observer, this);\n\t\t\t\tobserver.handleChange(this, change);\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_tx) {\n\t\t\t\t_tx.finish();\n\t\t\t}\n\t\t}\n\t}\n\n\toverride toString(): string {\n\t\treturn `${this.debugName}: ${this._value}`;\n\t}\n\n\tprotected _setValue(newValue: T): void {\n\t\tthis._value = newValue;\n\t}\n\n\tpublic debugGetState() {\n\t\treturn {\n\t\t\tvalue: this._value,\n\t\t};\n\t}\n\n\tpublic debugSetValue(value: unknown) {\n\t\tthis._value = value as T;\n\t}\n}\n/**\n * A disposable observable. When disposed, its value is also disposed.\n * When a new value is set, the previous value is disposed.\n */\n\nexport function disposableObservableValue<T extends IDisposable | undefined, TChange = void>(nameOrOwner: string | object, initialValue: T, debugLocation = DebugLocation.ofCaller()): ISettableObservable<T, TChange> & IDisposable {\n\tlet debugNameData: DebugNameData;\n\tif (typeof nameOrOwner === 'string') {\n\t\tdebugNameData = new DebugNameData(undefined, nameOrOwner, undefined);\n\t} else {\n\t\tdebugNameData = new DebugNameData(nameOrOwner, undefined, undefined);\n\t}\n\treturn new DisposableObservableValue(debugNameData, initialValue, strictEquals, debugLocation);\n}\n\nexport class DisposableObservableValue<T extends IDisposable | undefined, TChange = void> extends ObservableValue<T, TChange> implements IDisposable {\n\tprotected override _setValue(newValue: T): void {\n\t\tif (this._value === newValue) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = newValue;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._value?.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IObservable, IObservableWithChange, IObserver, IReaderWithStore } from '../base.js';\nimport { DebugNameData } from '../debugName.js';\nimport { assertFn, BugIndicatingError, DisposableStore, IDisposable, markAsDisposed, onBugIndicatingError, trackDisposable } from '../commonFacade/deps.js';\nimport { getLogger } from '../logging/logging.js';\nimport { IChangeTracker } from '../changeTracker.js';\nimport { DebugLocation } from '../debugLocation.js';\n\nexport const enum AutorunState {\n\t/**\n\t * A dependency could have changed.\n\t * We need to explicitly ask them if at least one dependency changed.\n\t */\n\tdependenciesMightHaveChanged = 1,\n\n\t/**\n\t * A dependency changed and we need to recompute.\n\t */\n\tstale = 2,\n\tupToDate = 3,\n}\n\nexport class AutorunObserver<TChangeSummary = any> implements IObserver, IReaderWithStore, IDisposable {\n\tprivate _state = AutorunState.stale;\n\tprivate _updateCount = 0;\n\tprivate _disposed = false;\n\tprivate _dependencies = new Set<IObservable<any>>();\n\tprivate _dependenciesToBeRemoved = new Set<IObservable<any>>();\n\tprivate _changeSummary: TChangeSummary | undefined;\n\tprivate _isRunning = false;\n\n\tpublic get debugName(): string {\n\t\treturn this._debugNameData.getDebugName(this) ?? '(anonymous)';\n\t}\n\n\tconstructor(\n\t\tpublic readonly _debugNameData: DebugNameData,\n\t\tpublic readonly _runFn: (reader: IReaderWithStore, changeSummary: TChangeSummary) => void,\n\t\tprivate readonly _changeTracker: IChangeTracker<TChangeSummary> | undefined,\n\t\tdebugLocation: DebugLocation\n\t) {\n\t\tthis._changeSummary = this._changeTracker?.createChangeSummary(undefined);\n\t\tgetLogger()?.handleAutorunCreated(this, debugLocation);\n\t\tthis._run();\n\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis._disposed = true;\n\t\tfor (const o of this._dependencies) {\n\t\t\to.removeObserver(this); // Warning: external call!\n\t\t}\n\t\tthis._dependencies.clear();\n\n\t\tif (this._store !== undefined) {\n\t\t\tthis._store.dispose();\n\t\t}\n\t\tif (this._delayedStore !== undefined) {\n\t\t\tthis._delayedStore.dispose();\n\t\t}\n\n\t\tgetLogger()?.handleAutorunDisposed(this);\n\t\tmarkAsDisposed(this);\n\t}\n\n\tprivate _run() {\n\t\tconst emptySet = this._dependenciesToBeRemoved;\n\t\tthis._dependenciesToBeRemoved = this._dependencies;\n\t\tthis._dependencies = emptySet;\n\n\t\tthis._state = AutorunState.upToDate;\n\n\t\ttry {\n\t\t\tif (!this._disposed) {\n\t\t\t\tgetLogger()?.handleAutorunStarted(this);\n\t\t\t\tconst changeSummary = this._changeSummary!;\n\t\t\t\tconst delayedStore = this._delayedStore;\n\t\t\t\tif (delayedStore !== undefined) {\n\t\t\t\t\tthis._delayedStore = undefined;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tthis._isRunning = true;\n\t\t\t\t\tif (this._changeTracker) {\n\t\t\t\t\t\tthis._changeTracker.beforeUpdate?.(this, changeSummary);\n\t\t\t\t\t\tthis._changeSummary = this._changeTracker.createChangeSummary(changeSummary); // Warning: external call!\n\t\t\t\t\t}\n\t\t\t\t\tif (this._store !== undefined) {\n\t\t\t\t\t\tthis._store.dispose();\n\t\t\t\t\t\tthis._store = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._runFn(this, changeSummary); // Warning: external call!\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonBugIndicatingError(e);\n\t\t\t\t} finally {\n\t\t\t\t\tthis._isRunning = false;\n\t\t\t\t\tif (delayedStore !== undefined) {\n\t\t\t\t\t\tdelayedStore.dispose();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tif (!this._disposed) {\n\t\t\t\tgetLogger()?.handleAutorunFinished(this);\n\t\t\t}\n\t\t\t// We don't want our observed observables to think that they are (not even temporarily) not being observed.\n\t\t\t// Thus, we only unsubscribe from observables that are definitely not read anymore.\n\t\t\tfor (const o of this._dependenciesToBeRemoved) {\n\t\t\t\to.removeObserver(this); // Warning: external call!\n\t\t\t}\n\t\t\tthis._dependenciesToBeRemoved.clear();\n\t\t}\n\t}\n\n\tpublic toString(): string {\n\t\treturn `Autorun<${this.debugName}>`;\n\t}\n\n\t// IObserver implementation\n\tpublic beginUpdate(_observable: IObservable<any>): void {\n\t\tif (this._state === AutorunState.upToDate) {\n\t\t\tthis._state = AutorunState.dependenciesMightHaveChanged;\n\t\t}\n\t\tthis._updateCount++;\n\t}\n\n\tpublic endUpdate(_observable: IObservable<any>): void {\n\t\ttry {\n\t\t\tif (this._updateCount === 1) {\n\t\t\t\tdo {\n\t\t\t\t\tif (this._state === AutorunState.dependenciesMightHaveChanged) {\n\t\t\t\t\t\tthis._state = AutorunState.upToDate;\n\t\t\t\t\t\tfor (const d of this._dependencies) {\n\t\t\t\t\t\t\td.reportChanges(); // Warning: external call!\n\t\t\t\t\t\t\tif (this._state as AutorunState === AutorunState.stale) {\n\t\t\t\t\t\t\t\t// The other dependencies will refresh on demand\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._state !== AutorunState.upToDate) {\n\t\t\t\t\t\tthis._run(); // Warning: indirect external call!\n\t\t\t\t\t}\n\t\t\t\t} while (this._state !== AutorunState.upToDate);\n\t\t\t}\n\t\t} finally {\n\t\t\tthis._updateCount--;\n\t\t}\n\n\t\tassertFn(() => this._updateCount >= 0);\n\t}\n\n\tpublic handlePossibleChange(observable: IObservable<any>): void {\n\t\tif (this._state === AutorunState.upToDate && this._isDependency(observable)) {\n\t\t\tthis._state = AutorunState.dependenciesMightHaveChanged;\n\t\t}\n\t}\n\n\tpublic handleChange<T, TChange>(observable: IObservableWithChange<T, TChange>, change: TChange): void {\n\t\tif (this._isDependency(observable)) {\n\t\t\tgetLogger()?.handleAutorunDependencyChanged(this, observable, change);\n\t\t\ttry {\n\t\t\t\t// Warning: external call!\n\t\t\t\tconst shouldReact = this._changeTracker ? this._changeTracker.handleChange({\n\t\t\t\t\tchangedObservable: observable,\n\t\t\t\t\tchange,\n\t\t\t\t\tdidChange: (o): this is any => o === observable as any,\n\t\t\t\t}, this._changeSummary!) : true;\n\t\t\t\tif (shouldReact) {\n\t\t\t\t\tthis._state = AutorunState.stale;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonBugIndicatingError(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _isDependency(observable: IObservableWithChange<any, any>): boolean {\n\t\treturn this._dependencies.has(observable) && !this._dependenciesToBeRemoved.has(observable);\n\t}\n\n\t// IReader implementation\n\n\tprivate _ensureNoRunning(): void {\n\t\tif (!this._isRunning) { throw new BugIndicatingError('The reader object cannot be used outside its compute function!'); }\n\t}\n\n\tpublic readObservable<T>(observable: IObservable<T>): T {\n\t\tthis._ensureNoRunning();\n\n\t\t// In case the run action disposes the autorun\n\t\tif (this._disposed) {\n\t\t\treturn observable.get(); // warning: external call!\n\t\t}\n\n\t\tobservable.addObserver(this); // warning: external call!\n\t\tconst value = observable.get(); // warning: external call!\n\t\tthis._dependencies.add(observable);\n\t\tthis._dependenciesToBeRemoved.delete(observable);\n\t\treturn value;\n\t}\n\n\tprivate _store: DisposableStore | undefined = undefined;\n\tget store(): DisposableStore {\n\t\tthis._ensureNoRunning();\n\t\tif (this._disposed) {\n\t\t\tthrow new BugIndicatingError('Cannot access store after dispose');\n\t\t}\n\n\t\tif (this._store === undefined) {\n\t\t\tthis._store = new DisposableStore();\n\t\t}\n\t\treturn this._store;\n\t}\n\n\tprivate _delayedStore: DisposableStore | undefined = undefined;\n\tget delayedStore(): DisposableStore {\n\t\tthis._ensureNoRunning();\n\t\tif (this._disposed) {\n\t\t\tthrow new BugIndicatingError('Cannot access store after dispose');\n\t\t}\n\n\t\tif (this._delayedStore === undefined) {\n\t\t\tthis._delayedStore = new DisposableStore();\n\t\t}\n\t\treturn this._delayedStore;\n\t}\n\n\tpublic debugGetState() {\n\t\treturn {\n\t\t\tisRunning: this._isRunning,\n\t\t\tupdateCount: this._updateCount,\n\t\t\tdependencies: this._dependencies,\n\t\t\tstate: this._state,\n\t\t};\n\t}\n\n\tpublic debugRerun(): void {\n\t\tif (!this._isRunning) {\n\t\t\tthis._run();\n\t\t} else {\n\t\t\tthis._state = AutorunState.stale;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IObservable, IObservableWithChange, IObserver, IReaderWithStore, ISettableObservable, ITransaction, } from '../base.js';\nimport { BaseObservable } from './baseObservable.js';\nimport { DebugNameData } from '../debugName.js';\nimport { BugIndicatingError, DisposableStore, EqualityComparer, assertFn, onBugIndicatingError } from '../commonFacade/deps.js';\nimport { getLogger } from '../logging/logging.js';\nimport { IChangeTracker } from '../changeTracker.js';\nimport { DebugLocation } from '../debugLocation.js';\n\nexport interface IDerivedReader<TChange = void> extends IReaderWithStore {\n\t/**\n\t * Call this to report a change delta or to force report a change, even if the new value is the same as the old value.\n\t*/\n\treportChange(change: TChange): void;\n}\n\nexport const enum DerivedState {\n\t/** Initial state, no previous value, recomputation needed */\n\tinitial = 0,\n\n\t/**\n\t * A dependency could have changed.\n\t * We need to explicitly ask them if at least one dependency changed.\n\t */\n\tdependenciesMightHaveChanged = 1,\n\n\t/**\n\t * A dependency changed and we need to recompute.\n\t * After recomputation, we need to check the previous value to see if we changed as well.\n\t */\n\tstale = 2,\n\n\t/**\n\t * No change reported, our cached value is up to date.\n\t */\n\tupToDate = 3,\n}\n\nexport class Derived<T, TChangeSummary = any, TChange = void> extends BaseObservable<T, TChange> implements IDerivedReader<TChange>, IObserver {\n\tprivate _state = DerivedState.initial;\n\tprivate _value: T | undefined = undefined;\n\tprivate _updateCount = 0;\n\tprivate _dependencies = new Set<IObservable<any>>();\n\tprivate _dependenciesToBeRemoved = new Set<IObservable<any>>();\n\tprivate _changeSummary: TChangeSummary | undefined = undefined;\n\tprivate _isUpdating = false;\n\tprivate _isComputing = false;\n\tprivate _didReportChange = false;\n\tprivate _isInBeforeUpdate = false;\n\tprivate _isReaderValid = false;\n\tprivate _store: DisposableStore | undefined = undefined;\n\tprivate _delayedStore: DisposableStore | undefined = undefined;\n\tprivate _removedObserverToCallEndUpdateOn: Set<IObserver> | null = null;\n\n\tpublic override get debugName(): string {\n\t\treturn this._debugNameData.getDebugName(this) ?? '(anonymous)';\n\t}\n\n\tconstructor(\n\t\tpublic readonly _debugNameData: DebugNameData,\n\t\tpublic readonly _computeFn: (reader: IDerivedReader<TChange>, changeSummary: TChangeSummary) => T,\n\t\tprivate readonly _changeTracker: IChangeTracker<TChangeSummary> | undefined,\n\t\tprivate readonly _handleLastObserverRemoved: (() => void) | undefined = undefined,\n\t\tprivate readonly _equalityComparator: EqualityComparer<T>,\n\t\tdebugLocation: DebugLocation,\n\t) {\n\t\tsuper(debugLocation);\n\t\tthis._changeSummary = this._changeTracker?.createChangeSummary(undefined);\n\t}\n\n\tprotected override onLastObserverRemoved(): void {\n\t\t/**\n\t\t * We are not tracking changes anymore, thus we have to assume\n\t\t * that our cache is invalid.\n\t\t */\n\t\tthis._state = DerivedState.initial;\n\t\tthis._value = undefined;\n\t\tgetLogger()?.handleDerivedCleared(this);\n\t\tfor (const d of this._dependencies) {\n\t\t\td.removeObserver(this);\n\t\t}\n\t\tthis._dependencies.clear();\n\n\t\tif (this._store !== undefined) {\n\t\t\tthis._store.dispose();\n\t\t\tthis._store = undefined;\n\t\t}\n\t\tif (this._delayedStore !== undefined) {\n\t\t\tthis._delayedStore.dispose();\n\t\t\tthis._delayedStore = undefined;\n\t\t}\n\n\t\tthis._handleLastObserverRemoved?.();\n\t}\n\n\tpublic override get(): T {\n\t\tconst checkEnabled = false; // TODO set to true\n\t\tif (this._isComputing && checkEnabled) {\n\t\t\t// investigate why this fails in the diff editor!\n\t\t\tthrow new BugIndicatingError('Cyclic deriveds are not supported yet!');\n\t\t}\n\n\t\tif (this._observers.size === 0) {\n\t\t\tlet result;\n\t\t\t// Without observers, we don't know when to clean up stuff.\n\t\t\t// Thus, we don't cache anything to prevent memory leaks.\n\t\t\ttry {\n\t\t\t\tthis._isReaderValid = true;\n\t\t\t\tlet changeSummary = undefined;\n\t\t\t\tif (this._changeTracker) {\n\t\t\t\t\tchangeSummary = this._changeTracker.createChangeSummary(undefined);\n\t\t\t\t\tthis._changeTracker.beforeUpdate?.(this, changeSummary);\n\t\t\t\t}\n\t\t\t\tresult = this._computeFn(this, changeSummary!);\n\t\t\t} finally {\n\t\t\t\tthis._isReaderValid = false;\n\t\t\t}\n\t\t\t// Clear new dependencies\n\t\t\tthis.onLastObserverRemoved();\n\t\t\treturn result;\n\n\t\t} else {\n\t\t\tdo {\n\t\t\t\t// We might not get a notification for a dependency that changed while it is updating,\n\t\t\t\t// thus we also have to ask all our depedencies if they changed in this case.\n\t\t\t\tif (this._state === DerivedState.dependenciesMightHaveChanged) {\n\t\t\t\t\tfor (const d of this._dependencies) {\n\t\t\t\t\t\t/** might call {@link handleChange} indirectly, which could make us stale */\n\t\t\t\t\t\td.reportChanges();\n\n\t\t\t\t\t\tif (this._state as DerivedState === DerivedState.stale) {\n\t\t\t\t\t\t\t// The other dependencies will refresh on demand, so early break\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// We called report changes of all dependencies.\n\t\t\t\t// If we are still not stale, we can assume to be up to date again.\n\t\t\t\tif (this._state === DerivedState.dependenciesMightHaveChanged) {\n\t\t\t\t\tthis._state = DerivedState.upToDate;\n\t\t\t\t}\n\n\t\t\t\tif (this._state !== DerivedState.upToDate) {\n\t\t\t\t\tthis._recompute();\n\t\t\t\t}\n\t\t\t\t// In case recomputation changed one of our dependencies, we need to recompute again.\n\t\t\t} while (this._state !== DerivedState.upToDate);\n\t\t\treturn this._value!;\n\t\t}\n\t}\n\n\tprivate _recompute() {\n\t\tlet didChange = false;\n\t\tthis._isComputing = true;\n\t\tthis._didReportChange = false;\n\n\t\tconst emptySet = this._dependenciesToBeRemoved;\n\t\tthis._dependenciesToBeRemoved = this._dependencies;\n\t\tthis._dependencies = emptySet;\n\n\t\ttry {\n\t\t\tconst changeSummary = this._changeSummary!;\n\n\t\t\tthis._isReaderValid = true;\n\t\t\tif (this._changeTracker) {\n\t\t\t\tthis._isInBeforeUpdate = true;\n\t\t\t\tthis._changeTracker.beforeUpdate?.(this, changeSummary);\n\t\t\t\tthis._isInBeforeUpdate = false;\n\t\t\t\tthis._changeSummary = this._changeTracker?.createChangeSummary(changeSummary);\n\t\t\t}\n\n\t\t\tconst hadValue = this._state !== DerivedState.initial;\n\t\t\tconst oldValue = this._value;\n\t\t\tthis._state = DerivedState.upToDate;\n\n\t\t\tconst delayedStore = this._delayedStore;\n\t\t\tif (delayedStore !== undefined) {\n\t\t\t\tthis._delayedStore = undefined;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tif (this._store !== undefined) {\n\t\t\t\t\tthis._store.dispose();\n\t\t\t\t\tthis._store = undefined;\n\t\t\t\t}\n\t\t\t\t/** might call {@link handleChange} indirectly, which could invalidate us */\n\t\t\t\tthis._value = this._computeFn(this, changeSummary);\n\n\t\t\t} finally {\n\t\t\t\tthis._isReaderValid = false;\n\t\t\t\t// We don't want our observed observables to think that they are (not even temporarily) not being observed.\n\t\t\t\t// Thus, we only unsubscribe from observables that are definitely not read anymore.\n\t\t\t\tfor (const o of this._dependenciesToBeRemoved) {\n\t\t\t\t\to.removeObserver(this);\n\t\t\t\t}\n\t\t\t\tthis._dependenciesToBeRemoved.clear();\n\n\t\t\t\tif (delayedStore !== undefined) {\n\t\t\t\t\tdelayedStore.dispose();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdidChange = this._didReportChange || (hadValue && !(this._equalityComparator(oldValue!, this._value)));\n\n\t\t\tgetLogger()?.handleObservableUpdated(this, {\n\t\t\t\toldValue,\n\t\t\t\tnewValue: this._value,\n\t\t\t\tchange: undefined,\n\t\t\t\tdidChange,\n\t\t\t\thadValue,\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tonBugIndicatingError(e);\n\t\t}\n\n\t\tthis._isComputing = false;\n\n\t\tif (!this._didReportChange && didChange) {\n\t\t\tfor (const r of this._observers) {\n\t\t\t\tr.handleChange(this, undefined);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._didReportChange = false;\n\t\t}\n\t}\n\n\tpublic override toString(): string {\n\t\treturn `LazyDerived<${this.debugName}>`;\n\t}\n\n\t// IObserver Implementation\n\n\tpublic beginUpdate<T>(_observable: IObservable<T>): void {\n\t\tif (this._isUpdating) {\n\t\t\tthrow new BugIndicatingError('Cyclic deriveds are not supported yet!');\n\t\t}\n\n\t\tthis._updateCount++;\n\t\tthis._isUpdating = true;\n\t\ttry {\n\t\t\tconst propagateBeginUpdate = this._updateCount === 1;\n\t\t\tif (this._state === DerivedState.upToDate) {\n\t\t\t\tthis._state = DerivedState.dependenciesMightHaveChanged;\n\t\t\t\t// If we propagate begin update, that will already signal a possible change.\n\t\t\t\tif (!propagateBeginUpdate) {\n\t\t\t\t\tfor (const r of this._observers) {\n\t\t\t\t\t\tr.handlePossibleChange(this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (propagateBeginUpdate) {\n\t\t\t\tfor (const r of this._observers) {\n\t\t\t\t\tr.beginUpdate(this); // This signals a possible change\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tthis._isUpdating = false;\n\t\t}\n\t}\n\n\tpublic endUpdate<T>(_observable: IObservable<T>): void {\n\t\tthis._updateCount--;\n\t\tif (this._updateCount === 0) {\n\t\t\t// End update could change the observer list.\n\t\t\tconst observers = [...this._observers];\n\t\t\tfor (const r of observers) {\n\t\t\t\tr.endUpdate(this);\n\t\t\t}\n\t\t\tif (this._removedObserverToCallEndUpdateOn) {\n\t\t\t\tconst observers = [...this._removedObserverToCallEndUpdateOn];\n\t\t\t\tthis._removedObserverToCallEndUpdateOn = null;\n\t\t\t\tfor (const r of observers) {\n\t\t\t\t\tr.endUpdate(this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tassertFn(() => this._updateCount >= 0);\n\t}\n\n\tpublic handlePossibleChange<T>(observable: IObservable<T>): void {\n\t\t// In all other states, observers already know that we might have changed.\n\t\tif (this._state === DerivedState.upToDate && this._dependencies.has(observable) && !this._dependenciesToBeRemoved.has(observable)) {\n\t\t\tthis._state = DerivedState.dependenciesMightHaveChanged;\n\t\t\tfor (const r of this._observers) {\n\t\t\t\tr.handlePossibleChange(this);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleChange<T, TChange>(observable: IObservableWithChange<T, TChange>, change: TChange): void {\n\t\tif (this._dependencies.has(observable) && !this._dependenciesToBeRemoved.has(observable) || this._isInBeforeUpdate) {\n\t\t\tgetLogger()?.handleDerivedDependencyChanged(this, observable, change);\n\n\t\t\tlet shouldReact = false;\n\t\t\ttry {\n\t\t\t\tshouldReact = this._changeTracker ? this._changeTracker.handleChange({\n\t\t\t\t\tchangedObservable: observable,\n\t\t\t\t\tchange,\n\t\t\t\t\tdidChange: (o): this is any => o === observable as any,\n\t\t\t\t}, this._changeSummary!) : true;\n\t\t\t} catch (e) {\n\t\t\t\tonBugIndicatingError(e);\n\t\t\t}\n\n\t\t\tconst wasUpToDate = this._state === DerivedState.upToDate;\n\t\t\tif (shouldReact && (this._state === DerivedState.dependenciesMightHaveChanged || wasUpToDate)) {\n\t\t\t\tthis._state = DerivedState.stale;\n\t\t\t\tif (wasUpToDate) {\n\t\t\t\t\tfor (const r of this._observers) {\n\t\t\t\t\t\tr.handlePossibleChange(this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// IReader Implementation\n\n\tprivate _ensureReaderValid(): void {\n\t\tif (!this._isReaderValid) { throw new BugIndicatingError('The reader object cannot be used outside its compute function!'); }\n\t}\n\n\tpublic readObservable<T>(observable: IObservable<T>): T {\n\t\tthis._ensureReaderValid();\n\n\t\t// Subscribe before getting the value to enable caching\n\t\tobservable.addObserver(this);\n\t\t/** This might call {@link handleChange} indirectly, which could invalidate us */\n\t\tconst value = observable.get();\n\t\t// Which is why we only add the observable to the dependencies now.\n\t\tthis._dependencies.add(observable);\n\t\tthis._dependenciesToBeRemoved.delete(observable);\n\t\treturn value;\n\t}\n\n\tpublic reportChange(change: TChange): void {\n\t\tthis._ensureReaderValid();\n\n\t\tthis._didReportChange = true;\n\t\t// TODO add logging\n\t\tfor (const r of this._observers) {\n\t\t\tr.handleChange(this, change);\n\t\t}\n\t}\n\n\tget store(): DisposableStore {\n\t\tthis._ensureReaderValid();\n\n\t\tif (this._store === undefined) {\n\t\t\tthis._store = new DisposableStore();\n\t\t}\n\t\treturn this._store;\n\t}\n\n\tget delayedStore(): DisposableStore {\n\t\tthis._ensureReaderValid();\n\n\t\tif (this._delayedStore === undefined) {\n\t\t\tthis._delayedStore = new DisposableStore();\n\t\t}\n\t\treturn this._delayedStore;\n\t}\n\n\tpublic override addObserver(observer: IObserver): void {\n\t\tconst shouldCallBeginUpdate = !this._observers.has(observer) && this._updateCount > 0;\n\t\tsuper.addObserver(observer);\n\n\t\tif (shouldCallBeginUpdate) {\n\t\t\tif (this._removedObserverToCallEndUpdateOn && this._removedObserverToCallEndUpdateOn.has(observer)) {\n\t\t\t\tthis._removedObserverToCallEndUpdateOn.delete(observer);\n\t\t\t} else {\n\t\t\t\tobserver.beginUpdate(this);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic override removeObserver(observer: IObserver): void {\n\t\tif (this._observers.has(observer) && this._updateCount > 0) {\n\t\t\tif (!this._removedObserverToCallEndUpdateOn) {\n\t\t\t\tthis._removedObserverToCallEndUpdateOn = new Set();\n\t\t\t}\n\t\t\tthis._removedObserverToCallEndUpdateOn.add(observer);\n\t\t}\n\t\tsuper.removeObserver(observer);\n\t}\n\n\tpublic debugGetState() {\n\t\treturn {\n\t\t\tstate: this._state,\n\t\t\tupdateCount: this._updateCount,\n\t\t\tisComputing: this._isComputing,\n\t\t\tdependencies: this._dependencies,\n\t\t\tvalue: this._value,\n\t\t};\n\t}\n\n\tpublic debugSetValue(newValue: unknown) {\n\t\tthis._value = newValue as any;\n\t}\n\n\tpublic debugRecompute(): void {\n\t\tif (!this._isComputing) {\n\t\t\tthis._recompute();\n\t\t} else {\n\t\t\tthis._state = DerivedState.stale;\n\t\t}\n\t}\n\n\tpublic setValue(newValue: T, tx: ITransaction, change: TChange): void {\n\t\tthis._value = newValue;\n\t\tconst observers = this._observers;\n\t\ttx.updateObserver(this, this);\n\t\tfor (const d of observers) {\n\t\t\td.handleChange(this, change);\n\t\t}\n\t}\n}\n\n\nexport class DerivedWithSetter<T, TChangeSummary = any, TOutChanges = any> extends Derived<T, TChangeSummary, TOutChanges> implements ISettableObservable<T, TOutChanges> {\n\tconstructor(\n\t\tdebugNameData: DebugNameData,\n\t\tcomputeFn: (reader: IDerivedReader<TOutChanges>, changeSummary: TChangeSummary) => T,\n\t\tchangeTracker: IChangeTracker<TChangeSummary> | undefined,\n\t\thandleLastObserverRemoved: (() => void) | undefined = undefined,\n\t\tequalityComparator: EqualityComparer<T>,\n\t\tpublic readonly set: (value: T, tx: ITransaction | undefined, change: TOutChanges) => void,\n\t\tdebugLocation: DebugLocation,\n\t) {\n\t\tsuper(\n\t\t\tdebugNameData,\n\t\t\tcomputeFn,\n\t\t\tchangeTracker,\n\t\t\thandleLastObserverRemoved,\n\t\t\tequalityComparator,\n\t\t\tdebugLocation,\n\t\t);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IObservable, IReader, ITransaction, ISettableObservable, IObservableWithChange } from '../base.js';\nimport { IChangeTracker } from '../changeTracker.js';\nimport { DisposableStore, EqualityComparer, IDisposable, strictEquals } from '../commonFacade/deps.js';\nimport { DebugLocation } from '../debugLocation.js';\nimport { DebugOwner, DebugNameData, IDebugNameData } from '../debugName.js';\nimport { _setDerivedOpts } from './baseObservable.js';\nimport { IDerivedReader, Derived, DerivedWithSetter } from './derivedImpl.js';\n\n/**\n * Creates an observable that is derived from other observables.\n * The value is only recomputed when absolutely needed.\n *\n * {@link computeFn} should start with a JS Doc using `@description` to name the derived.\n */\nexport function derived<T, TChange = void>(computeFn: (reader: IDerivedReader<TChange>) => T): IObservableWithChange<T, TChange>;\nexport function derived<T, TChange = void>(owner: DebugOwner, computeFn: (reader: IDerivedReader<TChange>) => T): IObservableWithChange<T, TChange>;\nexport function derived<T, TChange = void>(\n\tcomputeFnOrOwner: ((reader: IDerivedReader<TChange>) => T) | DebugOwner,\n\tcomputeFn?: ((reader: IDerivedReader<TChange>) => T) | undefined,\n\tdebugLocation = DebugLocation.ofCaller()\n): IObservable<T> {\n\tif (computeFn !== undefined) {\n\t\treturn new Derived(\n\t\t\tnew DebugNameData(computeFnOrOwner, undefined, computeFn),\n\t\t\tcomputeFn,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tstrictEquals,\n\t\t\tdebugLocation,\n\t\t);\n\t}\n\treturn new Derived(\n\t\tnew DebugNameData(undefined, undefined, computeFnOrOwner as any),\n\t\tcomputeFnOrOwner as any,\n\t\tundefined,\n\t\tundefined,\n\t\tstrictEquals,\n\t\tdebugLocation,\n\t);\n}\n\nexport function derivedWithSetter<T>(owner: DebugOwner | undefined, computeFn: (reader: IReader) => T, setter: (value: T, transaction: ITransaction | undefined) => void, debugLocation = DebugLocation.ofCaller()): ISettableObservable<T> {\n\treturn new DerivedWithSetter(\n\t\tnew DebugNameData(owner, undefined, computeFn),\n\t\tcomputeFn,\n\t\tundefined,\n\t\tundefined,\n\t\tstrictEquals,\n\t\tsetter,\n\t\tdebugLocation\n\t);\n}\n\nexport function derivedOpts<T>(\n\toptions: IDebugNameData & {\n\t\tequalsFn?: EqualityComparer<T>;\n\t\tonLastObserverRemoved?: (() => void);\n\t},\n\tcomputeFn: (reader: IReader) => T,\n\tdebugLocation = DebugLocation.ofCaller()\n): IObservable<T> {\n\treturn new Derived(\n\t\tnew DebugNameData(options.owner, options.debugName, options.debugReferenceFn),\n\t\tcomputeFn,\n\t\tundefined,\n\t\toptions.onLastObserverRemoved,\n\t\toptions.equalsFn ?? strictEquals,\n\t\tdebugLocation\n\t);\n}\n_setDerivedOpts(derivedOpts);\n\n/**\n * Represents an observable that is derived from other observables.\n * The value is only recomputed when absolutely needed.\n *\n * {@link computeFn} should start with a JS Doc using `@description` to name the derived.\n *\n * Use `createEmptyChangeSummary` to create a \"change summary\" that can collect the changes.\n * Use `handleChange` to add a reported change to the change summary.\n * The compute function is given the last change summary.\n * The change summary is discarded after the compute function was called.\n *\n * @see derived\n */\nexport function derivedHandleChanges<T, TDelta, TChangeSummary>(\n\toptions: IDebugNameData & {\n\t\tchangeTracker: IChangeTracker<TChangeSummary>;\n\t\tequalityComparer?: EqualityComparer<T>;\n\t},\n\tcomputeFn: (reader: IDerivedReader<TDelta>, changeSummary: TChangeSummary) => T,\n\tdebugLocation = DebugLocation.ofCaller()\n): IObservableWithChange<T, TDelta> {\n\treturn new Derived(\n\t\tnew DebugNameData(options.owner, options.debugName, undefined),\n\t\tcomputeFn,\n\t\toptions.changeTracker,\n\t\tundefined,\n\t\toptions.equalityComparer ?? strictEquals,\n\t\tdebugLocation\n\t);\n}\n\n/**\n * @deprecated Use `derived(reader => { reader.store.add(...) })` instead!\n*/\nexport function derivedWithStore<T>(computeFn: (reader: IReader, store: DisposableStore) => T): IObservable<T>;\n\n/**\n * @deprecated Use `derived(reader => { reader.store.add(...) })` instead!\n*/\nexport function derivedWithStore<T>(owner: DebugOwner, computeFn: (reader: IReader, store: DisposableStore) => T): IObservable<T>;\nexport function derivedWithStore<T>(computeFnOrOwner: ((reader: IReader, store: DisposableStore) => T) | DebugOwner, computeFnOrUndefined?: ((reader: IReader, store: DisposableStore) => T), debugLocation = DebugLocation.ofCaller()): IObservable<T> {\n\tlet computeFn: (reader: IReader, store: DisposableStore) => T;\n\tlet owner: DebugOwner;\n\tif (computeFnOrUndefined === undefined) {\n\t\tcomputeFn = computeFnOrOwner as any;\n\t\towner = undefined;\n\t} else {\n\t\towner = computeFnOrOwner;\n\t\tcomputeFn = computeFnOrUndefined as any;\n\t}\n\n\t// Intentionally re-assigned in case an inactive observable is re-used later\n\t// eslint-disable-next-line local/code-no-potentially-unsafe-disposables\n\tlet store = new DisposableStore();\n\n\treturn new Derived(\n\t\tnew DebugNameData(owner, undefined, computeFn),\n\t\tr => {\n\t\t\tif (store.isDisposed) {\n\t\t\t\tstore = new DisposableStore();\n\t\t\t} else {\n\t\t\t\tstore.clear();\n\t\t\t}\n\t\t\treturn computeFn(r, store);\n\t\t},\n\t\tundefined,\n\t\t() => store.dispose(),\n\t\tstrictEquals,\n\t\tdebugLocation\n\t);\n}\n\nexport function derivedDisposable<T extends IDisposable | undefined>(computeFn: (reader: IReader) => T): IObservable<T>;\nexport function derivedDisposable<T extends IDisposable | undefined>(owner: DebugOwner, computeFn: (reader: IReader) => T): IObservable<T>;\nexport function derivedDisposable<T extends IDisposable | undefined>(computeFnOrOwner: ((reader: IReader) => T) | DebugOwner, computeFnOrUndefined?: ((reader: IReader) => T), debugLocation = DebugLocation.ofCaller()): IObservable<T> {\n\tlet computeFn: (reader: IReader) => T;\n\tlet owner: DebugOwner;\n\tif (computeFnOrUndefined === undefined) {\n\t\tcomputeFn = computeFnOrOwner as any;\n\t\towner = undefined;\n\t} else {\n\t\towner = computeFnOrOwner;\n\t\tcomputeFn = computeFnOrUndefined as any;\n\t}\n\n\tlet store: DisposableStore | undefined = undefined;\n\treturn new Derived(\n\t\tnew DebugNameData(owner, undefined, computeFn),\n\t\tr => {\n\t\t\tif (!store) {\n\t\t\t\tstore = new DisposableStore();\n\t\t\t} else {\n\t\t\t\tstore.clear();\n\t\t\t}\n\t\t\tconst result = computeFn(r);\n\t\t\tif (result) {\n\t\t\t\tstore.add(result);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\tundefined,\n\t\t() => {\n\t\t\tif (store) {\n\t\t\t\tstore.dispose();\n\t\t\t\tstore = undefined;\n\t\t\t}\n\t\t},\n\t\tstrictEquals,\n\t\tdebugLocation\n\t);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IObservable, ITransaction } from '../base.js';\nimport { subtransaction } from '../transaction.js';\nimport { EqualityComparer, Event, IDisposable, strictEquals } from '../commonFacade/deps.js';\nimport { DebugOwner, DebugNameData, IDebugNameData } from '../debugName.js';\nimport { getLogger } from '../logging/logging.js';\nimport { BaseObservable } from './baseObservable.js';\nimport { DebugLocation } from '../debugLocation.js';\n\n\nexport function observableFromEvent<T, TArgs = unknown>(\n\towner: DebugOwner,\n\tevent: Event<TArgs>,\n\tgetValue: (args: TArgs | undefined) => T,\n\tdebugLocation?: DebugLocation,\n): IObservable<T>;\nexport function observableFromEvent<T, TArgs = unknown>(\n\tevent: Event<TArgs>,\n\tgetValue: (args: TArgs | undefined) => T,\n): IObservable<T>;\nexport function observableFromEvent(...args:\n\t[owner: DebugOwner, event: Event<any>, getValue: (args: any | undefined) => any, debugLocation?: DebugLocation] |\n\t[event: Event<any>, getValue: (args: any | undefined) => any]\n): IObservable<any> {\n\tlet owner;\n\tlet event;\n\tlet getValue;\n\tlet debugLocation;\n\tif (args.length === 2) {\n\t\t[event, getValue] = args;\n\t} else {\n\t\t[owner, event, getValue, debugLocation] = args;\n\t}\n\treturn new FromEventObservable(\n\t\tnew DebugNameData(owner, undefined, getValue),\n\t\tevent,\n\t\tgetValue,\n\t\t() => FromEventObservable.globalTransaction,\n\t\tstrictEquals,\n\t\tdebugLocation ?? DebugLocation.ofCaller()\n\t);\n}\n\nexport function observableFromEventOpts<T, TArgs = unknown>(\n\toptions: IDebugNameData & {\n\t\tequalsFn?: EqualityComparer<T>;\n\t},\n\tevent: Event<TArgs>,\n\tgetValue: (args: TArgs | undefined) => T,\n\tdebugLocation = DebugLocation.ofCaller()\n): IObservable<T> {\n\treturn new FromEventObservable(\n\t\tnew DebugNameData(options.owner, options.debugName, options.debugReferenceFn ?? getValue),\n\t\tevent,\n\t\tgetValue, () => FromEventObservable.globalTransaction, options.equalsFn ?? strictEquals, debugLocation\n\t);\n}\n\nexport class FromEventObservable<TArgs, T> extends BaseObservable<T> {\n\tpublic static globalTransaction: ITransaction | undefined;\n\n\tprivate _value: T | undefined;\n\tprivate _hasValue = false;\n\tprivate _subscription: IDisposable | undefined;\n\n\tconstructor(\n\t\tprivate readonly _debugNameData: DebugNameData,\n\t\tprivate readonly event: Event<TArgs>,\n\t\tpublic readonly _getValue: (args: TArgs | undefined) => T,\n\t\tprivate readonly _getTransaction: () => ITransaction | undefined,\n\t\tprivate readonly _equalityComparator: EqualityComparer<T>,\n\t\tdebugLocation: DebugLocation\n\t) {\n\t\tsuper(debugLocation);\n\t}\n\n\tprivate getDebugName(): string | undefined {\n\t\treturn this._debugNameData.getDebugName(this);\n\t}\n\n\tpublic get debugName(): string {\n\t\tconst name = this.getDebugName();\n\t\treturn 'From Event' + (name ? `: ${name}` : '');\n\t}\n\n\tprotected override onFirstObserverAdded(): void {\n\t\tthis._subscription = this.event(this.handleEvent);\n\t}\n\n\tprivate readonly handleEvent = (args: TArgs | undefined) => {\n\t\tconst newValue = this._getValue(args);\n\t\tconst oldValue = this._value;\n\n\t\tconst didChange = !this._hasValue || !(this._equalityComparator(oldValue!, newValue));\n\t\tlet didRunTransaction = false;\n\n\t\tif (didChange) {\n\t\t\tthis._value = newValue;\n\n\t\t\tif (this._hasValue) {\n\t\t\t\tdidRunTransaction = true;\n\t\t\t\tsubtransaction(\n\t\t\t\t\tthis._getTransaction(),\n\t\t\t\t\t(tx) => {\n\t\t\t\t\t\tgetLogger()?.handleObservableUpdated(this, { oldValue, newValue, change: undefined, didChange, hadValue: this._hasValue });\n\n\t\t\t\t\t\tfor (const o of this._observers) {\n\t\t\t\t\t\t\ttx.updateObserver(o, this);\n\t\t\t\t\t\t\to.handleChange(this, undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\tconst name = this.getDebugName();\n\t\t\t\t\t\treturn 'Event fired' + (name ? `: ${name}` : '');\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis._hasValue = true;\n\t\t}\n\n\t\tif (!didRunTransaction) {\n\t\t\tgetLogger()?.handleObservableUpdated(this, { oldValue, newValue, change: undefined, didChange, hadValue: this._hasValue });\n\t\t}\n\t};\n\n\tprotected override onLastObserverRemoved(): void {\n\t\tthis._subscription!.dispose();\n\t\tthis._subscription = undefined;\n\t\tthis._hasValue = false;\n\t\tthis._value = undefined;\n\t}\n\n\tpublic get(): T {\n\t\tif (this._subscription) {\n\t\t\tif (!this._hasValue) {\n\t\t\t\tthis.handleEvent(undefined);\n\t\t\t}\n\t\t\treturn this._value!;\n\t\t} else {\n\t\t\t// no cache, as there are no subscribers to keep it updated\n\t\t\tconst value = this._getValue(undefined);\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tpublic debugSetValue(value: unknown) {\n\t\tthis._value = value as any;\n\t}\n}\n\nexport namespace observableFromEvent {\n\texport const Observer = FromEventObservable;\n\n\texport function batchEventsGlobally(tx: ITransaction, fn: () => void): void {\n\t\tlet didSet = false;\n\t\tif (FromEventObservable.globalTransaction === undefined) {\n\t\t\tFromEventObservable.globalTransaction = tx;\n\t\t\tdidSet = true;\n\t\t}\n\t\ttry {\n\t\t\tfn();\n\t\t} finally {\n\t\t\tif (didSet) {\n\t\t\t\tFromEventObservable.globalTransaction = undefined;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { autorun } from '../reactions/autorun.js';\nimport { IObservable, IObservableWithChange, IObserver, IReader, ITransaction } from '../base.js';\nimport { transaction } from '../transaction.js';\nimport { observableValue } from '../observables/observableValue.js';\nimport { DebugOwner } from '../debugName.js';\nimport { DisposableStore, Event, IDisposable, toDisposable } from '../commonFacade/deps.js';\nimport { derived, derivedOpts } from '../observables/derived.js';\nimport { observableFromEvent } from '../observables/observableFromEvent.js';\nimport { observableSignal } from '../observables/observableSignal.js';\nimport { _setKeepObserved, _setRecomputeInitiallyAndOnChange } from '../observables/baseObservable.js';\n\nexport function observableFromPromise<T>(promise: Promise<T>): IObservable<{ value?: T }> {\n\tconst observable = observableValue<{ value?: T }>('promiseValue', {});\n\tpromise.then((value) => {\n\t\tobservable.set({ value }, undefined);\n\t});\n\treturn observable;\n}\n\nexport function signalFromObservable<T>(owner: DebugOwner | undefined, observable: IObservable<T>): IObservable<void> {\n\treturn derivedOpts({\n\t\towner,\n\t\tequalsFn: () => false,\n\t}, reader => {\n\t\tobservable.read(reader);\n\t});\n}\n\n/**\n * @deprecated Use `debouncedObservable` instead.\n */\nexport function debouncedObservableDeprecated<T>(observable: IObservable<T>, debounceMs: number, disposableStore: DisposableStore): IObservable<T | undefined> {\n\tconst debouncedObservable = observableValue<T | undefined>('debounced', undefined);\n\n\tlet timeout: Timeout | undefined = undefined;\n\n\tdisposableStore.add(autorun(reader => {\n\t\t/** @description debounce */\n\t\tconst value = observable.read(reader);\n\n\t\tif (timeout) {\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(() => {\n\t\t\ttransaction(tx => {\n\t\t\t\tdebouncedObservable.set(value, tx);\n\t\t\t});\n\t\t}, debounceMs);\n\n\t}));\n\n\treturn debouncedObservable;\n}\n\n/**\n * Creates an observable that debounces the input observable.\n */\nexport function debouncedObservable<T>(observable: IObservable<T>, debounceMs: number): IObservable<T> {\n\tlet hasValue = false;\n\tlet lastValue: T | undefined;\n\n\tlet timeout: Timeout | undefined = undefined;\n\n\treturn observableFromEvent<T, void>(cb => {\n\t\tconst d = autorun(reader => {\n\t\t\tconst value = observable.read(reader);\n\n\t\t\tif (!hasValue) {\n\t\t\t\thasValue = true;\n\t\t\t\tlastValue = value;\n\t\t\t} else {\n\t\t\t\tif (timeout) {\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t}\n\t\t\t\ttimeout = setTimeout(() => {\n\t\t\t\t\tlastValue = value;\n\t\t\t\t\tcb();\n\t\t\t\t}, debounceMs);\n\t\t\t}\n\t\t});\n\t\treturn {\n\t\t\tdispose() {\n\t\t\t\td.dispose();\n\t\t\t\thasValue = false;\n\t\t\t\tlastValue = undefined;\n\t\t\t},\n\t\t};\n\t}, () => {\n\t\tif (hasValue) {\n\t\t\treturn lastValue!;\n\t\t} else {\n\t\t\treturn observable.get();\n\t\t}\n\t});\n}\n\nexport function wasEventTriggeredRecently(event: Event<any>, timeoutMs: number, disposableStore: DisposableStore): IObservable<boolean> {\n\tconst observable = observableValue('triggeredRecently', false);\n\n\tlet timeout: Timeout | undefined = undefined;\n\n\tdisposableStore.add(event(() => {\n\t\tobservable.set(true, undefined);\n\n\t\tif (timeout) {\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(() => {\n\t\t\tobservable.set(false, undefined);\n\t\t}, timeoutMs);\n\t}));\n\n\treturn observable;\n}\n\n/**\n * This makes sure the observable is being observed and keeps its cache alive.\n */\nexport function keepObserved<T>(observable: IObservable<T>): IDisposable {\n\tconst o = new KeepAliveObserver(false, undefined);\n\tobservable.addObserver(o);\n\treturn toDisposable(() => {\n\t\tobservable.removeObserver(o);\n\t});\n}\n\n_setKeepObserved(keepObserved);\n\n/**\n * This converts the given observable into an autorun.\n */\nexport function recomputeInitiallyAndOnChange<T>(observable: IObservable<T>, handleValue?: (value: T) => void): IDisposable {\n\tconst o = new KeepAliveObserver(true, handleValue);\n\tobservable.addObserver(o);\n\ttry {\n\t\to.beginUpdate(observable);\n\t} finally {\n\t\to.endUpdate(observable);\n\t}\n\n\treturn toDisposable(() => {\n\t\tobservable.removeObserver(o);\n\t});\n}\n\n_setRecomputeInitiallyAndOnChange(recomputeInitiallyAndOnChange);\n\nexport class KeepAliveObserver implements IObserver {\n\tprivate _counter = 0;\n\n\tconstructor(\n\t\tprivate readonly _forceRecompute: boolean,\n\t\tprivate readonly _handleValue: ((value: any) => void) | undefined,\n\t) { }\n\n\tbeginUpdate<T>(observable: IObservable<T>): void {\n\t\tthis._counter++;\n\t}\n\n\tendUpdate<T>(observable: IObservable<T>): void {\n\t\tif (this._counter === 1 && this._forceRecompute) {\n\t\t\tif (this._handleValue) {\n\t\t\t\tthis._handleValue(observable.get());\n\t\t\t} else {\n\t\t\t\tobservable.reportChanges();\n\t\t\t}\n\t\t}\n\t\tthis._counter--;\n\t}\n\n\thandlePossibleChange<T>(observable: IObservable<T>): void {\n\t\t// NO OP\n\t}\n\n\thandleChange<T, TChange>(observable: IObservableWithChange<T, TChange>, change: TChange): void {\n\t\t// NO OP\n\t}\n}\n\nexport function derivedObservableWithCache<T>(owner: DebugOwner, computeFn: (reader: IReader, lastValue: T | undefined) => T): IObservable<T> {\n\tlet lastValue: T | undefined = undefined;\n\tconst observable = derivedOpts({ owner, debugReferenceFn: computeFn }, reader => {\n\t\tlastValue = computeFn(reader, lastValue);\n\t\treturn lastValue;\n\t});\n\treturn observable;\n}\n\nexport function derivedObservableWithWritableCache<T>(owner: object, computeFn: (reader: IReader, lastValue: T | undefined) => T): IObservable<T>\n\t& { clearCache(transaction: ITransaction): void; setCache(newValue: T | undefined, tx: ITransaction | undefined): void } {\n\tlet lastValue: T | undefined = undefined;\n\tconst onChange = observableSignal('derivedObservableWithWritableCache');\n\tconst observable = derived(owner, reader => {\n\t\tonChange.read(reader);\n\t\tlastValue = computeFn(reader, lastValue);\n\t\treturn lastValue;\n\t});\n\treturn Object.assign(observable, {\n\t\tclearCache: (tx: ITransaction) => {\n\t\t\tlastValue = undefined;\n\t\t\tonChange.trigger(tx);\n\t\t},\n\t\tsetCache: (newValue: T | undefined, tx: ITransaction | undefined) => {\n\t\t\tlastValue = newValue;\n\t\t\tonChange.trigger(tx);\n\t\t}\n\t});\n}\n\n/**\n * When the items array changes, referential equal items are not mapped again.\n */\nexport function mapObservableArrayCached<TIn, TOut, TKey = TIn>(owner: DebugOwner, items: IObservable<readonly TIn[]>, map: (input: TIn, store: DisposableStore) => TOut, keySelector?: (input: TIn) => TKey): IObservable<readonly TOut[]> {\n\tlet m = new ArrayMap(map, keySelector);\n\tconst self = derivedOpts({\n\t\tdebugReferenceFn: map,\n\t\towner,\n\t\tonLastObserverRemoved: () => {\n\t\t\tm.dispose();\n\t\t\tm = new ArrayMap(map);\n\t\t}\n\t}, (reader) => {\n\t\tm.setItems(items.read(reader));\n\t\treturn m.getItems();\n\t});\n\treturn self;\n}\n\nclass ArrayMap<TIn, TOut, TKey> implements IDisposable {\n\tprivate readonly _cache = new Map<TKey, { out: TOut; store: DisposableStore }>();\n\tprivate _items: TOut[] = [];\n\tconstructor(\n\t\tprivate readonly _map: (input: TIn, store: DisposableStore) => TOut,\n\t\tprivate readonly _keySelector?: (input: TIn) => TKey,\n\t) {\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._cache.forEach(entry => entry.store.dispose());\n\t\tthis._cache.clear();\n\t}\n\n\tpublic setItems(items: readonly TIn[]): void {\n\t\tconst newItems: TOut[] = [];\n\t\tconst itemsToRemove = new Set(this._cache.keys());\n\n\t\tfor (const item of items) {\n\t\t\tconst key = this._keySelector ? this._keySelector(item) : item as unknown as TKey;\n\n\t\t\tlet entry = this._cache.get(key);\n\t\t\tif (!entry) {\n\t\t\t\tconst store = new DisposableStore();\n\t\t\t\tconst out = this._map(item, store);\n\t\t\t\tentry = { out, store };\n\t\t\t\tthis._cache.set(key, entry);\n\t\t\t} else {\n\t\t\t\titemsToRemove.delete(key);\n\t\t\t}\n\t\t\tnewItems.push(entry.out);\n\t\t}\n\n\t\tfor (const item of itemsToRemove) {\n\t\t\tconst entry = this._cache.get(item)!;\n\t\t\tentry.store.dispose();\n\t\t\tthis._cache.delete(item);\n\t\t}\n\n\t\tthis._items = newItems;\n\t}\n\n\tpublic getItems(): TOut[] {\n\t\treturn this._items;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IObservable } from '../base.js';\nimport { TransactionImpl } from '../transaction.js';\nimport { IObservableLogger, IChangeInformation, addLogger } from './logging.js';\nimport { FromEventObservable } from '../observables/observableFromEvent.js';\nimport { getClassName } from '../debugName.js';\nimport { Derived } from '../observables/derivedImpl.js';\nimport { AutorunObserver } from '../reactions/autorunImpl.js';\n\nlet consoleObservableLogger: ConsoleObservableLogger | undefined;\n\nexport function logObservableToConsole(obs: IObservable<any>): void {\n\tif (!consoleObservableLogger) {\n\t\tconsoleObservableLogger = new ConsoleObservableLogger();\n\t\taddLogger(consoleObservableLogger);\n\t}\n\tconsoleObservableLogger.addFilteredObj(obs);\n}\n\nexport class ConsoleObservableLogger implements IObservableLogger {\n\tprivate indentation = 0;\n\n\tprivate _filteredObjects: Set<unknown> | undefined;\n\n\tpublic addFilteredObj(obj: unknown): void {\n\t\tif (!this._filteredObjects) {\n\t\t\tthis._filteredObjects = new Set();\n\t\t}\n\t\tthis._filteredObjects.add(obj);\n\t}\n\n\tprivate _isIncluded(obj: unknown): boolean {\n\t\treturn this._filteredObjects?.has(obj) ?? true;\n\t}\n\n\tprivate textToConsoleArgs(text: ConsoleText): unknown[] {\n\t\treturn consoleTextToArgs([\n\t\t\tnormalText(repeat('|  ', this.indentation)),\n\t\t\ttext,\n\t\t]);\n\t}\n\n\tprivate formatInfo(info: IChangeInformation): ConsoleText[] {\n\t\tif (!info.hadValue) {\n\t\t\treturn [\n\t\t\t\tnormalText(` `),\n\t\t\t\tstyled(formatValue(info.newValue, 60), {\n\t\t\t\t\tcolor: 'green',\n\t\t\t\t}),\n\t\t\t\tnormalText(` (initial)`),\n\t\t\t];\n\t\t}\n\t\treturn info.didChange\n\t\t\t? [\n\t\t\t\tnormalText(` `),\n\t\t\t\tstyled(formatValue(info.oldValue, 70), {\n\t\t\t\t\tcolor: 'red',\n\t\t\t\t\tstrikeThrough: true,\n\t\t\t\t}),\n\t\t\t\tnormalText(` `),\n\t\t\t\tstyled(formatValue(info.newValue, 60), {\n\t\t\t\t\tcolor: 'green',\n\t\t\t\t}),\n\t\t\t]\n\t\t\t: [normalText(` (unchanged)`)];\n\t}\n\n\thandleObservableCreated(observable: IObservable<any>): void {\n\t\tif (observable instanceof Derived) {\n\t\t\tconst derived = observable;\n\t\t\tthis.changedObservablesSets.set(derived, new Set());\n\n\t\t\tconst debugTrackUpdating = false;\n\t\t\tif (debugTrackUpdating) {\n\t\t\t\tconst updating: IObservable<any>[] = [];\n\t\t\t\t(derived as any).__debugUpdating = updating;\n\n\t\t\t\tconst existingBeginUpdate = derived.beginUpdate;\n\t\t\t\tderived.beginUpdate = (obs) => {\n\t\t\t\t\tupdating.push(obs);\n\t\t\t\t\treturn existingBeginUpdate.apply(derived, [obs]);\n\t\t\t\t};\n\n\t\t\t\tconst existingEndUpdate = derived.endUpdate;\n\t\t\t\tderived.endUpdate = (obs) => {\n\t\t\t\t\tconst idx = updating.indexOf(obs);\n\t\t\t\t\tif (idx === -1) {\n\t\t\t\t\t\tconsole.error('endUpdate called without beginUpdate', derived.debugName, obs.debugName);\n\t\t\t\t\t}\n\t\t\t\t\tupdating.splice(idx, 1);\n\t\t\t\t\treturn existingEndUpdate.apply(derived, [obs]);\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\thandleOnListenerCountChanged(observable: IObservable<any>, newCount: number): void {\n\t}\n\n\thandleObservableUpdated(observable: IObservable<unknown>, info: IChangeInformation): void {\n\t\tif (!this._isIncluded(observable)) { return; }\n\t\tif (observable instanceof Derived) {\n\t\t\tthis._handleDerivedRecomputed(observable, info);\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.log(...this.textToConsoleArgs([\n\t\t\tformatKind('observable value changed'),\n\t\t\tstyled(observable.debugName, { color: 'BlueViolet' }),\n\t\t\t...this.formatInfo(info),\n\t\t]));\n\t}\n\n\tprivate readonly changedObservablesSets = new WeakMap<object, Set<IObservable<any>>>();\n\n\tformatChanges(changes: Set<IObservable<any>>): ConsoleText | undefined {\n\t\tif (changes.size === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn styled(\n\t\t\t' (changed deps: ' +\n\t\t\t[...changes].map((o) => o.debugName).join(', ') +\n\t\t\t')',\n\t\t\t{ color: 'gray' }\n\t\t);\n\t}\n\n\thandleDerivedDependencyChanged(derived: Derived<any>, observable: IObservable<any>, change: unknown): void {\n\t\tif (!this._isIncluded(derived)) { return; }\n\n\t\tthis.changedObservablesSets.get(derived)?.add(observable);\n\t}\n\n\t_handleDerivedRecomputed(derived: Derived<unknown>, info: IChangeInformation): void {\n\t\tif (!this._isIncluded(derived)) { return; }\n\n\t\tconst changedObservables = this.changedObservablesSets.get(derived);\n\t\tif (!changedObservables) { return; }\n\t\tconsole.log(...this.textToConsoleArgs([\n\t\t\tformatKind('derived recomputed'),\n\t\t\tstyled(derived.debugName, { color: 'BlueViolet' }),\n\t\t\t...this.formatInfo(info),\n\t\t\tthis.formatChanges(changedObservables),\n\t\t\t{ data: [{ fn: derived._debugNameData.referenceFn ?? derived._computeFn }] }\n\t\t]));\n\t\tchangedObservables.clear();\n\t}\n\n\thandleDerivedCleared(derived: Derived<unknown>): void {\n\t\tif (!this._isIncluded(derived)) { return; }\n\n\t\tconsole.log(...this.textToConsoleArgs([\n\t\t\tformatKind('derived cleared'),\n\t\t\tstyled(derived.debugName, { color: 'BlueViolet' }),\n\t\t]));\n\t}\n\n\thandleFromEventObservableTriggered(observable: FromEventObservable<any, any>, info: IChangeInformation): void {\n\t\tif (!this._isIncluded(observable)) { return; }\n\n\t\tconsole.log(...this.textToConsoleArgs([\n\t\t\tformatKind('observable from event triggered'),\n\t\t\tstyled(observable.debugName, { color: 'BlueViolet' }),\n\t\t\t...this.formatInfo(info),\n\t\t\t{ data: [{ fn: observable._getValue }] }\n\t\t]));\n\t}\n\n\thandleAutorunCreated(autorun: AutorunObserver): void {\n\t\tif (!this._isIncluded(autorun)) { return; }\n\n\t\tthis.changedObservablesSets.set(autorun, new Set());\n\t}\n\n\thandleAutorunDisposed(autorun: AutorunObserver): void {\n\t}\n\n\thandleAutorunDependencyChanged(autorun: AutorunObserver, observable: IObservable<any>, change: unknown): void {\n\t\tif (!this._isIncluded(autorun)) { return; }\n\n\t\tthis.changedObservablesSets.get(autorun)!.add(observable);\n\t}\n\n\thandleAutorunStarted(autorun: AutorunObserver): void {\n\t\tconst changedObservables = this.changedObservablesSets.get(autorun);\n\t\tif (!changedObservables) { return; }\n\n\t\tif (this._isIncluded(autorun)) {\n\t\t\tconsole.log(...this.textToConsoleArgs([\n\t\t\t\tformatKind('autorun'),\n\t\t\t\tstyled(autorun.debugName, { color: 'BlueViolet' }),\n\t\t\t\tthis.formatChanges(changedObservables),\n\t\t\t\t{ data: [{ fn: autorun._debugNameData.referenceFn ?? autorun._runFn }] }\n\t\t\t]));\n\t\t}\n\t\tchangedObservables.clear();\n\t\tthis.indentation++;\n\t}\n\n\thandleAutorunFinished(autorun: AutorunObserver): void {\n\t\tthis.indentation--;\n\t}\n\n\thandleBeginTransaction(transaction: TransactionImpl): void {\n\t\tlet transactionName = transaction.getDebugName();\n\t\tif (transactionName === undefined) {\n\t\t\ttransactionName = '';\n\t\t}\n\t\tif (this._isIncluded(transaction)) {\n\t\t\tconsole.log(...this.textToConsoleArgs([\n\t\t\t\tformatKind('transaction'),\n\t\t\t\tstyled(transactionName, { color: 'BlueViolet' }),\n\t\t\t\t{ data: [{ fn: transaction._fn }] }\n\t\t\t]));\n\t\t}\n\t\tthis.indentation++;\n\t}\n\n\thandleEndTransaction(): void {\n\t\tthis.indentation--;\n\t}\n}\ntype ConsoleText = (ConsoleText | undefined)[] |\n{ text: string; style: string; data?: unknown[] } |\n{ data: unknown[] };\nfunction consoleTextToArgs(text: ConsoleText): unknown[] {\n\tconst styles = new Array<any>();\n\tconst data: unknown[] = [];\n\tlet firstArg = '';\n\n\tfunction process(t: ConsoleText): void {\n\t\tif ('length' in t) {\n\t\t\tfor (const item of t) {\n\t\t\t\tif (item) {\n\t\t\t\t\tprocess(item);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ('text' in t) {\n\t\t\tfirstArg += `%c${t.text}`;\n\t\t\tstyles.push(t.style);\n\t\t\tif (t.data) {\n\t\t\t\tdata.push(...t.data);\n\t\t\t}\n\t\t} else if ('data' in t) {\n\t\t\tdata.push(...t.data);\n\t\t}\n\t}\n\n\tprocess(text);\n\n\tconst result = [firstArg, ...styles];\n\tresult.push(...data);\n\treturn result;\n}\nfunction normalText(text: string): ConsoleText {\n\treturn styled(text, { color: 'black' });\n}\nfunction formatKind(kind: string): ConsoleText {\n\treturn styled(padStr(`${kind}: `, 10), { color: 'black', bold: true });\n}\nfunction styled(\n\ttext: string,\n\toptions: { color: string; strikeThrough?: boolean; bold?: boolean } = {\n\t\tcolor: 'black',\n\t}\n): ConsoleText {\n\tfunction objToCss(styleObj: Record<string, string>): string {\n\t\treturn Object.entries(styleObj).reduce(\n\t\t\t(styleString, [propName, propValue]) => {\n\t\t\t\treturn `${styleString}${propName}:${propValue};`;\n\t\t\t},\n\t\t\t''\n\t\t);\n\t}\n\n\tconst style: Record<string, string> = {\n\t\tcolor: options.color,\n\t};\n\tif (options.strikeThrough) {\n\t\tstyle['text-decoration'] = 'line-through';\n\t}\n\tif (options.bold) {\n\t\tstyle['font-weight'] = 'bold';\n\t}\n\n\treturn {\n\t\ttext,\n\t\tstyle: objToCss(style),\n\t};\n}\n\nexport function formatValue(value: unknown, availableLen: number): string {\n\tswitch (typeof value) {\n\t\tcase 'number':\n\t\t\treturn '' + value;\n\t\tcase 'string':\n\t\t\tif (value.length + 2 <= availableLen) {\n\t\t\t\treturn `\"${value}\"`;\n\t\t\t}\n\t\t\treturn `\"${value.substr(0, availableLen - 7)}\"+...`;\n\n\t\tcase 'boolean':\n\t\t\treturn value ? 'true' : 'false';\n\t\tcase 'undefined':\n\t\t\treturn 'undefined';\n\t\tcase 'object':\n\t\t\tif (value === null) {\n\t\t\t\treturn 'null';\n\t\t\t}\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn formatArray(value, availableLen);\n\t\t\t}\n\t\t\treturn formatObject(value, availableLen);\n\t\tcase 'symbol':\n\t\t\treturn value.toString();\n\t\tcase 'function':\n\t\t\treturn `[[Function${value.name ? ' ' + value.name : ''}]]`;\n\t\tdefault:\n\t\t\treturn '' + value;\n\t}\n}\n\nfunction formatArray(value: unknown[], availableLen: number): string {\n\tlet result = '[ ';\n\tlet first = true;\n\tfor (const val of value) {\n\t\tif (!first) {\n\t\t\tresult += ', ';\n\t\t}\n\t\tif (result.length - 5 > availableLen) {\n\t\t\tresult += '...';\n\t\t\tbreak;\n\t\t}\n\t\tfirst = false;\n\t\tresult += `${formatValue(val, availableLen - result.length)}`;\n\t}\n\tresult += ' ]';\n\treturn result;\n}\n\nfunction formatObject(value: object, availableLen: number): string {\n\tif (typeof value.toString === 'function' && value.toString !== Object.prototype.toString) {\n\t\tconst val = value.toString();\n\t\tif (val.length <= availableLen) {\n\t\t\treturn val;\n\t\t}\n\t\treturn val.substring(0, availableLen - 3) + '...';\n\t}\n\n\tconst className = getClassName(value);\n\n\tlet result = className ? className + '(' : '{ ';\n\tlet first = true;\n\tfor (const [key, val] of Object.entries(value)) {\n\t\tif (!first) {\n\t\t\tresult += ', ';\n\t\t}\n\t\tif (result.length - 5 > availableLen) {\n\t\t\tresult += '...';\n\t\t\tbreak;\n\t\t}\n\t\tfirst = false;\n\t\tresult += `${key}: ${formatValue(val, availableLen - result.length)}`;\n\t}\n\tresult += className ? ')' : ' }';\n\treturn result;\n}\n\nfunction repeat(str: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 1; i <= count; i++) {\n\t\tresult += str;\n\t}\n\treturn result;\n}\n\nfunction padStr(str: string, length: number): string {\n\twhile (str.length < length) {\n\t\tstr += ' ';\n\t}\n\treturn str;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport type ChannelFactory = (handler: IChannelHandler) => IChannel;\n\nexport interface IChannel {\n\tsendNotification(data: unknown): void;\n\tsendRequest(data: unknown): Promise<RpcRequestResult>;\n}\n\nexport interface IChannelHandler {\n\thandleNotification(notificationData: unknown): void;\n\thandleRequest(requestData: unknown): Promise<RpcRequestResult> | RpcRequestResult;\n}\n\nexport type RpcRequestResult = { type: 'result'; value: unknown } | { type: 'error'; value: unknown };\n\nexport type API = {\n\thost: Side;\n\tclient: Side;\n};\n\nexport type Side = {\n\tnotifications: Record<string, (...args: any[]) => void>;\n\trequests: Record<string, (...args: any[]) => Promise<unknown> | unknown>;\n};\n\ntype MakeAsyncIfNot<TFn> = TFn extends (...args: infer TArgs) => infer TResult ? TResult extends Promise<unknown> ? TFn : (...args: TArgs) => Promise<TResult> : never;\n\nexport type MakeSideAsync<T extends Side> = {\n\tnotifications: T['notifications'];\n\trequests: { [K in keyof T['requests']]: MakeAsyncIfNot<T['requests'][K]> };\n};\n\nexport class SimpleTypedRpcConnection<T extends Side> {\n\tpublic static createHost<T extends API>(channelFactory: ChannelFactory, getHandler: () => T['host']): SimpleTypedRpcConnection<MakeSideAsync<T['client']>> {\n\t\treturn new SimpleTypedRpcConnection(channelFactory, getHandler);\n\t}\n\n\tpublic static createClient<T extends API>(channelFactory: ChannelFactory, getHandler: () => T['client']): SimpleTypedRpcConnection<MakeSideAsync<T['host']>> {\n\t\treturn new SimpleTypedRpcConnection(channelFactory, getHandler);\n\t}\n\n\tpublic readonly api: T;\n\tprivate readonly _channel: IChannel;\n\n\tprivate constructor(\n\t\tprivate readonly _channelFactory: ChannelFactory,\n\t\tprivate readonly _getHandler: () => Side,\n\t) {\n\t\tthis._channel = this._channelFactory({\n\t\t\thandleNotification: (notificationData) => {\n\t\t\t\tconst m = notificationData as OutgoingMessage;\n\t\t\t\tconst fn = this._getHandler().notifications[m[0]];\n\t\t\t\tif (!fn) {\n\t\t\t\t\tthrow new Error(`Unknown notification \"${m[0]}\"!`);\n\t\t\t\t}\n\t\t\t\tfn(...m[1]);\n\t\t\t},\n\t\t\thandleRequest: (requestData) => {\n\t\t\t\tconst m = requestData as OutgoingMessage;\n\t\t\t\ttry {\n\t\t\t\t\tconst result = this._getHandler().requests[m[0]](...m[1]);\n\t\t\t\t\treturn { type: 'result', value: result };\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn { type: 'error', value: e };\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tconst requests = new Proxy({}, {\n\t\t\tget: (target, key: string) => {\n\t\t\t\treturn async (...args: any[]) => {\n\t\t\t\t\tconst result = await this._channel.sendRequest([key, args] satisfies OutgoingMessage);\n\t\t\t\t\tif (result.type === 'error') {\n\t\t\t\t\t\tthrow result.value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn result.value;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\tconst notifications = new Proxy({}, {\n\t\t\tget: (target, key: string) => {\n\t\t\t\treturn (...args: any[]) => {\n\t\t\t\t\tthis._channel.sendNotification([key, args] satisfies OutgoingMessage);\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\tthis.api = { notifications: notifications, requests: requests } as any;\n\t}\n}\n\ntype OutgoingMessage = [\n\tmethod: string,\n\targs: unknown[],\n];\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChannelFactory, IChannelHandler, API, SimpleTypedRpcConnection, MakeSideAsync } from './rpc.js';\n\nexport function registerDebugChannel<T extends { channelId: string } & API>(\n\tchannelId: T['channelId'],\n\tcreateClient: () => T['client'],\n): SimpleTypedRpcConnection<MakeSideAsync<T['host']>> {\n\tconst g = globalThis as any as GlobalObj;\n\n\tlet queuedNotifications: unknown[] = [];\n\tlet curHost: IHost | undefined = undefined;\n\n\tconst { channel, handler } = createChannelFactoryFromDebugChannel({\n\t\tsendNotification: (data) => {\n\t\t\tif (curHost) {\n\t\t\t\tcurHost.sendNotification(data);\n\t\t\t} else {\n\t\t\t\tqueuedNotifications.push(data);\n\t\t\t}\n\t\t},\n\t});\n\n\tlet curClient: T['client'] | undefined = undefined;\n\n\t(g.$$debugValueEditor_debugChannels ?? (g.$$debugValueEditor_debugChannels = {}))[channelId] = (host) => {\n\t\tcurClient = createClient();\n\t\tcurHost = host;\n\t\tfor (const n of queuedNotifications) {\n\t\t\thost.sendNotification(n);\n\t\t}\n\t\tqueuedNotifications = [];\n\t\treturn handler;\n\t};\n\n\treturn SimpleTypedRpcConnection.createClient<T>(channel, () => {\n\t\tif (!curClient) { throw new Error('Not supported'); }\n\t\treturn curClient;\n\t});\n}\n\ninterface GlobalObj {\n\t$$debugValueEditor_debugChannels: Record<string, (host: IHost) => { handleRequest: (data: unknown) => unknown }>;\n}\n\ninterface IHost {\n\tsendNotification: (data: unknown) => void;\n}\n\nfunction createChannelFactoryFromDebugChannel(host: IHost): { channel: ChannelFactory; handler: { handleRequest: (data: unknown) => unknown } } {\n\tlet h: IChannelHandler | undefined;\n\tconst channel: ChannelFactory = (handler) => {\n\t\th = handler;\n\t\treturn {\n\t\t\tsendNotification: data => {\n\t\t\t\thost.sendNotification(data);\n\t\t\t},\n\t\t\tsendRequest: data => {\n\t\t\t\tthrow new Error('not supported');\n\t\t\t},\n\t\t};\n\t};\n\treturn {\n\t\tchannel: channel,\n\t\thandler: {\n\t\t\thandleRequest: (data: any) => {\n\t\t\t\tif (data.type === 'notification') {\n\t\t\t\t\treturn h?.handleNotification(data.data);\n\t\t\t\t} else {\n\t\t\t\t\treturn h?.handleRequest(data.data);\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from '../../../lifecycle.js';\n\nexport class Debouncer implements IDisposable {\n\tprivate _timeout: Timeout | undefined = undefined;\n\n\tpublic debounce(fn: () => void, timeoutMs: number): void {\n\t\tif (this._timeout !== undefined) {\n\t\t\tclearTimeout(this._timeout);\n\t\t}\n\t\tthis._timeout = setTimeout(() => {\n\t\t\tthis._timeout = undefined;\n\t\t\tfn();\n\t\t}, timeoutMs);\n\t}\n\n\tdispose(): void {\n\t\tif (this._timeout !== undefined) {\n\t\t\tclearTimeout(this._timeout);\n\t\t}\n\t}\n}\n\nexport class Throttler implements IDisposable {\n\tprivate _timeout: Timeout | undefined = undefined;\n\n\tpublic throttle(fn: () => void, timeoutMs: number): void {\n\t\tif (this._timeout === undefined) {\n\t\t\tthis._timeout = setTimeout(() => {\n\t\t\t\tthis._timeout = undefined;\n\t\t\t\tfn();\n\t\t\t}, timeoutMs);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this._timeout !== undefined) {\n\t\t\tclearTimeout(this._timeout);\n\t\t}\n\t}\n}\n\nexport function deepAssign<T>(target: T, source: T): void {\n\tfor (const key in source) {\n\t\tif (!!target[key] && typeof target[key] === 'object' && !!source[key] && typeof source[key] === 'object') {\n\t\t\tdeepAssign(target[key], source[key]);\n\t\t} else {\n\t\t\ttarget[key] = source[key];\n\t\t}\n\t}\n}\n\nexport function deepAssignDeleteNulls<T>(target: T, source: T): void {\n\tfor (const key in source) {\n\t\tif (source[key] === null) {\n\t\t\tdelete target[key];\n\t\t} else if (!!target[key] && typeof target[key] === 'object' && !!source[key] && typeof source[key] === 'object') {\n\t\t\tdeepAssignDeleteNulls(target[key], source[key]);\n\t\t} else {\n\t\t\ttarget[key] = source[key];\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AutorunObserver, AutorunState } from '../../reactions/autorunImpl.js';\nimport { TransactionImpl } from '../../transaction.js';\nimport { IChangeInformation, IObservableLogger } from '../logging.js';\nimport { formatValue } from '../consoleObservableLogger.js';\nimport { ObsDebuggerApi, IObsDeclaration, ObsInstanceId, ObsStateUpdate, ITransactionState, ObserverInstanceState } from './debuggerApi.js';\nimport { registerDebugChannel } from './debuggerRpc.js';\nimport { deepAssign, deepAssignDeleteNulls, Throttler } from './utils.js';\nimport { isDefined } from '../../../types.js';\nimport { FromEventObservable } from '../../observables/observableFromEvent.js';\nimport { BugIndicatingError, onUnexpectedError } from '../../../errors.js';\nimport { IObservable, IObserver } from '../../base.js';\nimport { BaseObservable } from '../../observables/baseObservable.js';\nimport { Derived, DerivedState } from '../../observables/derivedImpl.js';\nimport { ObservableValue } from '../../observables/observableValue.js';\nimport { DebugLocation } from '../../debugLocation.js';\n\ninterface IInstanceInfo {\n\tdeclarationId: number;\n\tinstanceId: number;\n}\n\ninterface IObservableInfo extends IInstanceInfo {\n\tlistenerCount: number;\n\tlastValue: string | undefined;\n\tupdateCount: number;\n\tchangedObservables: Set<IObservable<any>>;\n}\n\ninterface IAutorunInfo extends IInstanceInfo {\n\tupdateCount: number;\n\tchangedObservables: Set<IObservable<any>>;\n}\n\nexport class DevToolsLogger implements IObservableLogger {\n\tprivate static _instance: DevToolsLogger | undefined = undefined;\n\tpublic static getInstance(): DevToolsLogger {\n\t\tif (DevToolsLogger._instance === undefined) {\n\t\t\tDevToolsLogger._instance = new DevToolsLogger();\n\t\t}\n\t\treturn DevToolsLogger._instance;\n\t}\n\n\tprivate _declarationId = 0;\n\tprivate _instanceId = 0;\n\n\tprivate readonly _declarations = new Map</* declarationId + type */string, IObsDeclaration>();\n\tprivate readonly _instanceInfos = new WeakMap<object, IObservableInfo | IAutorunInfo>();\n\tprivate readonly _aliveInstances = new Map<ObsInstanceId, IObservable<any> | AutorunObserver>();\n\tprivate readonly _activeTransactions = new Set<TransactionImpl>();\n\n\tprivate readonly _channel = registerDebugChannel<ObsDebuggerApi>('observableDevTools', () => {\n\t\treturn {\n\t\t\tnotifications: {\n\t\t\t\tsetDeclarationIdFilter: declarationIds => {\n\n\t\t\t\t},\n\t\t\t\tlogObservableValue: (observableId) => {\n\t\t\t\t\tconsole.log('logObservableValue', observableId);\n\t\t\t\t},\n\t\t\t\tflushUpdates: () => {\n\t\t\t\t\tthis._flushUpdates();\n\t\t\t\t},\n\t\t\t\tresetUpdates: () => {\n\t\t\t\t\tthis._pendingChanges = null;\n\t\t\t\t\tthis._channel.api.notifications.handleChange(this._fullState, true);\n\t\t\t\t},\n\t\t\t},\n\t\t\trequests: {\n\t\t\t\tgetDeclarations: () => {\n\t\t\t\t\tconst result: Record<string, IObsDeclaration> = {};\n\t\t\t\t\tfor (const decl of this._declarations.values()) {\n\t\t\t\t\t\tresult[decl.id] = decl;\n\t\t\t\t\t}\n\t\t\t\t\treturn { decls: result };\n\t\t\t\t},\n\t\t\t\tgetSummarizedInstances: () => {\n\t\t\t\t\treturn null!;\n\t\t\t\t},\n\t\t\t\tgetObservableValueInfo: instanceId => {\n\t\t\t\t\tconst obs = this._aliveInstances.get(instanceId) as BaseObservable<any>;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tobservers: [...obs.debugGetObservers()].map(d => this._formatObserver(d)).filter(isDefined),\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tgetDerivedInfo: instanceId => {\n\t\t\t\t\tconst d = this._aliveInstances.get(instanceId) as Derived<any>;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdependencies: [...d.debugGetState().dependencies].map(d => this._formatObservable(d)).filter(isDefined),\n\t\t\t\t\t\tobservers: [...d.debugGetObservers()].map(d => this._formatObserver(d)).filter(isDefined),\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tgetAutorunInfo: instanceId => {\n\t\t\t\t\tconst obs = this._aliveInstances.get(instanceId) as AutorunObserver;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdependencies: [...obs.debugGetState().dependencies].map(d => this._formatObservable(d)).filter(isDefined),\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tgetTransactionState: () => {\n\t\t\t\t\treturn this.getTransactionState();\n\t\t\t\t},\n\t\t\t\tsetValue: (instanceId, jsonValue) => {\n\t\t\t\t\tconst obs = this._aliveInstances.get(instanceId) as BaseObservable<any>;\n\n\t\t\t\t\tif (obs instanceof Derived) {\n\t\t\t\t\t\tobs.debugSetValue(jsonValue);\n\t\t\t\t\t} else if (obs instanceof ObservableValue) {\n\t\t\t\t\t\tobs.debugSetValue(jsonValue);\n\t\t\t\t\t} else if (obs instanceof FromEventObservable) {\n\t\t\t\t\t\tobs.debugSetValue(jsonValue);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new BugIndicatingError('Observable is not supported');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst observers = [...obs.debugGetObservers()];\n\t\t\t\t\tfor (const d of observers) {\n\t\t\t\t\t\td.beginUpdate(obs);\n\t\t\t\t\t}\n\t\t\t\t\tfor (const d of observers) {\n\t\t\t\t\t\td.handleChange(obs, undefined);\n\t\t\t\t\t}\n\t\t\t\t\tfor (const d of observers) {\n\t\t\t\t\t\td.endUpdate(obs);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tgetValue: instanceId => {\n\t\t\t\t\tconst obs = this._aliveInstances.get(instanceId) as BaseObservable<any>;\n\t\t\t\t\tif (obs instanceof Derived) {\n\t\t\t\t\t\treturn formatValue(obs.debugGetState().value, 200);\n\t\t\t\t\t} else if (obs instanceof ObservableValue) {\n\t\t\t\t\t\treturn formatValue(obs.debugGetState().value, 200);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t\tlogValue: (instanceId) => {\n\t\t\t\t\tconst obs = this._aliveInstances.get(instanceId);\n\t\t\t\t\tif (obs && 'get' in obs) {\n\t\t\t\t\t\tconsole.log('Logged Value:', obs.get());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new BugIndicatingError('Observable is not supported');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trerun: (instanceId) => {\n\t\t\t\t\tconst obs = this._aliveInstances.get(instanceId);\n\t\t\t\t\tif (obs instanceof Derived) {\n\t\t\t\t\t\tobs.debugRecompute();\n\t\t\t\t\t} else if (obs instanceof AutorunObserver) {\n\t\t\t\t\t\tobs.debugRerun();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new BugIndicatingError('Observable is not supported');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}\n\t\t};\n\t});\n\n\tprivate getTransactionState(): ITransactionState | undefined {\n\t\tconst affected: ObserverInstanceState[] = [];\n\t\tconst txs = [...this._activeTransactions];\n\t\tif (txs.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst observerQueue = txs.flatMap(t => t.debugGetUpdatingObservers() ?? []).map(o => o.observer);\n\t\tconst processedObservers = new Set<IObserver>();\n\t\twhile (observerQueue.length > 0) {\n\t\t\tconst observer = observerQueue.shift()!;\n\t\t\tif (processedObservers.has(observer)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprocessedObservers.add(observer);\n\n\t\t\tconst state = this._getInfo(observer, d => {\n\t\t\t\tif (!processedObservers.has(d)) {\n\t\t\t\t\tobserverQueue.push(d);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (state) {\n\t\t\t\taffected.push(state);\n\t\t\t}\n\t\t}\n\n\t\treturn { names: txs.map(t => t.getDebugName() ?? 'tx'), affected };\n\t}\n\n\tprivate _getObservableInfo(observable: IObservable<any>): IObservableInfo | undefined {\n\t\tconst info = this._instanceInfos.get(observable);\n\t\tif (!info) {\n\t\t\tonUnexpectedError(new BugIndicatingError('No info found'));\n\t\t\treturn undefined;\n\t\t}\n\t\treturn info as IObservableInfo;\n\t}\n\n\tprivate _getAutorunInfo(autorun: AutorunObserver): IAutorunInfo | undefined {\n\t\tconst info = this._instanceInfos.get(autorun);\n\t\tif (!info) {\n\t\t\tonUnexpectedError(new BugIndicatingError('No info found'));\n\t\t\treturn undefined;\n\t\t}\n\t\treturn info as IAutorunInfo;\n\t}\n\n\tprivate _getInfo(observer: IObserver, queue: (observer: IObserver) => void): ObserverInstanceState | undefined {\n\t\tif (observer instanceof Derived) {\n\t\t\tconst observersToUpdate = [...observer.debugGetObservers()];\n\t\t\tfor (const o of observersToUpdate) {\n\t\t\t\tqueue(o);\n\t\t\t}\n\n\t\t\tconst info = this._getObservableInfo(observer);\n\t\t\tif (!info) { return; }\n\n\t\t\tconst observerState = observer.debugGetState();\n\n\t\t\tconst base = { name: observer.debugName, instanceId: info.instanceId, updateCount: observerState.updateCount };\n\t\t\tconst changedDependencies = [...info.changedObservables].map(o => this._instanceInfos.get(o)?.instanceId).filter(isDefined);\n\t\t\tif (observerState.isComputing) {\n\t\t\t\treturn { ...base, type: 'observable/derived', state: 'updating', changedDependencies, initialComputation: false };\n\t\t\t}\n\t\t\tswitch (observerState.state) {\n\t\t\t\tcase DerivedState.initial:\n\t\t\t\t\treturn { ...base, type: 'observable/derived', state: 'noValue' };\n\t\t\t\tcase DerivedState.upToDate:\n\t\t\t\t\treturn { ...base, type: 'observable/derived', state: 'upToDate' };\n\t\t\t\tcase DerivedState.stale:\n\t\t\t\t\treturn { ...base, type: 'observable/derived', state: 'stale', changedDependencies };\n\t\t\t\tcase DerivedState.dependenciesMightHaveChanged:\n\t\t\t\t\treturn { ...base, type: 'observable/derived', state: 'possiblyStale' };\n\t\t\t}\n\t\t} else if (observer instanceof AutorunObserver) {\n\t\t\tconst info = this._getAutorunInfo(observer);\n\t\t\tif (!info) { return undefined; }\n\n\t\t\tconst base = { name: observer.debugName, instanceId: info.instanceId, updateCount: info.updateCount };\n\t\t\tconst changedDependencies = [...info.changedObservables].map(o => this._instanceInfos.get(o)!.instanceId);\n\t\t\tif (observer.debugGetState().isRunning) {\n\t\t\t\treturn { ...base, type: 'autorun', state: 'updating', changedDependencies };\n\t\t\t}\n\t\t\tswitch (observer.debugGetState().state) {\n\t\t\t\tcase AutorunState.upToDate:\n\t\t\t\t\treturn { ...base, type: 'autorun', state: 'upToDate' };\n\t\t\t\tcase AutorunState.stale:\n\t\t\t\t\treturn { ...base, type: 'autorun', state: 'stale', changedDependencies };\n\t\t\t\tcase AutorunState.dependenciesMightHaveChanged:\n\t\t\t\t\treturn { ...base, type: 'autorun', state: 'possiblyStale' };\n\t\t\t}\n\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _formatObservable(obs: IObservable<any>): { name: string; instanceId: ObsInstanceId } | undefined {\n\t\tconst info = this._getObservableInfo(obs);\n\t\tif (!info) { return undefined; }\n\t\treturn { name: obs.debugName, instanceId: info.instanceId };\n\t}\n\n\tprivate _formatObserver(obs: IObserver): { name: string; instanceId: ObsInstanceId } | undefined {\n\t\tif (obs instanceof Derived) {\n\t\t\treturn { name: obs.toString(), instanceId: this._getObservableInfo(obs)?.instanceId! };\n\t\t}\n\t\tconst autorunInfo = this._getAutorunInfo(obs as AutorunObserver);\n\t\tif (autorunInfo) {\n\t\t\treturn { name: obs.toString(), instanceId: autorunInfo.instanceId };\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate constructor() {\n\t\tDebugLocation.enable();\n\t}\n\n\tprivate _pendingChanges: ObsStateUpdate | null = null;\n\tprivate readonly _changeThrottler = new Throttler();\n\n\tprivate readonly _fullState = {};\n\n\tprivate _handleChange(update: ObsStateUpdate): void {\n\t\tdeepAssignDeleteNulls(this._fullState, update);\n\n\t\tif (this._pendingChanges === null) {\n\t\t\tthis._pendingChanges = update;\n\t\t} else {\n\t\t\tdeepAssign(this._pendingChanges, update);\n\t\t}\n\n\t\tthis._changeThrottler.throttle(this._flushUpdates, 10);\n\t}\n\n\tprivate readonly _flushUpdates = () => {\n\t\tif (this._pendingChanges !== null) {\n\t\t\tthis._channel.api.notifications.handleChange(this._pendingChanges, false);\n\t\t\tthis._pendingChanges = null;\n\t\t}\n\t};\n\n\tprivate _getDeclarationId(type: IObsDeclaration['type'], location: DebugLocation): number {\n\t\tif (!location) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tlet decInfo = this._declarations.get(location.id);\n\t\tif (decInfo === undefined) {\n\t\t\tdecInfo = {\n\t\t\t\tid: this._declarationId++,\n\t\t\t\ttype,\n\t\t\t\turl: location.fileName,\n\t\t\t\tline: location.line,\n\t\t\t\tcolumn: location.column,\n\t\t\t};\n\t\t\tthis._declarations.set(location.id, decInfo);\n\n\t\t\tthis._handleChange({ decls: { [decInfo.id]: decInfo } });\n\t\t}\n\t\treturn decInfo.id;\n\t}\n\n\thandleObservableCreated(observable: IObservable<any>, location: DebugLocation): void {\n\t\tconst declarationId = this._getDeclarationId('observable/value', location);\n\n\t\tconst info: IObservableInfo = {\n\t\t\tdeclarationId,\n\t\t\tinstanceId: this._instanceId++,\n\t\t\tlistenerCount: 0,\n\t\t\tlastValue: undefined,\n\t\t\tupdateCount: 0,\n\t\t\tchangedObservables: new Set(),\n\t\t};\n\t\tthis._instanceInfos.set(observable, info);\n\t}\n\n\thandleOnListenerCountChanged(observable: IObservable<any>, newCount: number): void {\n\t\tconst info = this._getObservableInfo(observable);\n\t\tif (!info) { return; }\n\n\t\tif (info.listenerCount === 0 && newCount > 0) {\n\t\t\tconst type: IObsDeclaration['type'] =\n\t\t\t\tobservable instanceof Derived ? 'observable/derived' : 'observable/value';\n\t\t\tthis._aliveInstances.set(info.instanceId, observable);\n\t\t\tthis._handleChange({\n\t\t\t\tinstances: {\n\t\t\t\t\t[info.instanceId]: {\n\t\t\t\t\t\tinstanceId: info.instanceId,\n\t\t\t\t\t\tdeclarationId: info.declarationId,\n\t\t\t\t\t\tformattedValue: info.lastValue,\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tname: observable.debugName,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (info.listenerCount > 0 && newCount === 0) {\n\t\t\tthis._handleChange({\n\t\t\t\tinstances: { [info.instanceId]: null }\n\t\t\t});\n\t\t\tthis._aliveInstances.delete(info.instanceId);\n\t\t}\n\t\tinfo.listenerCount = newCount;\n\t}\n\n\thandleObservableUpdated(observable: IObservable<any>, changeInfo: IChangeInformation): void {\n\t\tif (observable instanceof Derived) {\n\t\t\tthis._handleDerivedRecomputed(observable, changeInfo);\n\t\t\treturn;\n\t\t}\n\n\t\tconst info = this._getObservableInfo(observable);\n\t\tif (info) {\n\t\t\tif (changeInfo.didChange) {\n\t\t\t\tinfo.lastValue = formatValue(changeInfo.newValue, 30);\n\t\t\t\tif (info.listenerCount > 0) {\n\t\t\t\t\tthis._handleChange({\n\t\t\t\t\t\tinstances: { [info.instanceId]: { formattedValue: info.lastValue } }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\thandleAutorunCreated(autorun: AutorunObserver, location: DebugLocation): void {\n\t\tconst declarationId = this._getDeclarationId('autorun', location);\n\t\tconst info: IAutorunInfo = {\n\t\t\tdeclarationId,\n\t\t\tinstanceId: this._instanceId++,\n\t\t\tupdateCount: 0,\n\t\t\tchangedObservables: new Set(),\n\t\t};\n\t\tthis._instanceInfos.set(autorun, info);\n\t\tthis._aliveInstances.set(info.instanceId, autorun);\n\t\tif (info) {\n\t\t\tthis._handleChange({\n\t\t\t\tinstances: {\n\t\t\t\t\t[info.instanceId]: {\n\t\t\t\t\t\tinstanceId: info.instanceId,\n\t\t\t\t\t\tdeclarationId: info.declarationId,\n\t\t\t\t\t\trunCount: 0,\n\t\t\t\t\t\ttype: 'autorun',\n\t\t\t\t\t\tname: autorun.debugName,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\thandleAutorunDisposed(autorun: AutorunObserver): void {\n\t\tconst info = this._getAutorunInfo(autorun);\n\t\tif (!info) { return; }\n\n\t\tthis._handleChange({\n\t\t\tinstances: { [info.instanceId]: null }\n\t\t});\n\t\tthis._instanceInfos.delete(autorun);\n\t\tthis._aliveInstances.delete(info.instanceId);\n\t}\n\thandleAutorunDependencyChanged(autorun: AutorunObserver, observable: IObservable<any>, change: unknown): void {\n\t\tconst info = this._getAutorunInfo(autorun);\n\t\tif (!info) { return; }\n\n\t\tinfo.changedObservables.add(observable);\n\t}\n\thandleAutorunStarted(autorun: AutorunObserver): void {\n\n\t}\n\thandleAutorunFinished(autorun: AutorunObserver): void {\n\t\tconst info = this._getAutorunInfo(autorun);\n\t\tif (!info) { return; }\n\n\t\tinfo.changedObservables.clear();\n\t\tinfo.updateCount++;\n\t\tthis._handleChange({\n\t\t\tinstances: { [info.instanceId]: { runCount: info.updateCount } }\n\t\t});\n\t}\n\n\thandleDerivedDependencyChanged(derived: Derived<any>, observable: IObservable<any>, change: unknown): void {\n\t\tconst info = this._getObservableInfo(derived);\n\t\tif (info) {\n\t\t\tinfo.changedObservables.add(observable);\n\t\t}\n\t}\n\t_handleDerivedRecomputed(observable: Derived<any>, changeInfo: IChangeInformation): void {\n\t\tconst info = this._getObservableInfo(observable);\n\t\tif (!info) { return; }\n\n\t\tconst formattedValue = formatValue(changeInfo.newValue, 30);\n\t\tinfo.updateCount++;\n\t\tinfo.changedObservables.clear();\n\n\t\tinfo.lastValue = formattedValue;\n\t\tif (info.listenerCount > 0) {\n\t\t\tthis._handleChange({\n\t\t\t\tinstances: { [info.instanceId]: { formattedValue: formattedValue, recomputationCount: info.updateCount } }\n\t\t\t});\n\t\t}\n\t}\n\thandleDerivedCleared(observable: Derived<any>): void {\n\t\tconst info = this._getObservableInfo(observable);\n\t\tif (!info) { return; }\n\n\t\tinfo.lastValue = undefined;\n\t\tinfo.changedObservables.clear();\n\t\tif (info.listenerCount > 0) {\n\t\t\tthis._handleChange({\n\t\t\t\tinstances: {\n\t\t\t\t\t[info.instanceId]: {\n\t\t\t\t\t\tformattedValue: undefined,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\thandleBeginTransaction(transaction: TransactionImpl): void {\n\t\tthis._activeTransactions.add(transaction);\n\t}\n\thandleEndTransaction(transaction: TransactionImpl): void {\n\t\tthis._activeTransactions.delete(transaction);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// This is a facade for the observable implementation. Only import from here!\n\nexport { observableValueOpts } from './observables/observableValueOpts.js';\nexport { autorun, autorunDelta, autorunHandleChanges, autorunOpts, autorunWithStore, autorunWithStoreHandleChanges, autorunIterableDelta, autorunSelfDisposable } from './reactions/autorun.js';\nexport { type IObservable, type IObservableWithChange, type IObserver, type IReader, type ISettable, type ISettableObservable, type ITransaction } from './base.js';\nexport { disposableObservableValue } from './observables/observableValue.js';\nexport { derived, derivedDisposable, derivedHandleChanges, derivedOpts, derivedWithSetter, derivedWithStore } from './observables/derived.js';\nexport { type IDerivedReader } from './observables/derivedImpl.js';\nexport { ObservableLazy, ObservableLazyPromise, ObservablePromise, PromiseResult, } from './utils/promise.js';\nexport { derivedWithCancellationToken, waitForState } from './utils/utilsCancellation.js';\nexport {\n\tdebouncedObservableDeprecated, debouncedObservable, derivedObservableWithCache,\n\tderivedObservableWithWritableCache, keepObserved, mapObservableArrayCached, observableFromPromise,\n\trecomputeInitiallyAndOnChange,\n\tsignalFromObservable, wasEventTriggeredRecently,\n} from './utils/utils.js';\nexport { type DebugOwner } from './debugName.js';\nexport { type IChangeContext, type IChangeTracker, recordChanges, recordChangesLazy } from './changeTracker.js';\nexport { constObservable } from './observables/constObservable.js';\nexport { type IObservableSignal, observableSignal } from './observables/observableSignal.js';\nexport { observableFromEventOpts } from './observables/observableFromEvent.js';\nexport { observableSignalFromEvent } from './observables/observableSignalFromEvent.js';\nexport { asyncTransaction, globalTransaction, subtransaction, transaction, TransactionImpl } from './transaction.js';\nexport { observableFromValueWithChangeEvent, ValueWithChangeEventFromObservable } from './utils/valueWithChangeEvent.js';\nexport { runOnChange, runOnChangeWithCancellationToken, runOnChangeWithStore, type RemoveUndefined } from './utils/runOnChange.js';\nexport { derivedConstOnceDefined, latestChangedValue } from './experimental/utils.js';\nexport { observableFromEvent } from './observables/observableFromEvent.js';\nexport { observableValue } from './observables/observableValue.js';\n\nexport { ObservableSet } from './set.js';\nexport { ObservableMap } from './map.js';\nexport { DebugLocation } from './debugLocation.js';\n\nimport { addLogger, setLogObservableFn } from './logging/logging.js';\nimport { ConsoleObservableLogger, logObservableToConsole } from './logging/consoleObservableLogger.js';\nimport { DevToolsLogger } from './logging/debugger/devToolsLogger.js';\nimport { env } from '../process.js';\n\n\nsetLogObservableFn(logObservableToConsole);\n\n// Remove \"//\" in the next line to enable logging\nconst enableLogging = false\n\t// || Boolean(\"true\") // done \"weirdly\" so that a lint warning prevents you from pushing this\n\t;\n\nif (enableLogging) {\n\taddLogger(new ConsoleObservableLogger());\n}\n\nif (env && env['VSCODE_DEV_DEBUG_OBSERVABLES']) {\n\t// To debug observables you also need the extension \"ms-vscode.debug-value-editor\"\n\taddLogger(DevToolsLogger.getInstance());\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\n\nexport interface IOffsetRange {\n\treadonly start: number;\n\treadonly endExclusive: number;\n}\n\n/**\n * A range of offsets (0-based).\n*/\nexport class OffsetRange implements IOffsetRange {\n\tpublic static fromTo(start: number, endExclusive: number): OffsetRange {\n\t\treturn new OffsetRange(start, endExclusive);\n\t}\n\n\tpublic static addRange(range: OffsetRange, sortedRanges: OffsetRange[]): void {\n\t\tlet i = 0;\n\t\twhile (i < sortedRanges.length && sortedRanges[i].endExclusive < range.start) {\n\t\t\ti++;\n\t\t}\n\t\tlet j = i;\n\t\twhile (j < sortedRanges.length && sortedRanges[j].start <= range.endExclusive) {\n\t\t\tj++;\n\t\t}\n\t\tif (i === j) {\n\t\t\tsortedRanges.splice(i, 0, range);\n\t\t} else {\n\t\t\tconst start = Math.min(range.start, sortedRanges[i].start);\n\t\t\tconst end = Math.max(range.endExclusive, sortedRanges[j - 1].endExclusive);\n\t\t\tsortedRanges.splice(i, j - i, new OffsetRange(start, end));\n\t\t}\n\t}\n\n\tpublic static tryCreate(start: number, endExclusive: number): OffsetRange | undefined {\n\t\tif (start > endExclusive) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn new OffsetRange(start, endExclusive);\n\t}\n\n\tpublic static ofLength(length: number): OffsetRange {\n\t\treturn new OffsetRange(0, length);\n\t}\n\n\tpublic static ofStartAndLength(start: number, length: number): OffsetRange {\n\t\treturn new OffsetRange(start, start + length);\n\t}\n\n\tpublic static emptyAt(offset: number): OffsetRange {\n\t\treturn new OffsetRange(offset, offset);\n\t}\n\n\tconstructor(public readonly start: number, public readonly endExclusive: number) {\n\t\tif (start > endExclusive) {\n\t\t\tthrow new BugIndicatingError(`Invalid range: ${this.toString()}`);\n\t\t}\n\t}\n\n\tget isEmpty(): boolean {\n\t\treturn this.start === this.endExclusive;\n\t}\n\n\tpublic delta(offset: number): OffsetRange {\n\t\treturn new OffsetRange(this.start + offset, this.endExclusive + offset);\n\t}\n\n\tpublic deltaStart(offset: number): OffsetRange {\n\t\treturn new OffsetRange(this.start + offset, this.endExclusive);\n\t}\n\n\tpublic deltaEnd(offset: number): OffsetRange {\n\t\treturn new OffsetRange(this.start, this.endExclusive + offset);\n\t}\n\n\tpublic get length(): number {\n\t\treturn this.endExclusive - this.start;\n\t}\n\n\tpublic toString() {\n\t\treturn `[${this.start}, ${this.endExclusive})`;\n\t}\n\n\tpublic equals(other: OffsetRange): boolean {\n\t\treturn this.start === other.start && this.endExclusive === other.endExclusive;\n\t}\n\n\tpublic containsRange(other: OffsetRange): boolean {\n\t\treturn this.start <= other.start && other.endExclusive <= this.endExclusive;\n\t}\n\n\tpublic contains(offset: number): boolean {\n\t\treturn this.start <= offset && offset < this.endExclusive;\n\t}\n\n\t/**\n\t * for all numbers n: range1.contains(n) or range2.contains(n) => range1.join(range2).contains(n)\n\t * The joined range is the smallest range that contains both ranges.\n\t */\n\tpublic join(other: OffsetRange): OffsetRange {\n\t\treturn new OffsetRange(Math.min(this.start, other.start), Math.max(this.endExclusive, other.endExclusive));\n\t}\n\n\t/**\n\t * for all numbers n: range1.contains(n) and range2.contains(n) <=> range1.intersect(range2).contains(n)\n\t *\n\t * The resulting range is empty if the ranges do not intersect, but touch.\n\t * If the ranges don't even touch, the result is undefined.\n\t */\n\tpublic intersect(other: OffsetRange): OffsetRange | undefined {\n\t\tconst start = Math.max(this.start, other.start);\n\t\tconst end = Math.min(this.endExclusive, other.endExclusive);\n\t\tif (start <= end) {\n\t\t\treturn new OffsetRange(start, end);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic intersectionLength(range: OffsetRange): number {\n\t\tconst start = Math.max(this.start, range.start);\n\t\tconst end = Math.min(this.endExclusive, range.endExclusive);\n\t\treturn Math.max(0, end - start);\n\t}\n\n\tpublic intersects(other: OffsetRange): boolean {\n\t\tconst start = Math.max(this.start, other.start);\n\t\tconst end = Math.min(this.endExclusive, other.endExclusive);\n\t\treturn start < end;\n\t}\n\n\tpublic intersectsOrTouches(other: OffsetRange): boolean {\n\t\tconst start = Math.max(this.start, other.start);\n\t\tconst end = Math.min(this.endExclusive, other.endExclusive);\n\t\treturn start <= end;\n\t}\n\n\tpublic isBefore(other: OffsetRange): boolean {\n\t\treturn this.endExclusive <= other.start;\n\t}\n\n\tpublic isAfter(other: OffsetRange): boolean {\n\t\treturn this.start >= other.endExclusive;\n\t}\n\n\tpublic slice<T>(arr: readonly T[]): T[] {\n\t\treturn arr.slice(this.start, this.endExclusive);\n\t}\n\n\tpublic substring(str: string): string {\n\t\treturn str.substring(this.start, this.endExclusive);\n\t}\n\n\t/**\n\t * Returns the given value if it is contained in this instance, otherwise the closest value that is contained.\n\t * The range must not be empty.\n\t */\n\tpublic clip(value: number): number {\n\t\tif (this.isEmpty) {\n\t\t\tthrow new BugIndicatingError(`Invalid clipping range: ${this.toString()}`);\n\t\t}\n\t\treturn Math.max(this.start, Math.min(this.endExclusive - 1, value));\n\t}\n\n\t/**\n\t * Returns `r := value + k * length` such that `r` is contained in this range.\n\t * The range must not be empty.\n\t *\n\t * E.g. `[5, 10).clipCyclic(10) === 5`, `[5, 10).clipCyclic(11) === 6` and `[5, 10).clipCyclic(4) === 9`.\n\t */\n\tpublic clipCyclic(value: number): number {\n\t\tif (this.isEmpty) {\n\t\t\tthrow new BugIndicatingError(`Invalid clipping range: ${this.toString()}`);\n\t\t}\n\t\tif (value < this.start) {\n\t\t\treturn this.endExclusive - ((this.start - value) % this.length);\n\t\t}\n\t\tif (value >= this.endExclusive) {\n\t\t\treturn this.start + ((value - this.start) % this.length);\n\t\t}\n\t\treturn value;\n\t}\n\n\tpublic map<T>(f: (offset: number) => T): T[] {\n\t\tconst result: T[] = [];\n\t\tfor (let i = this.start; i < this.endExclusive; i++) {\n\t\t\tresult.push(f(i));\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic forEach(f: (offset: number) => void): void {\n\t\tfor (let i = this.start; i < this.endExclusive; i++) {\n\t\t\tf(i);\n\t\t}\n\t}\n\n\t/**\n\t * this: [ 5, 10), range: [10, 15) => [5, 15)]\n\t * Throws if the ranges are not touching.\n\t*/\n\tpublic joinRightTouching(range: OffsetRange): OffsetRange {\n\t\tif (this.endExclusive !== range.start) {\n\t\t\tthrow new BugIndicatingError(`Invalid join: ${this.toString()} and ${range.toString()}`);\n\t\t}\n\t\treturn new OffsetRange(this.start, range.endExclusive);\n\t}\n}\n\nexport class OffsetRangeSet {\n\tprivate readonly _sortedRanges: OffsetRange[] = [];\n\n\tpublic get ranges(): OffsetRange[] {\n\t\treturn [...this._sortedRanges];\n\t}\n\n\tpublic addRange(range: OffsetRange): void {\n\t\tlet i = 0;\n\t\twhile (i < this._sortedRanges.length && this._sortedRanges[i].endExclusive < range.start) {\n\t\t\ti++;\n\t\t}\n\t\tlet j = i;\n\t\twhile (j < this._sortedRanges.length && this._sortedRanges[j].start <= range.endExclusive) {\n\t\t\tj++;\n\t\t}\n\t\tif (i === j) {\n\t\t\tthis._sortedRanges.splice(i, 0, range);\n\t\t} else {\n\t\t\tconst start = Math.min(range.start, this._sortedRanges[i].start);\n\t\t\tconst end = Math.max(range.endExclusive, this._sortedRanges[j - 1].endExclusive);\n\t\t\tthis._sortedRanges.splice(i, j - i, new OffsetRange(start, end));\n\t\t}\n\t}\n\n\tpublic toString(): string {\n\t\treturn this._sortedRanges.map(r => r.toString()).join(', ');\n\t}\n\n\t/**\n\t * Returns of there is a value that is contained in this instance and the given range.\n\t */\n\tpublic intersectsStrict(other: OffsetRange): boolean {\n\t\t// TODO use binary search\n\t\tlet i = 0;\n\t\twhile (i < this._sortedRanges.length && this._sortedRanges[i].endExclusive <= other.start) {\n\t\t\ti++;\n\t\t}\n\t\treturn i < this._sortedRanges.length && this._sortedRanges[i].start < other.endExclusive;\n\t}\n\n\tpublic intersectWithRange(other: OffsetRange): OffsetRangeSet {\n\t\t// TODO use binary search + slice\n\t\tconst result = new OffsetRangeSet();\n\t\tfor (const range of this._sortedRanges) {\n\t\t\tconst intersection = range.intersect(other);\n\t\t\tif (intersection) {\n\t\t\t\tresult.addRange(intersection);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic intersectWithRangeLength(other: OffsetRange): number {\n\t\treturn this.intersectWithRange(other).length;\n\t}\n\n\tpublic get length(): number {\n\t\treturn this._sortedRanges.reduce((prev, cur) => prev + cur.length, 0);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A position in the editor. This interface is suitable for serialization.\n */\nexport interface IPosition {\n\t/**\n\t * line number (starts at 1)\n\t */\n\treadonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\treadonly column: number;\n}\n\n/**\n * A position in the editor.\n */\nexport class Position {\n\t/**\n\t * line number (starts at 1)\n\t */\n\tpublic readonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\tpublic readonly column: number;\n\n\tconstructor(lineNumber: number, column: number) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.column = column;\n\t}\n\n\t/**\n\t * Create a new position from this position.\n\t *\n\t * @param newLineNumber new line number\n\t * @param newColumn new column\n\t */\n\twith(newLineNumber: number = this.lineNumber, newColumn: number = this.column): Position {\n\t\tif (newLineNumber === this.lineNumber && newColumn === this.column) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn new Position(newLineNumber, newColumn);\n\t\t}\n\t}\n\n\t/**\n\t * Derive a new position from this position.\n\t *\n\t * @param deltaLineNumber line number delta\n\t * @param deltaColumn column delta\n\t */\n\tdelta(deltaLineNumber: number = 0, deltaColumn: number = 0): Position {\n\t\treturn this.with(Math.max(1, this.lineNumber + deltaLineNumber), Math.max(1, this.column + deltaColumn));\n\t}\n\n\t/**\n\t * Test if this position equals other position\n\t */\n\tpublic equals(other: IPosition): boolean {\n\t\treturn Position.equals(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` equals position `b`\n\t */\n\tpublic static equals(a: IPosition | null, b: IPosition | null): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.lineNumber === b.lineNumber &&\n\t\t\ta.column === b.column\n\t\t);\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic isBefore(other: IPosition): boolean {\n\t\treturn Position.isBefore(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic static isBefore(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column < b.column;\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic isBeforeOrEqual(other: IPosition): boolean {\n\t\treturn Position.isBeforeOrEqual(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic static isBeforeOrEqual(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column <= b.column;\n\t}\n\n\t/**\n\t * A function that compares positions, useful for sorting\n\t */\n\tpublic static compare(a: IPosition, b: IPosition): number {\n\t\tconst aLineNumber = a.lineNumber | 0;\n\t\tconst bLineNumber = b.lineNumber | 0;\n\n\t\tif (aLineNumber === bLineNumber) {\n\t\t\tconst aColumn = a.column | 0;\n\t\t\tconst bColumn = b.column | 0;\n\t\t\treturn aColumn - bColumn;\n\t\t}\n\n\t\treturn aLineNumber - bLineNumber;\n\t}\n\n\t/**\n\t * Clone this position.\n\t */\n\tpublic clone(): Position {\n\t\treturn new Position(this.lineNumber, this.column);\n\t}\n\n\t/**\n\t * Convert to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '(' + this.lineNumber + ',' + this.column + ')';\n\t}\n\n\t// ---\n\n\t/**\n\t * Create a `Position` from an `IPosition`.\n\t */\n\tpublic static lift(pos: IPosition): Position {\n\t\treturn new Position(pos.lineNumber, pos.column);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IPosition`.\n\t */\n\tpublic static isIPosition(obj: any): obj is IPosition {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.lineNumber === 'number')\n\t\t\t&& (typeof obj.column === 'number')\n\t\t);\n\t}\n\n\tpublic toJSON(): IPosition {\n\t\treturn {\n\t\t\tlineNumber: this.lineNumber,\n\t\t\tcolumn: this.column\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from './position.js';\n\n/**\n * A range in the editor. This interface is suitable for serialization.\n */\nexport interface IRange {\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\treadonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\treadonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\treadonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\treadonly endColumn: number;\n}\n\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\tpublic readonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\tpublic readonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\tpublic readonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\tpublic readonly endColumn: number;\n\n\tconstructor(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number) {\n\t\tif ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n\t\t\tthis.startLineNumber = endLineNumber;\n\t\t\tthis.startColumn = endColumn;\n\t\t\tthis.endLineNumber = startLineNumber;\n\t\t\tthis.endColumn = startColumn;\n\t\t} else {\n\t\t\tthis.startLineNumber = startLineNumber;\n\t\t\tthis.startColumn = startColumn;\n\t\t\tthis.endLineNumber = endLineNumber;\n\t\t\tthis.endColumn = endColumn;\n\t\t}\n\t}\n\n\t/**\n\t * Test if this range is empty.\n\t */\n\tpublic isEmpty(): boolean {\n\t\treturn Range.isEmpty(this);\n\t}\n\n\t/**\n\t * Test if `range` is empty.\n\t */\n\tpublic static isEmpty(range: IRange): boolean {\n\t\treturn (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n\t}\n\n\t/**\n\t * Test if position is in this range. If the position is at the edges, will return true.\n\t */\n\tpublic containsPosition(position: IPosition): boolean {\n\t\treturn Range.containsPosition(this, position);\n\t}\n\n\t/**\n\t * Test if `position` is in `range`. If the position is at the edges, will return true.\n\t */\n\tpublic static containsPosition(range: IRange, position: IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `position` is in `range`. If the position is at the edges, will return false.\n\t * @internal\n\t */\n\tpublic static strictContainsPosition(range: IRange, position: IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column <= range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column >= range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if range is in this range. If the range is equal to this range, will return true.\n\t */\n\tpublic containsRange(range: IRange): boolean {\n\t\treturn Range.containsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n\t */\n\tpublic static containsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n\t */\n\tpublic strictContainsRange(range: IRange): boolean {\n\t\treturn Range.strictContainsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is strictly in `range` (must start after, and end before). If the ranges are equal, will return false.\n\t */\n\tpublic static strictContainsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic plusRange(range: IRange): Range {\n\t\treturn Range.plusRange(this, range);\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic static plusRange(a: IRange, b: IRange): Range {\n\t\tlet startLineNumber: number;\n\t\tlet startColumn: number;\n\t\tlet endLineNumber: number;\n\t\tlet endColumn: number;\n\n\t\tif (b.startLineNumber < a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = b.startColumn;\n\t\t} else if (b.startLineNumber === a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = Math.min(b.startColumn, a.startColumn);\n\t\t} else {\n\t\t\tstartLineNumber = a.startLineNumber;\n\t\t\tstartColumn = a.startColumn;\n\t\t}\n\n\t\tif (b.endLineNumber > a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = b.endColumn;\n\t\t} else if (b.endLineNumber === a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = Math.max(b.endColumn, a.endColumn);\n\t\t} else {\n\t\t\tendLineNumber = a.endLineNumber;\n\t\t\tendColumn = a.endColumn;\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic intersectRanges(range: IRange): Range | null {\n\t\treturn Range.intersectRanges(this, range);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic static intersectRanges(a: IRange, b: IRange): Range | null {\n\t\tlet resultStartLineNumber = a.startLineNumber;\n\t\tlet resultStartColumn = a.startColumn;\n\t\tlet resultEndLineNumber = a.endLineNumber;\n\t\tlet resultEndColumn = a.endColumn;\n\t\tconst otherStartLineNumber = b.startLineNumber;\n\t\tconst otherStartColumn = b.startColumn;\n\t\tconst otherEndLineNumber = b.endLineNumber;\n\t\tconst otherEndColumn = b.endColumn;\n\n\t\tif (resultStartLineNumber < otherStartLineNumber) {\n\t\t\tresultStartLineNumber = otherStartLineNumber;\n\t\t\tresultStartColumn = otherStartColumn;\n\t\t} else if (resultStartLineNumber === otherStartLineNumber) {\n\t\t\tresultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n\t\t}\n\n\t\tif (resultEndLineNumber > otherEndLineNumber) {\n\t\t\tresultEndLineNumber = otherEndLineNumber;\n\t\t\tresultEndColumn = otherEndColumn;\n\t\t} else if (resultEndLineNumber === otherEndLineNumber) {\n\t\t\tresultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n\t\t}\n\n\t\t// Check if selection is now empty\n\t\tif (resultStartLineNumber > resultEndLineNumber) {\n\t\t\treturn null;\n\t\t}\n\t\tif (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n\t}\n\n\t/**\n\t * Test if this range equals other.\n\t */\n\tpublic equalsRange(other: IRange | null | undefined): boolean {\n\t\treturn Range.equalsRange(this, other);\n\t}\n\n\t/**\n\t * Test if range `a` equals `b`.\n\t */\n\tpublic static equalsRange(a: IRange | null | undefined, b: IRange | null | undefined): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.startLineNumber === b.startLineNumber &&\n\t\t\ta.startColumn === b.startColumn &&\n\t\t\ta.endLineNumber === b.endLineNumber &&\n\t\t\ta.endColumn === b.endColumn\n\t\t);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic getEndPosition(): Position {\n\t\treturn Range.getEndPosition(this);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic static getEndPosition(range: IRange): Position {\n\t\treturn new Position(range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic getStartPosition(): Position {\n\t\treturn Range.getStartPosition(this);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic static getStartPosition(range: IRange): Position {\n\t\treturn new Position(range.startLineNumber, range.startColumn);\n\t}\n\n\t/**\n\t * Transform to a user presentable string representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n\t}\n\n\t/**\n\t * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Range {\n\t\treturn new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic collapseToStart(): Range {\n\t\treturn Range.collapseToStart(this);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic static collapseToStart(range: IRange): Range {\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's end position.\n\t */\n\tpublic collapseToEnd(): Range {\n\t\treturn Range.collapseToEnd(this);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's end position.\n\t */\n\tpublic static collapseToEnd(range: IRange): Range {\n\t\treturn new Range(range.endLineNumber, range.endColumn, range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Moves the range by the given amount of lines.\n\t */\n\tpublic delta(lineCount: number): Range {\n\t\treturn new Range(this.startLineNumber + lineCount, this.startColumn, this.endLineNumber + lineCount, this.endColumn);\n\t}\n\n\tpublic isSingleLine(): boolean {\n\t\treturn this.startLineNumber === this.endLineNumber;\n\t}\n\n\t// ---\n\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Range {\n\t\treturn new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Range` from an `IRange`.\n\t */\n\tpublic static lift(range: undefined | null): null;\n\tpublic static lift(range: IRange): Range;\n\tpublic static lift(range: IRange | undefined | null): Range | null;\n\tpublic static lift(range: IRange | undefined | null): Range | null {\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IRange`.\n\t */\n\tpublic static isIRange(obj: any): obj is IRange {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.startLineNumber === 'number')\n\t\t\t&& (typeof obj.startColumn === 'number')\n\t\t\t&& (typeof obj.endLineNumber === 'number')\n\t\t\t&& (typeof obj.endColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two ranges are touching in any way.\n\t */\n\tpublic static areIntersectingOrTouching(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n\t */\n\tpublic static areIntersecting(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if the two ranges are intersecting, but not touching at all.\n\t */\n\tpublic static areOnlyIntersecting(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < (b.startLineNumber - 1) || (a.endLineNumber === b.startLineNumber && a.endColumn < (b.startColumn - 1))) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < (a.startLineNumber - 1) || (b.endLineNumber === a.startLineNumber && b.endColumn < (a.startColumn - 1))) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the startPosition and then on the endPosition\n\t */\n\tpublic static compareRangesUsingStarts(a: IRange | null | undefined, b: IRange | null | undefined): number {\n\t\tif (a && b) {\n\t\t\tconst aStartLineNumber = a.startLineNumber | 0;\n\t\t\tconst bStartLineNumber = b.startLineNumber | 0;\n\n\t\t\tif (aStartLineNumber === bStartLineNumber) {\n\t\t\t\tconst aStartColumn = a.startColumn | 0;\n\t\t\t\tconst bStartColumn = b.startColumn | 0;\n\n\t\t\t\tif (aStartColumn === bStartColumn) {\n\t\t\t\t\tconst aEndLineNumber = a.endLineNumber | 0;\n\t\t\t\t\tconst bEndLineNumber = b.endLineNumber | 0;\n\n\t\t\t\t\tif (aEndLineNumber === bEndLineNumber) {\n\t\t\t\t\t\tconst aEndColumn = a.endColumn | 0;\n\t\t\t\t\t\tconst bEndColumn = b.endColumn | 0;\n\t\t\t\t\t\treturn aEndColumn - bEndColumn;\n\t\t\t\t\t}\n\t\t\t\t\treturn aEndLineNumber - bEndLineNumber;\n\t\t\t\t}\n\t\t\t\treturn aStartColumn - bStartColumn;\n\t\t\t}\n\t\t\treturn aStartLineNumber - bStartLineNumber;\n\t\t}\n\t\tconst aExists = (a ? 1 : 0);\n\t\tconst bExists = (b ? 1 : 0);\n\t\treturn aExists - bExists;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the endPosition and then on the startPosition\n\t */\n\tpublic static compareRangesUsingEnds(a: IRange, b: IRange): number {\n\t\tif (a.endLineNumber === b.endLineNumber) {\n\t\t\tif (a.endColumn === b.endColumn) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.startColumn - b.startColumn;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn a.endColumn - b.endColumn;\n\t\t}\n\t\treturn a.endLineNumber - b.endLineNumber;\n\t}\n\n\t/**\n\t * Test if the range spans multiple lines.\n\t */\n\tpublic static spansMultipleLines(range: IRange): boolean {\n\t\treturn range.endLineNumber > range.startLineNumber;\n\t}\n\n\tpublic toJSON(): IRange {\n\t\treturn this;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\nimport { OffsetRange } from './offsetRange.js';\nimport { Range } from '../range.js';\nimport { findFirstIdxMonotonousOrArrLen, findLastIdxMonotonous, findLastMonotonous } from '../../../../base/common/arraysFind.js';\nimport { Comparator, compareBy, numberComparator } from '../../../../base/common/arrays.js';\n\n/**\n * A range of lines (1-based).\n */\nexport class LineRange {\n\tpublic static ofLength(startLineNumber: number, length: number): LineRange {\n\t\treturn new LineRange(startLineNumber, startLineNumber + length);\n\t}\n\n\tpublic static fromRange(range: Range): LineRange {\n\t\treturn new LineRange(range.startLineNumber, range.endLineNumber);\n\t}\n\n\tpublic static fromRangeInclusive(range: Range): LineRange {\n\t\treturn new LineRange(range.startLineNumber, range.endLineNumber + 1);\n\t}\n\n\tpublic static readonly compareByStart: Comparator<LineRange> = compareBy(l => l.startLineNumber, numberComparator);\n\n\tpublic static subtract(a: LineRange, b: LineRange | undefined): LineRange[] {\n\t\tif (!b) {\n\t\t\treturn [a];\n\t\t}\n\t\tif (a.startLineNumber < b.startLineNumber && b.endLineNumberExclusive < a.endLineNumberExclusive) {\n\t\t\treturn [\n\t\t\t\tnew LineRange(a.startLineNumber, b.startLineNumber),\n\t\t\t\tnew LineRange(b.endLineNumberExclusive, a.endLineNumberExclusive)\n\t\t\t];\n\t\t} else if (b.startLineNumber <= a.startLineNumber && a.endLineNumberExclusive <= b.endLineNumberExclusive) {\n\t\t\treturn [];\n\t\t} else if (b.endLineNumberExclusive < a.endLineNumberExclusive) {\n\t\t\treturn [new LineRange(Math.max(b.endLineNumberExclusive, a.startLineNumber), a.endLineNumberExclusive)];\n\t\t} else {\n\t\t\treturn [new LineRange(a.startLineNumber, Math.min(b.startLineNumber, a.endLineNumberExclusive))];\n\t\t}\n\t}\n\n\t/**\n\t * @param lineRanges An array of arrays of of sorted line ranges.\n\t */\n\tpublic static joinMany(lineRanges: readonly (readonly LineRange[])[]): readonly LineRange[] {\n\t\tif (lineRanges.length === 0) {\n\t\t\treturn [];\n\t\t}\n\t\tlet result = new LineRangeSet(lineRanges[0].slice());\n\t\tfor (let i = 1; i < lineRanges.length; i++) {\n\t\t\tresult = result.getUnion(new LineRangeSet(lineRanges[i].slice()));\n\t\t}\n\t\treturn result.ranges;\n\t}\n\n\tpublic static join(lineRanges: LineRange[]): LineRange {\n\t\tif (lineRanges.length === 0) {\n\t\t\tthrow new BugIndicatingError('lineRanges cannot be empty');\n\t\t}\n\t\tlet startLineNumber = lineRanges[0].startLineNumber;\n\t\tlet endLineNumberExclusive = lineRanges[0].endLineNumberExclusive;\n\t\tfor (let i = 1; i < lineRanges.length; i++) {\n\t\t\tstartLineNumber = Math.min(startLineNumber, lineRanges[i].startLineNumber);\n\t\t\tendLineNumberExclusive = Math.max(endLineNumberExclusive, lineRanges[i].endLineNumberExclusive);\n\t\t}\n\t\treturn new LineRange(startLineNumber, endLineNumberExclusive);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic static deserialize(lineRange: ISerializedLineRange): LineRange {\n\t\treturn new LineRange(lineRange[0], lineRange[1]);\n\t}\n\n\t/**\n\t * The start line number.\n\t */\n\tpublic readonly startLineNumber: number;\n\n\t/**\n\t * The end line number (exclusive).\n\t */\n\tpublic readonly endLineNumberExclusive: number;\n\n\tconstructor(\n\t\tstartLineNumber: number,\n\t\tendLineNumberExclusive: number,\n\t) {\n\t\tif (startLineNumber > endLineNumberExclusive) {\n\t\t\tthrow new BugIndicatingError(`startLineNumber ${startLineNumber} cannot be after endLineNumberExclusive ${endLineNumberExclusive}`);\n\t\t}\n\t\tthis.startLineNumber = startLineNumber;\n\t\tthis.endLineNumberExclusive = endLineNumberExclusive;\n\t}\n\n\t/**\n\t * Indicates if this line range contains the given line number.\n\t */\n\tpublic contains(lineNumber: number): boolean {\n\t\treturn this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n\t}\n\n\tpublic containsRange(range: LineRange): boolean {\n\t\treturn this.startLineNumber <= range.startLineNumber && range.endLineNumberExclusive <= this.endLineNumberExclusive;\n\t}\n\n\t/**\n\t * Indicates if this line range is empty.\n\t */\n\tget isEmpty(): boolean {\n\t\treturn this.startLineNumber === this.endLineNumberExclusive;\n\t}\n\n\t/**\n\t * Moves this line range by the given offset of line numbers.\n\t */\n\tpublic delta(offset: number): LineRange {\n\t\treturn new LineRange(this.startLineNumber + offset, this.endLineNumberExclusive + offset);\n\t}\n\n\tpublic deltaLength(offset: number): LineRange {\n\t\treturn new LineRange(this.startLineNumber, this.endLineNumberExclusive + offset);\n\t}\n\n\t/**\n\t * The number of lines this line range spans.\n\t */\n\tpublic get length(): number {\n\t\treturn this.endLineNumberExclusive - this.startLineNumber;\n\t}\n\n\t/**\n\t * Creates a line range that combines this and the given line range.\n\t */\n\tpublic join(other: LineRange): LineRange {\n\t\treturn new LineRange(\n\t\t\tMath.min(this.startLineNumber, other.startLineNumber),\n\t\t\tMath.max(this.endLineNumberExclusive, other.endLineNumberExclusive)\n\t\t);\n\t}\n\n\tpublic toString(): string {\n\t\treturn `[${this.startLineNumber},${this.endLineNumberExclusive})`;\n\t}\n\n\t/**\n\t * The resulting range is empty if the ranges do not intersect, but touch.\n\t * If the ranges don't even touch, the result is undefined.\n\t */\n\tpublic intersect(other: LineRange): LineRange | undefined {\n\t\tconst startLineNumber = Math.max(this.startLineNumber, other.startLineNumber);\n\t\tconst endLineNumberExclusive = Math.min(this.endLineNumberExclusive, other.endLineNumberExclusive);\n\t\tif (startLineNumber <= endLineNumberExclusive) {\n\t\t\treturn new LineRange(startLineNumber, endLineNumberExclusive);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic intersectsStrict(other: LineRange): boolean {\n\t\treturn this.startLineNumber < other.endLineNumberExclusive && other.startLineNumber < this.endLineNumberExclusive;\n\t}\n\n\tpublic intersectsOrTouches(other: LineRange): boolean {\n\t\treturn this.startLineNumber <= other.endLineNumberExclusive && other.startLineNumber <= this.endLineNumberExclusive;\n\t}\n\n\tpublic equals(b: LineRange): boolean {\n\t\treturn this.startLineNumber === b.startLineNumber && this.endLineNumberExclusive === b.endLineNumberExclusive;\n\t}\n\n\tpublic toInclusiveRange(): Range | null {\n\t\tif (this.isEmpty) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(this.startLineNumber, 1, this.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER);\n\t}\n\n\t/**\n\t * @deprecated Using this function is discouraged because it might lead to bugs: The end position is not guaranteed to be a valid position!\n\t*/\n\tpublic toExclusiveRange(): Range {\n\t\treturn new Range(this.startLineNumber, 1, this.endLineNumberExclusive, 1);\n\t}\n\n\tpublic mapToLineArray<T>(f: (lineNumber: number) => T): T[] {\n\t\tconst result: T[] = [];\n\t\tfor (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n\t\t\tresult.push(f(lineNumber));\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic forEach(f: (lineNumber: number) => void): void {\n\t\tfor (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n\t\t\tf(lineNumber);\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic serialize(): ISerializedLineRange {\n\t\treturn [this.startLineNumber, this.endLineNumberExclusive];\n\t}\n\n\t/**\n\t * Converts this 1-based line range to a 0-based offset range (subtracts 1!).\n\t * @internal\n\t */\n\tpublic toOffsetRange(): OffsetRange {\n\t\treturn new OffsetRange(this.startLineNumber - 1, this.endLineNumberExclusive - 1);\n\t}\n\n\tpublic distanceToRange(other: LineRange): number {\n\t\tif (this.endLineNumberExclusive <= other.startLineNumber) {\n\t\t\treturn other.startLineNumber - this.endLineNumberExclusive;\n\t\t}\n\t\tif (other.endLineNumberExclusive <= this.startLineNumber) {\n\t\t\treturn this.startLineNumber - other.endLineNumberExclusive;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic distanceToLine(lineNumber: number): number {\n\t\tif (this.contains(lineNumber)) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (lineNumber < this.startLineNumber) {\n\t\t\treturn this.startLineNumber - lineNumber;\n\t\t}\n\t\treturn lineNumber - this.endLineNumberExclusive;\n\t}\n\n\tpublic addMargin(marginTop: number, marginBottom: number): LineRange {\n\t\treturn new LineRange(\n\t\t\tthis.startLineNumber - marginTop,\n\t\t\tthis.endLineNumberExclusive + marginBottom\n\t\t);\n\t}\n}\n\nexport type ISerializedLineRange = [startLineNumber: number, endLineNumberExclusive: number];\n\n\nexport class LineRangeSet {\n\tconstructor(\n\t\t/**\n\t\t * Sorted by start line number.\n\t\t * No two line ranges are touching or intersecting.\n\t\t */\n\t\tprivate readonly _normalizedRanges: LineRange[] = []\n\t) {\n\t}\n\n\tget ranges(): readonly LineRange[] {\n\t\treturn this._normalizedRanges;\n\t}\n\n\taddRange(range: LineRange): void {\n\t\tif (range.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Idea: Find joinRange such that:\n\t\t// replaceRange = _normalizedRanges.replaceRange(joinRange, range.joinAll(joinRange.map(idx => this._normalizedRanges[idx])))\n\n\t\t// idx of first element that touches range or that is after range\n\t\tconst joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n\t\t// idx of element after { last element that touches range or that is before range }\n\t\tconst joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n\n\t\tif (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n\t\t\t// If there is no element that touches range, then joinRangeStartIdx === joinRangeEndIdxExclusive and that value is the index of the element after range\n\t\t\tthis._normalizedRanges.splice(joinRangeStartIdx, 0, range);\n\t\t} else if (joinRangeStartIdx === joinRangeEndIdxExclusive - 1) {\n\t\t\t// Else, there is an element that touches range and in this case it is both the first and last element. Thus we can replace it\n\t\t\tconst joinRange = this._normalizedRanges[joinRangeStartIdx];\n\t\t\tthis._normalizedRanges[joinRangeStartIdx] = joinRange.join(range);\n\t\t} else {\n\t\t\t// First and last element are different - we need to replace the entire range\n\t\t\tconst joinRange = this._normalizedRanges[joinRangeStartIdx].join(this._normalizedRanges[joinRangeEndIdxExclusive - 1]).join(range);\n\t\t\tthis._normalizedRanges.splice(joinRangeStartIdx, joinRangeEndIdxExclusive - joinRangeStartIdx, joinRange);\n\t\t}\n\t}\n\n\tcontains(lineNumber: number): boolean {\n\t\tconst rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber <= lineNumber);\n\t\treturn !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > lineNumber;\n\t}\n\n\tintersects(range: LineRange): boolean {\n\t\tconst rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber < range.endLineNumberExclusive);\n\t\treturn !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > range.startLineNumber;\n\t}\n\n\tgetUnion(other: LineRangeSet): LineRangeSet {\n\t\tif (this._normalizedRanges.length === 0) {\n\t\t\treturn other;\n\t\t}\n\t\tif (other._normalizedRanges.length === 0) {\n\t\t\treturn this;\n\t\t}\n\n\t\tconst result: LineRange[] = [];\n\t\tlet i1 = 0;\n\t\tlet i2 = 0;\n\t\tlet current: LineRange | null = null;\n\t\twhile (i1 < this._normalizedRanges.length || i2 < other._normalizedRanges.length) {\n\t\t\tlet next: LineRange | null = null;\n\t\t\tif (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n\t\t\t\tconst lineRange1 = this._normalizedRanges[i1];\n\t\t\t\tconst lineRange2 = other._normalizedRanges[i2];\n\t\t\t\tif (lineRange1.startLineNumber < lineRange2.startLineNumber) {\n\t\t\t\t\tnext = lineRange1;\n\t\t\t\t\ti1++;\n\t\t\t\t} else {\n\t\t\t\t\tnext = lineRange2;\n\t\t\t\t\ti2++;\n\t\t\t\t}\n\t\t\t} else if (i1 < this._normalizedRanges.length) {\n\t\t\t\tnext = this._normalizedRanges[i1];\n\t\t\t\ti1++;\n\t\t\t} else {\n\t\t\t\tnext = other._normalizedRanges[i2];\n\t\t\t\ti2++;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcurrent = next;\n\t\t\t} else {\n\t\t\t\tif (current.endLineNumberExclusive >= next.startLineNumber) {\n\t\t\t\t\t// merge\n\t\t\t\t\tcurrent = new LineRange(current.startLineNumber, Math.max(current.endLineNumberExclusive, next.endLineNumberExclusive));\n\t\t\t\t} else {\n\t\t\t\t\t// push\n\t\t\t\t\tresult.push(current);\n\t\t\t\t\tcurrent = next;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (current !== null) {\n\t\t\tresult.push(current);\n\t\t}\n\t\treturn new LineRangeSet(result);\n\t}\n\n\t/**\n\t * Subtracts all ranges in this set from `range` and returns the result.\n\t */\n\tsubtractFrom(range: LineRange): LineRangeSet {\n\t\t// idx of first element that touches range or that is after range\n\t\tconst joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n\t\t// idx of element after { last element that touches range or that is before range }\n\t\tconst joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n\n\t\tif (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n\t\t\treturn new LineRangeSet([range]);\n\t\t}\n\n\t\tconst result: LineRange[] = [];\n\t\tlet startLineNumber = range.startLineNumber;\n\t\tfor (let i = joinRangeStartIdx; i < joinRangeEndIdxExclusive; i++) {\n\t\t\tconst r = this._normalizedRanges[i];\n\t\t\tif (r.startLineNumber > startLineNumber) {\n\t\t\t\tresult.push(new LineRange(startLineNumber, r.startLineNumber));\n\t\t\t}\n\t\t\tstartLineNumber = r.endLineNumberExclusive;\n\t\t}\n\t\tif (startLineNumber < range.endLineNumberExclusive) {\n\t\t\tresult.push(new LineRange(startLineNumber, range.endLineNumberExclusive));\n\t\t}\n\n\t\treturn new LineRangeSet(result);\n\t}\n\n\ttoString() {\n\t\treturn this._normalizedRanges.map(r => r.toString()).join(', ');\n\t}\n\n\tgetIntersection(other: LineRangeSet): LineRangeSet {\n\t\tconst result: LineRange[] = [];\n\n\t\tlet i1 = 0;\n\t\tlet i2 = 0;\n\t\twhile (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n\t\t\tconst r1 = this._normalizedRanges[i1];\n\t\t\tconst r2 = other._normalizedRanges[i2];\n\n\t\t\tconst i = r1.intersect(r2);\n\t\t\tif (i && !i.isEmpty) {\n\t\t\t\tresult.push(i);\n\t\t\t}\n\n\t\t\tif (r1.endLineNumberExclusive < r2.endLineNumberExclusive) {\n\t\t\t\ti1++;\n\t\t\t} else {\n\t\t\t\ti2++;\n\t\t\t}\n\t\t}\n\n\t\treturn new LineRangeSet(result);\n\t}\n\n\tgetWithDelta(value: number): LineRangeSet {\n\t\treturn new LineRangeSet(this._normalizedRanges.map(r => r.delta(value)));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum Constants {\n\t/**\n\t * MAX SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMAX_SAFE_SMALL_INTEGER = 1 << 30,\n\n\t/**\n\t * MIN SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMIN_SAFE_SMALL_INTEGER = -(1 << 30),\n\n\t/**\n\t * Max unsigned integer that fits on 8 bits.\n\t */\n\tMAX_UINT_8 = 255, // 2^8 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 16 bits.\n\t */\n\tMAX_UINT_16 = 65535, // 2^16 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 32 bits.\n\t */\n\tMAX_UINT_32 = 4294967295, // 2^32 - 1\n\n\tUNICODE_SUPPLEMENTARY_PLANE_BEGIN = 0x010000\n}\n\nexport function toUint8(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_8) {\n\t\treturn Constants.MAX_UINT_8;\n\t}\n\treturn v | 0;\n}\n\nexport function toUint32(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_32) {\n\t\treturn Constants.MAX_UINT_32;\n\t}\n\treturn v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { arrayInsert } from '../../../base/common/arrays.js';\nimport { toUint32 } from '../../../base/common/uint.js';\n\nexport class PrefixSumComputer {\n\n\t/**\n\t * values[i] is the value at index i\n\t */\n\tprivate values: Uint32Array;\n\n\t/**\n\t * prefixSum[i] = SUM(heights[j]), 0 <= j <= i\n\t */\n\tprivate prefixSum: Uint32Array;\n\n\t/**\n\t * prefixSum[i], 0 <= i <= prefixSumValidIndex can be trusted\n\t */\n\tprivate readonly prefixSumValidIndex: Int32Array;\n\n\tconstructor(values: Uint32Array) {\n\t\tthis.values = values;\n\t\tthis.prefixSum = new Uint32Array(values.length);\n\t\tthis.prefixSumValidIndex = new Int32Array(1);\n\t\tthis.prefixSumValidIndex[0] = -1;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this.values.length;\n\t}\n\n\tpublic insertValues(insertIndex: number, insertValues: Uint32Array): boolean {\n\t\tinsertIndex = toUint32(insertIndex);\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\t\tconst insertValuesLen = insertValues.length;\n\n\t\tif (insertValuesLen === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length + insertValuesLen);\n\t\tthis.values.set(oldValues.subarray(0, insertIndex), 0);\n\t\tthis.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n\t\tthis.values.set(insertValues, insertIndex);\n\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = insertIndex - 1;\n\t\t}\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic setValue(index: number, value: number): boolean {\n\t\tindex = toUint32(index);\n\t\tvalue = toUint32(value);\n\n\t\tif (this.values[index] === value) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.values[index] = value;\n\t\tif (index - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = index - 1;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic removeValues(startIndex: number, count: number): boolean {\n\t\tstartIndex = toUint32(startIndex);\n\t\tcount = toUint32(count);\n\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\n\t\tif (startIndex >= oldValues.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst maxCount = oldValues.length - startIndex;\n\t\tif (count >= maxCount) {\n\t\t\tcount = maxCount;\n\t\t}\n\n\t\tif (count === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length - count);\n\t\tthis.values.set(oldValues.subarray(0, startIndex), 0);\n\t\tthis.values.set(oldValues.subarray(startIndex + count), startIndex);\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (startIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = startIndex - 1;\n\t\t}\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getTotalSum(): number {\n\t\tif (this.values.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._getPrefixSum(this.values.length - 1);\n\t}\n\n\t/**\n\t * Returns the sum of the first `index + 1` many items.\n\t * @returns `SUM(0 <= j <= index, values[j])`.\n\t */\n\tpublic getPrefixSum(index: number): number {\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tindex = toUint32(index);\n\t\treturn this._getPrefixSum(index);\n\t}\n\n\tprivate _getPrefixSum(index: number): number {\n\t\tif (index <= this.prefixSumValidIndex[0]) {\n\t\t\treturn this.prefixSum[index];\n\t\t}\n\n\t\tlet startIndex = this.prefixSumValidIndex[0] + 1;\n\t\tif (startIndex === 0) {\n\t\t\tthis.prefixSum[0] = this.values[0];\n\t\t\tstartIndex++;\n\t\t}\n\n\t\tif (index >= this.values.length) {\n\t\t\tindex = this.values.length - 1;\n\t\t}\n\n\t\tfor (let i = startIndex; i <= index; i++) {\n\t\t\tthis.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n\t\t}\n\t\tthis.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n\t\treturn this.prefixSum[index];\n\t}\n\n\tpublic getIndexOf(sum: number): PrefixSumIndexOfResult {\n\t\tsum = Math.floor(sum);\n\n\t\t// Compute all sums (to get a fully valid prefixSum)\n\t\tthis.getTotalSum();\n\n\t\tlet low = 0;\n\t\tlet high = this.values.length - 1;\n\t\tlet mid = 0;\n\t\tlet midStop = 0;\n\t\tlet midStart = 0;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ((high - low) / 2) | 0;\n\n\t\t\tmidStop = this.prefixSum[mid];\n\t\t\tmidStart = midStop - this.values[mid];\n\n\t\t\tif (sum < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (sum >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn new PrefixSumIndexOfResult(mid, sum - midStart);\n\t}\n}\n\n/**\n * {@link getIndexOf} has an amortized runtime complexity of O(1).\n *\n * ({@link PrefixSumComputer.getIndexOf} is just  O(log n))\n*/\nexport class ConstantTimePrefixSumComputer {\n\tprivate _values: number[];\n\tprivate _isValid: boolean;\n\tprivate _validEndIndex: number;\n\n\t/**\n\t * _prefixSum[i] = SUM(values[j]), 0 <= j <= i\n\t */\n\tprivate _prefixSum: number[];\n\n\t/**\n\t * _indexBySum[sum] = idx => _prefixSum[idx - 1] <= sum < _prefixSum[idx]\n\t*/\n\tprivate _indexBySum: number[];\n\n\tconstructor(values: number[]) {\n\t\tthis._values = values;\n\t\tthis._isValid = false;\n\t\tthis._validEndIndex = -1;\n\t\tthis._prefixSum = [];\n\t\tthis._indexBySum = [];\n\t}\n\n\t/**\n\t * @returns SUM(0 <= j < values.length, values[j])\n\t */\n\tpublic getTotalSum(): number {\n\t\tthis._ensureValid();\n\t\treturn this._indexBySum.length;\n\t}\n\n\t/**\n\t * Returns the sum of the first `count` many items.\n\t * @returns `SUM(0 <= j < count, values[j])`.\n\t */\n\tpublic getPrefixSum(count: number): number {\n\t\tthis._ensureValid();\n\t\tif (count === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._prefixSum[count - 1];\n\t}\n\n\t/**\n\t * @returns `result`, such that `getPrefixSum(result.index) + result.remainder = sum`\n\t */\n\tpublic getIndexOf(sum: number): PrefixSumIndexOfResult {\n\t\tthis._ensureValid();\n\t\tconst idx = this._indexBySum[sum];\n\t\tconst viewLinesAbove = idx > 0 ? this._prefixSum[idx - 1] : 0;\n\t\treturn new PrefixSumIndexOfResult(idx, sum - viewLinesAbove);\n\t}\n\n\tpublic removeValues(start: number, deleteCount: number): void {\n\t\tthis._values.splice(start, deleteCount);\n\t\tthis._invalidate(start);\n\t}\n\n\tpublic insertValues(insertIndex: number, insertArr: number[]): void {\n\t\tthis._values = arrayInsert(this._values, insertIndex, insertArr);\n\t\tthis._invalidate(insertIndex);\n\t}\n\n\tprivate _invalidate(index: number): void {\n\t\tthis._isValid = false;\n\t\tthis._validEndIndex = Math.min(this._validEndIndex, index - 1);\n\t}\n\n\tprivate _ensureValid(): void {\n\t\tif (this._isValid) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = this._validEndIndex + 1, len = this._values.length; i < len; i++) {\n\t\t\tconst value = this._values[i];\n\t\t\tconst sumAbove = i > 0 ? this._prefixSum[i - 1] : 0;\n\n\t\t\tthis._prefixSum[i] = sumAbove + value;\n\t\t\tfor (let j = 0; j < value; j++) {\n\t\t\t\tthis._indexBySum[sumAbove + j] = i;\n\t\t\t}\n\t\t}\n\n\t\t// trim things\n\t\tthis._prefixSum.length = this._values.length;\n\t\tthis._indexBySum.length = this._prefixSum[this._prefixSum.length - 1];\n\n\t\t// mark as valid\n\t\tthis._isValid = true;\n\t\tthis._validEndIndex = this._values.length - 1;\n\t}\n\n\tpublic setValue(index: number, value: number): void {\n\t\tif (this._values[index] === value) {\n\t\t\t// no change\n\t\t\treturn;\n\t\t}\n\t\tthis._values[index] = value;\n\t\tthis._invalidate(index);\n\t}\n}\n\n\nexport class PrefixSumIndexOfResult {\n\t_prefixSumIndexOfResultBrand: void = undefined;\n\n\tconstructor(\n\t\tpublic readonly index: number,\n\t\tpublic readonly remainder: number\n\t) {\n\t\tthis.index = index;\n\t\tthis.remainder = remainder;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { splitLines } from '../../../base/common/strings.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { IRange } from '../core/range.js';\nimport { PrefixSumComputer } from './prefixSumComputer.js';\n\nexport interface IModelContentChange {\n\t/**\n\t * The old range that got replaced.\n\t */\n\treadonly range: IRange;\n\t/**\n\t * The offset of the range that got replaced.\n\t */\n\treadonly rangeOffset: number;\n\t/**\n\t * The length of the range that got replaced.\n\t */\n\treadonly rangeLength: number;\n\t/**\n\t * The new text for the range.\n\t */\n\treadonly text: string;\n}\n\nexport interface IModelChangedEvent {\n\t/**\n\t * The actual changes.\n\t */\n\treadonly changes: IModelContentChange[];\n\t/**\n\t * The (new) end-of-line character.\n\t */\n\treadonly eol: string;\n\t/**\n\t * The new version id the model has transitioned to.\n\t */\n\treadonly versionId: number;\n\t/**\n\t * Flag that indicates that this event was generated while undoing.\n\t */\n\treadonly isUndoing: boolean;\n\t/**\n\t * Flag that indicates that this event was generated while redoing.\n\t */\n\treadonly isRedoing: boolean;\n}\n\nexport interface IMirrorTextModel {\n\treadonly version: number;\n}\n\nexport class MirrorTextModel implements IMirrorTextModel {\n\n\tprotected _uri: URI;\n\tprotected _lines: string[];\n\tprotected _eol: string;\n\tprotected _versionId: number;\n\tprotected _lineStarts: PrefixSumComputer | null;\n\tprivate _cachedTextValue: string | null;\n\n\tconstructor(uri: URI, lines: string[], eol: string, versionId: number) {\n\t\tthis._uri = uri;\n\t\tthis._lines = lines;\n\t\tthis._eol = eol;\n\t\tthis._versionId = versionId;\n\t\tthis._lineStarts = null;\n\t\tthis._cachedTextValue = null;\n\t}\n\n\tdispose(): void {\n\t\tthis._lines.length = 0;\n\t}\n\n\tget version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tgetText(): string {\n\t\tif (this._cachedTextValue === null) {\n\t\t\tthis._cachedTextValue = this._lines.join(this._eol);\n\t\t}\n\t\treturn this._cachedTextValue;\n\t}\n\n\tonEvents(e: IModelChangedEvent): void {\n\t\tif (e.eol && e.eol !== this._eol) {\n\t\t\tthis._eol = e.eol;\n\t\t\tthis._lineStarts = null;\n\t\t}\n\n\t\t// Update my lines\n\t\tconst changes = e.changes;\n\t\tfor (const change of changes) {\n\t\t\tthis._acceptDeleteRange(change.range);\n\t\t\tthis._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n\t\t}\n\n\t\tthis._versionId = e.versionId;\n\t\tthis._cachedTextValue = null;\n\t}\n\n\tprotected _ensureLineStarts(): void {\n\t\tif (!this._lineStarts) {\n\t\t\tconst eolLength = this._eol.length;\n\t\t\tconst linesLength = this._lines.length;\n\t\t\tconst lineStartValues = new Uint32Array(linesLength);\n\t\t\tfor (let i = 0; i < linesLength; i++) {\n\t\t\t\tlineStartValues[i] = this._lines[i].length + eolLength;\n\t\t\t}\n\t\t\tthis._lineStarts = new PrefixSumComputer(lineStartValues);\n\t\t}\n\t}\n\n\t/**\n\t * All changes to a line's text go through this method\n\t */\n\tprivate _setLineText(lineIndex: number, newValue: string): void {\n\t\tthis._lines[lineIndex] = newValue;\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.setValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n\t\t}\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\tif (range.startColumn === range.endColumn) {\n\t\t\t\t// Nothing to delete\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Delete text on the affected line\n\t\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t\t+ this._lines[range.startLineNumber - 1].substring(range.endColumn - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t+ this._lines[range.endLineNumber - 1].substring(range.endColumn - 1)\n\t\t);\n\n\t\t// Delete middle lines\n\t\tthis._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: Position, insertText: string): void {\n\t\tif (insertText.length === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\t\tconst insertLines = splitLines(insertText);\n\t\tif (insertLines.length === 1) {\n\t\t\t// Inserting text on one line\n\t\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t\t+ insertLines[0]\n\t\t\t\t+ this._lines[position.lineNumber - 1].substring(position.column - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Append overflowing text from first line to the end of text to insert\n\t\tinsertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n\n\t\t// Delete overflowing text from first line and insert text on first line\n\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t+ insertLines[0]\n\t\t);\n\n\t\t// Insert new lines & store lengths\n\t\tconst newLengths = new Uint32Array(insertLines.length - 1);\n\t\tfor (let i = 1; i < insertLines.length; i++) {\n\t\t\tthis._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n\t\t\tnewLengths[i - 1] = insertLines[i].length + this._eol.length;\n\t\t}\n\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.insertValues(position.lineNumber, newLengths);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from '../../../../base/common/charCode.js';\n\nexport const enum StringEOL {\n\tUnknown = 0,\n\tInvalid = 3,\n\tLF = 1,\n\tCRLF = 2\n}\n\nexport function countEOL(text: string): [number, number, number, StringEOL] {\n\tlet eolCount = 0;\n\tlet firstLineLength = 0;\n\tlet lastLineStart = 0;\n\tlet eol: StringEOL = StringEOL.Unknown;\n\tfor (let i = 0, len = text.length; i < len; i++) {\n\t\tconst chr = text.charCodeAt(i);\n\n\t\tif (chr === CharCode.CarriageReturn) {\n\t\t\tif (eolCount === 0) {\n\t\t\t\tfirstLineLength = i;\n\t\t\t}\n\t\t\teolCount++;\n\t\t\tif (i + 1 < len && text.charCodeAt(i + 1) === CharCode.LineFeed) {\n\t\t\t\t// \\r\\n... case\n\t\t\t\teol |= StringEOL.CRLF;\n\t\t\t\ti++; // skip \\n\n\t\t\t} else {\n\t\t\t\t// \\r... case\n\t\t\t\teol |= StringEOL.Invalid;\n\t\t\t}\n\t\t\tlastLineStart = i + 1;\n\t\t} else if (chr === CharCode.LineFeed) {\n\t\t\t// \\n... case\n\t\t\teol |= StringEOL.LF;\n\t\t\tif (eolCount === 0) {\n\t\t\t\tfirstLineLength = i;\n\t\t\t}\n\t\t\teolCount++;\n\t\t\tlastLineStart = i + 1;\n\t\t}\n\t}\n\tif (eolCount === 0) {\n\t\tfirstLineLength = text.length;\n\t}\n\treturn [eolCount, firstLineLength, text.length - lastLineStart, eol];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ThemeIcon } from './themables.js';\nimport { isString } from './types.js';\n\n\nconst _codiconFontCharacters: { [id: string]: number } = Object.create(null);\n\nexport function register(id: string, fontCharacter: number | string): ThemeIcon {\n\tif (isString(fontCharacter)) {\n\t\tconst val = _codiconFontCharacters[fontCharacter];\n\t\tif (val === undefined) {\n\t\t\tthrow new Error(`${id} references an unknown codicon: ${fontCharacter}`);\n\t\t}\n\t\tfontCharacter = val;\n\t}\n\t_codiconFontCharacters[id] = fontCharacter;\n\treturn { id };\n}\n\n/**\n * Only to be used by the iconRegistry.\n */\nexport function getCodiconFontCharacters(): { [id: string]: number } {\n\treturn _codiconFontCharacters;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { register } from './codiconsUtil.js';\n\n\n// This file is automatically generated by (microsoft/vscode-codicons)/scripts/export-to-ts.js\n// Please don't edit it, as your changes will be overwritten.\n// Instead, add mappings to codiconsDerived in codicons.ts.\nexport const codiconsLibrary = {\n\tadd: register('add', 0xea60),\n\tplus: register('plus', 0xea60),\n\tgistNew: register('gist-new', 0xea60),\n\trepoCreate: register('repo-create', 0xea60),\n\tlightbulb: register('lightbulb', 0xea61),\n\tlightBulb: register('light-bulb', 0xea61),\n\trepo: register('repo', 0xea62),\n\trepoDelete: register('repo-delete', 0xea62),\n\tgistFork: register('gist-fork', 0xea63),\n\trepoForked: register('repo-forked', 0xea63),\n\tgitPullRequest: register('git-pull-request', 0xea64),\n\tgitPullRequestAbandoned: register('git-pull-request-abandoned', 0xea64),\n\trecordKeys: register('record-keys', 0xea65),\n\tkeyboard: register('keyboard', 0xea65),\n\ttag: register('tag', 0xea66),\n\tgitPullRequestLabel: register('git-pull-request-label', 0xea66),\n\ttagAdd: register('tag-add', 0xea66),\n\ttagRemove: register('tag-remove', 0xea66),\n\tperson: register('person', 0xea67),\n\tpersonFollow: register('person-follow', 0xea67),\n\tpersonOutline: register('person-outline', 0xea67),\n\tpersonFilled: register('person-filled', 0xea67),\n\tgitBranch: register('git-branch', 0xea68),\n\tgitBranchCreate: register('git-branch-create', 0xea68),\n\tgitBranchDelete: register('git-branch-delete', 0xea68),\n\tsourceControl: register('source-control', 0xea68),\n\tmirror: register('mirror', 0xea69),\n\tmirrorPublic: register('mirror-public', 0xea69),\n\tstar: register('star', 0xea6a),\n\tstarAdd: register('star-add', 0xea6a),\n\tstarDelete: register('star-delete', 0xea6a),\n\tstarEmpty: register('star-empty', 0xea6a),\n\tcomment: register('comment', 0xea6b),\n\tcommentAdd: register('comment-add', 0xea6b),\n\talert: register('alert', 0xea6c),\n\twarning: register('warning', 0xea6c),\n\tsearch: register('search', 0xea6d),\n\tsearchSave: register('search-save', 0xea6d),\n\tlogOut: register('log-out', 0xea6e),\n\tsignOut: register('sign-out', 0xea6e),\n\tlogIn: register('log-in', 0xea6f),\n\tsignIn: register('sign-in', 0xea6f),\n\teye: register('eye', 0xea70),\n\teyeUnwatch: register('eye-unwatch', 0xea70),\n\teyeWatch: register('eye-watch', 0xea70),\n\tcircleFilled: register('circle-filled', 0xea71),\n\tprimitiveDot: register('primitive-dot', 0xea71),\n\tcloseDirty: register('close-dirty', 0xea71),\n\tdebugBreakpoint: register('debug-breakpoint', 0xea71),\n\tdebugBreakpointDisabled: register('debug-breakpoint-disabled', 0xea71),\n\tdebugHint: register('debug-hint', 0xea71),\n\tterminalDecorationSuccess: register('terminal-decoration-success', 0xea71),\n\tprimitiveSquare: register('primitive-square', 0xea72),\n\tedit: register('edit', 0xea73),\n\tpencil: register('pencil', 0xea73),\n\tinfo: register('info', 0xea74),\n\tissueOpened: register('issue-opened', 0xea74),\n\tgistPrivate: register('gist-private', 0xea75),\n\tgitForkPrivate: register('git-fork-private', 0xea75),\n\tlock: register('lock', 0xea75),\n\tmirrorPrivate: register('mirror-private', 0xea75),\n\tclose: register('close', 0xea76),\n\tremoveClose: register('remove-close', 0xea76),\n\tx: register('x', 0xea76),\n\trepoSync: register('repo-sync', 0xea77),\n\tsync: register('sync', 0xea77),\n\tclone: register('clone', 0xea78),\n\tdesktopDownload: register('desktop-download', 0xea78),\n\tbeaker: register('beaker', 0xea79),\n\tmicroscope: register('microscope', 0xea79),\n\tvm: register('vm', 0xea7a),\n\tdeviceDesktop: register('device-desktop', 0xea7a),\n\tfile: register('file', 0xea7b),\n\tfileText: register('file-text', 0xea7b),\n\tmore: register('more', 0xea7c),\n\tellipsis: register('ellipsis', 0xea7c),\n\tkebabHorizontal: register('kebab-horizontal', 0xea7c),\n\tmailReply: register('mail-reply', 0xea7d),\n\treply: register('reply', 0xea7d),\n\torganization: register('organization', 0xea7e),\n\torganizationFilled: register('organization-filled', 0xea7e),\n\torganizationOutline: register('organization-outline', 0xea7e),\n\tnewFile: register('new-file', 0xea7f),\n\tfileAdd: register('file-add', 0xea7f),\n\tnewFolder: register('new-folder', 0xea80),\n\tfileDirectoryCreate: register('file-directory-create', 0xea80),\n\ttrash: register('trash', 0xea81),\n\ttrashcan: register('trashcan', 0xea81),\n\thistory: register('history', 0xea82),\n\tclock: register('clock', 0xea82),\n\tfolder: register('folder', 0xea83),\n\tfileDirectory: register('file-directory', 0xea83),\n\tsymbolFolder: register('symbol-folder', 0xea83),\n\tlogoGithub: register('logo-github', 0xea84),\n\tmarkGithub: register('mark-github', 0xea84),\n\tgithub: register('github', 0xea84),\n\tterminal: register('terminal', 0xea85),\n\tconsole: register('console', 0xea85),\n\trepl: register('repl', 0xea85),\n\tzap: register('zap', 0xea86),\n\tsymbolEvent: register('symbol-event', 0xea86),\n\terror: register('error', 0xea87),\n\tstop: register('stop', 0xea87),\n\tvariable: register('variable', 0xea88),\n\tsymbolVariable: register('symbol-variable', 0xea88),\n\tarray: register('array', 0xea8a),\n\tsymbolArray: register('symbol-array', 0xea8a),\n\tsymbolModule: register('symbol-module', 0xea8b),\n\tsymbolPackage: register('symbol-package', 0xea8b),\n\tsymbolNamespace: register('symbol-namespace', 0xea8b),\n\tsymbolObject: register('symbol-object', 0xea8b),\n\tsymbolMethod: register('symbol-method', 0xea8c),\n\tsymbolFunction: register('symbol-function', 0xea8c),\n\tsymbolConstructor: register('symbol-constructor', 0xea8c),\n\tsymbolBoolean: register('symbol-boolean', 0xea8f),\n\tsymbolNull: register('symbol-null', 0xea8f),\n\tsymbolNumeric: register('symbol-numeric', 0xea90),\n\tsymbolNumber: register('symbol-number', 0xea90),\n\tsymbolStructure: register('symbol-structure', 0xea91),\n\tsymbolStruct: register('symbol-struct', 0xea91),\n\tsymbolParameter: register('symbol-parameter', 0xea92),\n\tsymbolTypeParameter: register('symbol-type-parameter', 0xea92),\n\tsymbolKey: register('symbol-key', 0xea93),\n\tsymbolText: register('symbol-text', 0xea93),\n\tsymbolReference: register('symbol-reference', 0xea94),\n\tgoToFile: register('go-to-file', 0xea94),\n\tsymbolEnum: register('symbol-enum', 0xea95),\n\tsymbolValue: register('symbol-value', 0xea95),\n\tsymbolRuler: register('symbol-ruler', 0xea96),\n\tsymbolUnit: register('symbol-unit', 0xea96),\n\tactivateBreakpoints: register('activate-breakpoints', 0xea97),\n\tarchive: register('archive', 0xea98),\n\tarrowBoth: register('arrow-both', 0xea99),\n\tarrowDown: register('arrow-down', 0xea9a),\n\tarrowLeft: register('arrow-left', 0xea9b),\n\tarrowRight: register('arrow-right', 0xea9c),\n\tarrowSmallDown: register('arrow-small-down', 0xea9d),\n\tarrowSmallLeft: register('arrow-small-left', 0xea9e),\n\tarrowSmallRight: register('arrow-small-right', 0xea9f),\n\tarrowSmallUp: register('arrow-small-up', 0xeaa0),\n\tarrowUp: register('arrow-up', 0xeaa1),\n\tbell: register('bell', 0xeaa2),\n\tbold: register('bold', 0xeaa3),\n\tbook: register('book', 0xeaa4),\n\tbookmark: register('bookmark', 0xeaa5),\n\tdebugBreakpointConditionalUnverified: register('debug-breakpoint-conditional-unverified', 0xeaa6),\n\tdebugBreakpointConditional: register('debug-breakpoint-conditional', 0xeaa7),\n\tdebugBreakpointConditionalDisabled: register('debug-breakpoint-conditional-disabled', 0xeaa7),\n\tdebugBreakpointDataUnverified: register('debug-breakpoint-data-unverified', 0xeaa8),\n\tdebugBreakpointData: register('debug-breakpoint-data', 0xeaa9),\n\tdebugBreakpointDataDisabled: register('debug-breakpoint-data-disabled', 0xeaa9),\n\tdebugBreakpointLogUnverified: register('debug-breakpoint-log-unverified', 0xeaaa),\n\tdebugBreakpointLog: register('debug-breakpoint-log', 0xeaab),\n\tdebugBreakpointLogDisabled: register('debug-breakpoint-log-disabled', 0xeaab),\n\tbriefcase: register('briefcase', 0xeaac),\n\tbroadcast: register('broadcast', 0xeaad),\n\tbrowser: register('browser', 0xeaae),\n\tbug: register('bug', 0xeaaf),\n\tcalendar: register('calendar', 0xeab0),\n\tcaseSensitive: register('case-sensitive', 0xeab1),\n\tcheck: register('check', 0xeab2),\n\tchecklist: register('checklist', 0xeab3),\n\tchevronDown: register('chevron-down', 0xeab4),\n\tchevronLeft: register('chevron-left', 0xeab5),\n\tchevronRight: register('chevron-right', 0xeab6),\n\tchevronUp: register('chevron-up', 0xeab7),\n\tchromeClose: register('chrome-close', 0xeab8),\n\tchromeMaximize: register('chrome-maximize', 0xeab9),\n\tchromeMinimize: register('chrome-minimize', 0xeaba),\n\tchromeRestore: register('chrome-restore', 0xeabb),\n\tcircleOutline: register('circle-outline', 0xeabc),\n\tcircle: register('circle', 0xeabc),\n\tdebugBreakpointUnverified: register('debug-breakpoint-unverified', 0xeabc),\n\tterminalDecorationIncomplete: register('terminal-decoration-incomplete', 0xeabc),\n\tcircleSlash: register('circle-slash', 0xeabd),\n\tcircuitBoard: register('circuit-board', 0xeabe),\n\tclearAll: register('clear-all', 0xeabf),\n\tclippy: register('clippy', 0xeac0),\n\tcloseAll: register('close-all', 0xeac1),\n\tcloudDownload: register('cloud-download', 0xeac2),\n\tcloudUpload: register('cloud-upload', 0xeac3),\n\tcode: register('code', 0xeac4),\n\tcollapseAll: register('collapse-all', 0xeac5),\n\tcolorMode: register('color-mode', 0xeac6),\n\tcommentDiscussion: register('comment-discussion', 0xeac7),\n\tcreditCard: register('credit-card', 0xeac9),\n\tdash: register('dash', 0xeacc),\n\tdashboard: register('dashboard', 0xeacd),\n\tdatabase: register('database', 0xeace),\n\tdebugContinue: register('debug-continue', 0xeacf),\n\tdebugDisconnect: register('debug-disconnect', 0xead0),\n\tdebugPause: register('debug-pause', 0xead1),\n\tdebugRestart: register('debug-restart', 0xead2),\n\tdebugStart: register('debug-start', 0xead3),\n\tdebugStepInto: register('debug-step-into', 0xead4),\n\tdebugStepOut: register('debug-step-out', 0xead5),\n\tdebugStepOver: register('debug-step-over', 0xead6),\n\tdebugStop: register('debug-stop', 0xead7),\n\tdebug: register('debug', 0xead8),\n\tdeviceCameraVideo: register('device-camera-video', 0xead9),\n\tdeviceCamera: register('device-camera', 0xeada),\n\tdeviceMobile: register('device-mobile', 0xeadb),\n\tdiffAdded: register('diff-added', 0xeadc),\n\tdiffIgnored: register('diff-ignored', 0xeadd),\n\tdiffModified: register('diff-modified', 0xeade),\n\tdiffRemoved: register('diff-removed', 0xeadf),\n\tdiffRenamed: register('diff-renamed', 0xeae0),\n\tdiff: register('diff', 0xeae1),\n\tdiffSidebyside: register('diff-sidebyside', 0xeae1),\n\tdiscard: register('discard', 0xeae2),\n\teditorLayout: register('editor-layout', 0xeae3),\n\temptyWindow: register('empty-window', 0xeae4),\n\texclude: register('exclude', 0xeae5),\n\textensions: register('extensions', 0xeae6),\n\teyeClosed: register('eye-closed', 0xeae7),\n\tfileBinary: register('file-binary', 0xeae8),\n\tfileCode: register('file-code', 0xeae9),\n\tfileMedia: register('file-media', 0xeaea),\n\tfilePdf: register('file-pdf', 0xeaeb),\n\tfileSubmodule: register('file-submodule', 0xeaec),\n\tfileSymlinkDirectory: register('file-symlink-directory', 0xeaed),\n\tfileSymlinkFile: register('file-symlink-file', 0xeaee),\n\tfileZip: register('file-zip', 0xeaef),\n\tfiles: register('files', 0xeaf0),\n\tfilter: register('filter', 0xeaf1),\n\tflame: register('flame', 0xeaf2),\n\tfoldDown: register('fold-down', 0xeaf3),\n\tfoldUp: register('fold-up', 0xeaf4),\n\tfold: register('fold', 0xeaf5),\n\tfolderActive: register('folder-active', 0xeaf6),\n\tfolderOpened: register('folder-opened', 0xeaf7),\n\tgear: register('gear', 0xeaf8),\n\tgift: register('gift', 0xeaf9),\n\tgistSecret: register('gist-secret', 0xeafa),\n\tgist: register('gist', 0xeafb),\n\tgitCommit: register('git-commit', 0xeafc),\n\tgitCompare: register('git-compare', 0xeafd),\n\tcompareChanges: register('compare-changes', 0xeafd),\n\tgitMerge: register('git-merge', 0xeafe),\n\tgithubAction: register('github-action', 0xeaff),\n\tgithubAlt: register('github-alt', 0xeb00),\n\tglobe: register('globe', 0xeb01),\n\tgrabber: register('grabber', 0xeb02),\n\tgraph: register('graph', 0xeb03),\n\tgripper: register('gripper', 0xeb04),\n\theart: register('heart', 0xeb05),\n\thome: register('home', 0xeb06),\n\thorizontalRule: register('horizontal-rule', 0xeb07),\n\thubot: register('hubot', 0xeb08),\n\tinbox: register('inbox', 0xeb09),\n\tissueReopened: register('issue-reopened', 0xeb0b),\n\tissues: register('issues', 0xeb0c),\n\titalic: register('italic', 0xeb0d),\n\tjersey: register('jersey', 0xeb0e),\n\tjson: register('json', 0xeb0f),\n\tkebabVertical: register('kebab-vertical', 0xeb10),\n\tkey: register('key', 0xeb11),\n\tlaw: register('law', 0xeb12),\n\tlightbulbAutofix: register('lightbulb-autofix', 0xeb13),\n\tlinkExternal: register('link-external', 0xeb14),\n\tlink: register('link', 0xeb15),\n\tlistOrdered: register('list-ordered', 0xeb16),\n\tlistUnordered: register('list-unordered', 0xeb17),\n\tliveShare: register('live-share', 0xeb18),\n\tloading: register('loading', 0xeb19),\n\tlocation: register('location', 0xeb1a),\n\tmailRead: register('mail-read', 0xeb1b),\n\tmail: register('mail', 0xeb1c),\n\tmarkdown: register('markdown', 0xeb1d),\n\tmegaphone: register('megaphone', 0xeb1e),\n\tmention: register('mention', 0xeb1f),\n\tmilestone: register('milestone', 0xeb20),\n\tgitPullRequestMilestone: register('git-pull-request-milestone', 0xeb20),\n\tmortarBoard: register('mortar-board', 0xeb21),\n\tmove: register('move', 0xeb22),\n\tmultipleWindows: register('multiple-windows', 0xeb23),\n\tmute: register('mute', 0xeb24),\n\tnoNewline: register('no-newline', 0xeb25),\n\tnote: register('note', 0xeb26),\n\toctoface: register('octoface', 0xeb27),\n\topenPreview: register('open-preview', 0xeb28),\n\tpackage: register('package', 0xeb29),\n\tpaintcan: register('paintcan', 0xeb2a),\n\tpin: register('pin', 0xeb2b),\n\tplay: register('play', 0xeb2c),\n\trun: register('run', 0xeb2c),\n\tplug: register('plug', 0xeb2d),\n\tpreserveCase: register('preserve-case', 0xeb2e),\n\tpreview: register('preview', 0xeb2f),\n\tproject: register('project', 0xeb30),\n\tpulse: register('pulse', 0xeb31),\n\tquestion: register('question', 0xeb32),\n\tquote: register('quote', 0xeb33),\n\tradioTower: register('radio-tower', 0xeb34),\n\treactions: register('reactions', 0xeb35),\n\treferences: register('references', 0xeb36),\n\trefresh: register('refresh', 0xeb37),\n\tregex: register('regex', 0xeb38),\n\tremoteExplorer: register('remote-explorer', 0xeb39),\n\tremote: register('remote', 0xeb3a),\n\tremove: register('remove', 0xeb3b),\n\treplaceAll: register('replace-all', 0xeb3c),\n\treplace: register('replace', 0xeb3d),\n\trepoClone: register('repo-clone', 0xeb3e),\n\trepoForcePush: register('repo-force-push', 0xeb3f),\n\trepoPull: register('repo-pull', 0xeb40),\n\trepoPush: register('repo-push', 0xeb41),\n\treport: register('report', 0xeb42),\n\trequestChanges: register('request-changes', 0xeb43),\n\trocket: register('rocket', 0xeb44),\n\trootFolderOpened: register('root-folder-opened', 0xeb45),\n\trootFolder: register('root-folder', 0xeb46),\n\trss: register('rss', 0xeb47),\n\truby: register('ruby', 0xeb48),\n\tsaveAll: register('save-all', 0xeb49),\n\tsaveAs: register('save-as', 0xeb4a),\n\tsave: register('save', 0xeb4b),\n\tscreenFull: register('screen-full', 0xeb4c),\n\tscreenNormal: register('screen-normal', 0xeb4d),\n\tsearchStop: register('search-stop', 0xeb4e),\n\tserver: register('server', 0xeb50),\n\tsettingsGear: register('settings-gear', 0xeb51),\n\tsettings: register('settings', 0xeb52),\n\tshield: register('shield', 0xeb53),\n\tsmiley: register('smiley', 0xeb54),\n\tsortPrecedence: register('sort-precedence', 0xeb55),\n\tsplitHorizontal: register('split-horizontal', 0xeb56),\n\tsplitVertical: register('split-vertical', 0xeb57),\n\tsquirrel: register('squirrel', 0xeb58),\n\tstarFull: register('star-full', 0xeb59),\n\tstarHalf: register('star-half', 0xeb5a),\n\tsymbolClass: register('symbol-class', 0xeb5b),\n\tsymbolColor: register('symbol-color', 0xeb5c),\n\tsymbolConstant: register('symbol-constant', 0xeb5d),\n\tsymbolEnumMember: register('symbol-enum-member', 0xeb5e),\n\tsymbolField: register('symbol-field', 0xeb5f),\n\tsymbolFile: register('symbol-file', 0xeb60),\n\tsymbolInterface: register('symbol-interface', 0xeb61),\n\tsymbolKeyword: register('symbol-keyword', 0xeb62),\n\tsymbolMisc: register('symbol-misc', 0xeb63),\n\tsymbolOperator: register('symbol-operator', 0xeb64),\n\tsymbolProperty: register('symbol-property', 0xeb65),\n\twrench: register('wrench', 0xeb65),\n\twrenchSubaction: register('wrench-subaction', 0xeb65),\n\tsymbolSnippet: register('symbol-snippet', 0xeb66),\n\ttasklist: register('tasklist', 0xeb67),\n\ttelescope: register('telescope', 0xeb68),\n\ttextSize: register('text-size', 0xeb69),\n\tthreeBars: register('three-bars', 0xeb6a),\n\tthumbsdown: register('thumbsdown', 0xeb6b),\n\tthumbsup: register('thumbsup', 0xeb6c),\n\ttools: register('tools', 0xeb6d),\n\ttriangleDown: register('triangle-down', 0xeb6e),\n\ttriangleLeft: register('triangle-left', 0xeb6f),\n\ttriangleRight: register('triangle-right', 0xeb70),\n\ttriangleUp: register('triangle-up', 0xeb71),\n\ttwitter: register('twitter', 0xeb72),\n\tunfold: register('unfold', 0xeb73),\n\tunlock: register('unlock', 0xeb74),\n\tunmute: register('unmute', 0xeb75),\n\tunverified: register('unverified', 0xeb76),\n\tverified: register('verified', 0xeb77),\n\tversions: register('versions', 0xeb78),\n\tvmActive: register('vm-active', 0xeb79),\n\tvmOutline: register('vm-outline', 0xeb7a),\n\tvmRunning: register('vm-running', 0xeb7b),\n\twatch: register('watch', 0xeb7c),\n\twhitespace: register('whitespace', 0xeb7d),\n\twholeWord: register('whole-word', 0xeb7e),\n\twindow: register('window', 0xeb7f),\n\twordWrap: register('word-wrap', 0xeb80),\n\tzoomIn: register('zoom-in', 0xeb81),\n\tzoomOut: register('zoom-out', 0xeb82),\n\tlistFilter: register('list-filter', 0xeb83),\n\tlistFlat: register('list-flat', 0xeb84),\n\tlistSelection: register('list-selection', 0xeb85),\n\tselection: register('selection', 0xeb85),\n\tlistTree: register('list-tree', 0xeb86),\n\tdebugBreakpointFunctionUnverified: register('debug-breakpoint-function-unverified', 0xeb87),\n\tdebugBreakpointFunction: register('debug-breakpoint-function', 0xeb88),\n\tdebugBreakpointFunctionDisabled: register('debug-breakpoint-function-disabled', 0xeb88),\n\tdebugStackframeActive: register('debug-stackframe-active', 0xeb89),\n\tcircleSmallFilled: register('circle-small-filled', 0xeb8a),\n\tdebugStackframeDot: register('debug-stackframe-dot', 0xeb8a),\n\tterminalDecorationMark: register('terminal-decoration-mark', 0xeb8a),\n\tdebugStackframe: register('debug-stackframe', 0xeb8b),\n\tdebugStackframeFocused: register('debug-stackframe-focused', 0xeb8b),\n\tdebugBreakpointUnsupported: register('debug-breakpoint-unsupported', 0xeb8c),\n\tsymbolString: register('symbol-string', 0xeb8d),\n\tdebugReverseContinue: register('debug-reverse-continue', 0xeb8e),\n\tdebugStepBack: register('debug-step-back', 0xeb8f),\n\tdebugRestartFrame: register('debug-restart-frame', 0xeb90),\n\tdebugAlt: register('debug-alt', 0xeb91),\n\tcallIncoming: register('call-incoming', 0xeb92),\n\tcallOutgoing: register('call-outgoing', 0xeb93),\n\tmenu: register('menu', 0xeb94),\n\texpandAll: register('expand-all', 0xeb95),\n\tfeedback: register('feedback', 0xeb96),\n\tgitPullRequestReviewer: register('git-pull-request-reviewer', 0xeb96),\n\tgroupByRefType: register('group-by-ref-type', 0xeb97),\n\tungroupByRefType: register('ungroup-by-ref-type', 0xeb98),\n\taccount: register('account', 0xeb99),\n\tgitPullRequestAssignee: register('git-pull-request-assignee', 0xeb99),\n\tbellDot: register('bell-dot', 0xeb9a),\n\tdebugConsole: register('debug-console', 0xeb9b),\n\tlibrary: register('library', 0xeb9c),\n\toutput: register('output', 0xeb9d),\n\trunAll: register('run-all', 0xeb9e),\n\tsyncIgnored: register('sync-ignored', 0xeb9f),\n\tpinned: register('pinned', 0xeba0),\n\tgithubInverted: register('github-inverted', 0xeba1),\n\tserverProcess: register('server-process', 0xeba2),\n\tserverEnvironment: register('server-environment', 0xeba3),\n\tpass: register('pass', 0xeba4),\n\tissueClosed: register('issue-closed', 0xeba4),\n\tstopCircle: register('stop-circle', 0xeba5),\n\tplayCircle: register('play-circle', 0xeba6),\n\trecord: register('record', 0xeba7),\n\tdebugAltSmall: register('debug-alt-small', 0xeba8),\n\tvmConnect: register('vm-connect', 0xeba9),\n\tcloud: register('cloud', 0xebaa),\n\tmerge: register('merge', 0xebab),\n\texport: register('export', 0xebac),\n\tgraphLeft: register('graph-left', 0xebad),\n\tmagnet: register('magnet', 0xebae),\n\tnotebook: register('notebook', 0xebaf),\n\tredo: register('redo', 0xebb0),\n\tcheckAll: register('check-all', 0xebb1),\n\tpinnedDirty: register('pinned-dirty', 0xebb2),\n\tpassFilled: register('pass-filled', 0xebb3),\n\tcircleLargeFilled: register('circle-large-filled', 0xebb4),\n\tcircleLarge: register('circle-large', 0xebb5),\n\tcircleLargeOutline: register('circle-large-outline', 0xebb5),\n\tcombine: register('combine', 0xebb6),\n\tgather: register('gather', 0xebb6),\n\ttable: register('table', 0xebb7),\n\tvariableGroup: register('variable-group', 0xebb8),\n\ttypeHierarchy: register('type-hierarchy', 0xebb9),\n\ttypeHierarchySub: register('type-hierarchy-sub', 0xebba),\n\ttypeHierarchySuper: register('type-hierarchy-super', 0xebbb),\n\tgitPullRequestCreate: register('git-pull-request-create', 0xebbc),\n\trunAbove: register('run-above', 0xebbd),\n\trunBelow: register('run-below', 0xebbe),\n\tnotebookTemplate: register('notebook-template', 0xebbf),\n\tdebugRerun: register('debug-rerun', 0xebc0),\n\tworkspaceTrusted: register('workspace-trusted', 0xebc1),\n\tworkspaceUntrusted: register('workspace-untrusted', 0xebc2),\n\tworkspaceUnknown: register('workspace-unknown', 0xebc3),\n\tterminalCmd: register('terminal-cmd', 0xebc4),\n\tterminalDebian: register('terminal-debian', 0xebc5),\n\tterminalLinux: register('terminal-linux', 0xebc6),\n\tterminalPowershell: register('terminal-powershell', 0xebc7),\n\tterminalTmux: register('terminal-tmux', 0xebc8),\n\tterminalUbuntu: register('terminal-ubuntu', 0xebc9),\n\tterminalBash: register('terminal-bash', 0xebca),\n\tarrowSwap: register('arrow-swap', 0xebcb),\n\tcopy: register('copy', 0xebcc),\n\tpersonAdd: register('person-add', 0xebcd),\n\tfilterFilled: register('filter-filled', 0xebce),\n\twand: register('wand', 0xebcf),\n\tdebugLineByLine: register('debug-line-by-line', 0xebd0),\n\tinspect: register('inspect', 0xebd1),\n\tlayers: register('layers', 0xebd2),\n\tlayersDot: register('layers-dot', 0xebd3),\n\tlayersActive: register('layers-active', 0xebd4),\n\tcompass: register('compass', 0xebd5),\n\tcompassDot: register('compass-dot', 0xebd6),\n\tcompassActive: register('compass-active', 0xebd7),\n\tazure: register('azure', 0xebd8),\n\tissueDraft: register('issue-draft', 0xebd9),\n\tgitPullRequestClosed: register('git-pull-request-closed', 0xebda),\n\tgitPullRequestDraft: register('git-pull-request-draft', 0xebdb),\n\tdebugAll: register('debug-all', 0xebdc),\n\tdebugCoverage: register('debug-coverage', 0xebdd),\n\trunErrors: register('run-errors', 0xebde),\n\tfolderLibrary: register('folder-library', 0xebdf),\n\tdebugContinueSmall: register('debug-continue-small', 0xebe0),\n\tbeakerStop: register('beaker-stop', 0xebe1),\n\tgraphLine: register('graph-line', 0xebe2),\n\tgraphScatter: register('graph-scatter', 0xebe3),\n\tpieChart: register('pie-chart', 0xebe4),\n\tbracket: register('bracket', 0xeb0f),\n\tbracketDot: register('bracket-dot', 0xebe5),\n\tbracketError: register('bracket-error', 0xebe6),\n\tlockSmall: register('lock-small', 0xebe7),\n\tazureDevops: register('azure-devops', 0xebe8),\n\tverifiedFilled: register('verified-filled', 0xebe9),\n\tnewline: register('newline', 0xebea),\n\tlayout: register('layout', 0xebeb),\n\tlayoutActivitybarLeft: register('layout-activitybar-left', 0xebec),\n\tlayoutActivitybarRight: register('layout-activitybar-right', 0xebed),\n\tlayoutPanelLeft: register('layout-panel-left', 0xebee),\n\tlayoutPanelCenter: register('layout-panel-center', 0xebef),\n\tlayoutPanelJustify: register('layout-panel-justify', 0xebf0),\n\tlayoutPanelRight: register('layout-panel-right', 0xebf1),\n\tlayoutPanel: register('layout-panel', 0xebf2),\n\tlayoutSidebarLeft: register('layout-sidebar-left', 0xebf3),\n\tlayoutSidebarRight: register('layout-sidebar-right', 0xebf4),\n\tlayoutStatusbar: register('layout-statusbar', 0xebf5),\n\tlayoutMenubar: register('layout-menubar', 0xebf6),\n\tlayoutCentered: register('layout-centered', 0xebf7),\n\ttarget: register('target', 0xebf8),\n\tindent: register('indent', 0xebf9),\n\trecordSmall: register('record-small', 0xebfa),\n\terrorSmall: register('error-small', 0xebfb),\n\tterminalDecorationError: register('terminal-decoration-error', 0xebfb),\n\tarrowCircleDown: register('arrow-circle-down', 0xebfc),\n\tarrowCircleLeft: register('arrow-circle-left', 0xebfd),\n\tarrowCircleRight: register('arrow-circle-right', 0xebfe),\n\tarrowCircleUp: register('arrow-circle-up', 0xebff),\n\tlayoutSidebarRightOff: register('layout-sidebar-right-off', 0xec00),\n\tlayoutPanelOff: register('layout-panel-off', 0xec01),\n\tlayoutSidebarLeftOff: register('layout-sidebar-left-off', 0xec02),\n\tblank: register('blank', 0xec03),\n\theartFilled: register('heart-filled', 0xec04),\n\tmap: register('map', 0xec05),\n\tmapHorizontal: register('map-horizontal', 0xec05),\n\tfoldHorizontal: register('fold-horizontal', 0xec05),\n\tmapFilled: register('map-filled', 0xec06),\n\tmapHorizontalFilled: register('map-horizontal-filled', 0xec06),\n\tfoldHorizontalFilled: register('fold-horizontal-filled', 0xec06),\n\tcircleSmall: register('circle-small', 0xec07),\n\tbellSlash: register('bell-slash', 0xec08),\n\tbellSlashDot: register('bell-slash-dot', 0xec09),\n\tcommentUnresolved: register('comment-unresolved', 0xec0a),\n\tgitPullRequestGoToChanges: register('git-pull-request-go-to-changes', 0xec0b),\n\tgitPullRequestNewChanges: register('git-pull-request-new-changes', 0xec0c),\n\tsearchFuzzy: register('search-fuzzy', 0xec0d),\n\tcommentDraft: register('comment-draft', 0xec0e),\n\tsend: register('send', 0xec0f),\n\tsparkle: register('sparkle', 0xec10),\n\tinsert: register('insert', 0xec11),\n\tmic: register('mic', 0xec12),\n\tthumbsdownFilled: register('thumbsdown-filled', 0xec13),\n\tthumbsupFilled: register('thumbsup-filled', 0xec14),\n\tcoffee: register('coffee', 0xec15),\n\tsnake: register('snake', 0xec16),\n\tgame: register('game', 0xec17),\n\tvr: register('vr', 0xec18),\n\tchip: register('chip', 0xec19),\n\tpiano: register('piano', 0xec1a),\n\tmusic: register('music', 0xec1b),\n\tmicFilled: register('mic-filled', 0xec1c),\n\trepoFetch: register('repo-fetch', 0xec1d),\n\tcopilot: register('copilot', 0xec1e),\n\tlightbulbSparkle: register('lightbulb-sparkle', 0xec1f),\n\trobot: register('robot', 0xec20),\n\tsparkleFilled: register('sparkle-filled', 0xec21),\n\tdiffSingle: register('diff-single', 0xec22),\n\tdiffMultiple: register('diff-multiple', 0xec23),\n\tsurroundWith: register('surround-with', 0xec24),\n\tshare: register('share', 0xec25),\n\tgitStash: register('git-stash', 0xec26),\n\tgitStashApply: register('git-stash-apply', 0xec27),\n\tgitStashPop: register('git-stash-pop', 0xec28),\n\tvscode: register('vscode', 0xec29),\n\tvscodeInsiders: register('vscode-insiders', 0xec2a),\n\tcodeOss: register('code-oss', 0xec2b),\n\trunCoverage: register('run-coverage', 0xec2c),\n\trunAllCoverage: register('run-all-coverage', 0xec2d),\n\tcoverage: register('coverage', 0xec2e),\n\tgithubProject: register('github-project', 0xec2f),\n\tmapVertical: register('map-vertical', 0xec30),\n\tfoldVertical: register('fold-vertical', 0xec30),\n\tmapVerticalFilled: register('map-vertical-filled', 0xec31),\n\tfoldVerticalFilled: register('fold-vertical-filled', 0xec31),\n\tgoToSearch: register('go-to-search', 0xec32),\n\tpercentage: register('percentage', 0xec33),\n\tsortPercentage: register('sort-percentage', 0xec33),\n\tattach: register('attach', 0xec34),\n\tgoToEditingSession: register('go-to-editing-session', 0xec35),\n\teditSession: register('edit-session', 0xec36),\n\tcodeReview: register('code-review', 0xec37),\n\tcopilotWarning: register('copilot-warning', 0xec38),\n\tpython: register('python', 0xec39),\n\tcopilotLarge: register('copilot-large', 0xec3a),\n\tcopilotWarningLarge: register('copilot-warning-large', 0xec3b),\n\tkeyboardTab: register('keyboard-tab', 0xec3c),\n\tcopilotBlocked: register('copilot-blocked', 0xec3d),\n\tcopilotNotConnected: register('copilot-not-connected', 0xec3e),\n\tflag: register('flag', 0xec3f),\n\tlightbulbEmpty: register('lightbulb-empty', 0xec40),\n\tsymbolMethodArrow: register('symbol-method-arrow', 0xec41),\n\tcopilotUnavailable: register('copilot-unavailable', 0xec42),\n\trepoPinned: register('repo-pinned', 0xec43),\n\tkeyboardTabAbove: register('keyboard-tab-above', 0xec44),\n\tkeyboardTabBelow: register('keyboard-tab-below', 0xec45),\n\tgitPullRequestDone: register('git-pull-request-done', 0xec46),\n\tmcp: register('mcp', 0xec47),\n\textensionsLarge: register('extensions-large', 0xec48),\n\tlayoutPanelDock: register('layout-panel-dock', 0xec49),\n\tlayoutSidebarLeftDock: register('layout-sidebar-left-dock', 0xec4a),\n\tlayoutSidebarRightDock: register('layout-sidebar-right-dock', 0xec4b),\n\tcopilotInProgress: register('copilot-in-progress', 0xec4c),\n\tcopilotError: register('copilot-error', 0xec4d),\n\tcopilotSuccess: register('copilot-success', 0xec4e),\n\tchatSparkle: register('chat-sparkle', 0xec4f),\n\tsearchSparkle: register('search-sparkle', 0xec50),\n\teditSparkle: register('edit-sparkle', 0xec51),\n\tcopilotSnooze: register('copilot-snooze', 0xec52),\n\tsendToRemoteAgent: register('send-to-remote-agent', 0xec53),\n\tcommentDiscussionSparkle: register('comment-discussion-sparkle', 0xec54),\n\tchatSparkleWarning: register('chat-sparkle-warning', 0xec55),\n\tchatSparkleError: register('chat-sparkle-error', 0xec56),\n} as const;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ThemeIcon } from './themables.js';\nimport { register } from './codiconsUtil.js';\nimport { codiconsLibrary } from './codiconsLibrary.js';\n\n\n/**\n * Only to be used by the iconRegistry.\n */\nexport function getAllCodicons(): ThemeIcon[] {\n\treturn Object.values(Codicon);\n}\n\n/**\n * Derived icons, that could become separate icons.\n * These mappings should be moved into the mapping file in the vscode-codicons repo at some point.\n */\nexport const codiconsDerived = {\n\tdialogError: register('dialog-error', 'error'),\n\tdialogWarning: register('dialog-warning', 'warning'),\n\tdialogInfo: register('dialog-info', 'info'),\n\tdialogClose: register('dialog-close', 'close'),\n\ttreeItemExpanded: register('tree-item-expanded', 'chevron-down'), // collapsed is done with rotation\n\ttreeFilterOnTypeOn: register('tree-filter-on-type-on', 'list-filter'),\n\ttreeFilterOnTypeOff: register('tree-filter-on-type-off', 'list-selection'),\n\ttreeFilterClear: register('tree-filter-clear', 'close'),\n\ttreeItemLoading: register('tree-item-loading', 'loading'),\n\tmenuSelection: register('menu-selection', 'check'),\n\tmenuSubmenu: register('menu-submenu', 'chevron-right'),\n\tmenuBarMore: register('menubar-more', 'more'),\n\tscrollbarButtonLeft: register('scrollbar-button-left', 'triangle-left'),\n\tscrollbarButtonRight: register('scrollbar-button-right', 'triangle-right'),\n\tscrollbarButtonUp: register('scrollbar-button-up', 'triangle-up'),\n\tscrollbarButtonDown: register('scrollbar-button-down', 'triangle-down'),\n\ttoolBarMore: register('toolbar-more', 'more'),\n\tquickInputBack: register('quick-input-back', 'arrow-left'),\n\tdropDownButton: register('drop-down-button', 0xeab4),\n\tsymbolCustomColor: register('symbol-customcolor', 0xeb5c),\n\texportIcon: register('export', 0xebac),\n\tworkspaceUnspecified: register('workspace-unspecified', 0xebc3),\n\tnewLine: register('newline', 0xebea),\n\tthumbsDownFilled: register('thumbsdown-filled', 0xec13),\n\tthumbsUpFilled: register('thumbsup-filled', 0xec14),\n\tgitFetch: register('git-fetch', 0xec1d),\n\tlightbulbSparkleAutofix: register('lightbulb-sparkle-autofix', 0xec1f),\n\tdebugBreakpointPending: register('debug-breakpoint-pending', 0xebd9),\n\n} as const;\n\n/**\n * The Codicon library is a set of default icons that are built-in in VS Code.\n *\n * In the product (outside of base) Codicons should only be used as defaults. In order to have all icons in VS Code\n * themeable, component should define new, UI component specific icons using `iconRegistry.registerIcon`.\n * In that call a Codicon can be named as default.\n */\nexport const Codicon = {\n\t...codiconsLibrary,\n\t...codiconsDerived\n\n} as const;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color } from '../../base/common/color.js';\nimport { Emitter, Event } from '../../base/common/event.js';\nimport { Disposable, IDisposable, toDisposable } from '../../base/common/lifecycle.js';\nimport { ITokenizationRegistry, ITokenizationSupportChangedEvent, ILazyTokenizationSupport } from './languages.js';\nimport { ColorId } from './encodedTokenAttributes.js';\n\nexport class TokenizationRegistry<TSupport> implements ITokenizationRegistry<TSupport> {\n\n\tprivate readonly _tokenizationSupports = new Map<string, TSupport>();\n\tprivate readonly _factories = new Map<string, TokenizationSupportFactoryData<TSupport>>();\n\n\tprivate readonly _onDidChange = new Emitter<ITokenizationSupportChangedEvent>();\n\tpublic readonly onDidChange: Event<ITokenizationSupportChangedEvent> = this._onDidChange.event;\n\n\tprivate _colorMap: Color[] | null;\n\n\tconstructor() {\n\t\tthis._colorMap = null;\n\t}\n\n\tpublic handleChange(languageIds: string[]): void {\n\t\tthis._onDidChange.fire({\n\t\t\tchangedLanguages: languageIds,\n\t\t\tchangedColorMap: false\n\t\t});\n\t}\n\n\tpublic register(languageId: string, support: TSupport): IDisposable {\n\t\tthis._tokenizationSupports.set(languageId, support);\n\t\tthis.handleChange([languageId]);\n\t\treturn toDisposable(() => {\n\t\t\tif (this._tokenizationSupports.get(languageId) !== support) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._tokenizationSupports.delete(languageId);\n\t\t\tthis.handleChange([languageId]);\n\t\t});\n\t}\n\n\tpublic get(languageId: string): TSupport | null {\n\t\treturn this._tokenizationSupports.get(languageId) || null;\n\t}\n\n\tpublic registerFactory(languageId: string, factory: ILazyTokenizationSupport<TSupport>): IDisposable {\n\t\tthis._factories.get(languageId)?.dispose();\n\t\tconst myData = new TokenizationSupportFactoryData(this, languageId, factory);\n\t\tthis._factories.set(languageId, myData);\n\t\treturn toDisposable(() => {\n\t\t\tconst v = this._factories.get(languageId);\n\t\t\tif (!v || v !== myData) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._factories.delete(languageId);\n\t\t\tv.dispose();\n\t\t});\n\t}\n\n\tpublic async getOrCreate(languageId: string): Promise<TSupport | null> {\n\t\t// check first if the support is already set\n\t\tconst tokenizationSupport = this.get(languageId);\n\t\tif (tokenizationSupport) {\n\t\t\treturn tokenizationSupport;\n\t\t}\n\n\t\tconst factory = this._factories.get(languageId);\n\t\tif (!factory || factory.isResolved) {\n\t\t\t// no factory or factory.resolve already finished\n\t\t\treturn null;\n\t\t}\n\n\t\tawait factory.resolve();\n\n\t\treturn this.get(languageId);\n\t}\n\n\tpublic isResolved(languageId: string): boolean {\n\t\tconst tokenizationSupport = this.get(languageId);\n\t\tif (tokenizationSupport) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst factory = this._factories.get(languageId);\n\t\tif (!factory || factory.isResolved) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic setColorMap(colorMap: Color[]): void {\n\t\tthis._colorMap = colorMap;\n\t\tthis._onDidChange.fire({\n\t\t\tchangedLanguages: Array.from(this._tokenizationSupports.keys()),\n\t\t\tchangedColorMap: true\n\t\t});\n\t}\n\n\tpublic getColorMap(): Color[] | null {\n\t\treturn this._colorMap;\n\t}\n\n\tpublic getDefaultBackground(): Color | null {\n\t\tif (this._colorMap && this._colorMap.length > ColorId.DefaultBackground) {\n\t\t\treturn this._colorMap[ColorId.DefaultBackground];\n\t\t}\n\t\treturn null;\n\t}\n}\n\nclass TokenizationSupportFactoryData<TSupport> extends Disposable {\n\n\tprivate _isDisposed: boolean = false;\n\tprivate _resolvePromise: Promise<void> | null = null;\n\tprivate _isResolved: boolean = false;\n\n\tpublic get isResolved(): boolean {\n\t\treturn this._isResolved;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _registry: TokenizationRegistry<TSupport>,\n\t\tprivate readonly _languageId: string,\n\t\tprivate readonly _factory: ILazyTokenizationSupport<TSupport>,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n\n\tpublic async resolve(): Promise<void> {\n\t\tif (!this._resolvePromise) {\n\t\t\tthis._resolvePromise = this._create();\n\t\t}\n\t\treturn this._resolvePromise;\n\t}\n\n\tprivate async _create(): Promise<void> {\n\t\tconst value = await this._factory.tokenizationSupport;\n\t\tthis._isResolved = true;\n\t\tif (value && !this._isDisposed) {\n\t\t\tthis._register(this._registry.register(this._languageId, value));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from '../../base/common/buffer.js';\nimport { CancellationToken } from '../../base/common/cancellation.js';\nimport { Codicon } from '../../base/common/codicons.js';\nimport { Color } from '../../base/common/color.js';\nimport { IReadonlyVSDataTransfer } from '../../base/common/dataTransfer.js';\nimport { Event } from '../../base/common/event.js';\nimport { HierarchicalKind } from '../../base/common/hierarchicalKind.js';\nimport { IMarkdownString } from '../../base/common/htmlContent.js';\nimport { IDisposable } from '../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../base/common/themables.js';\nimport { URI, UriComponents } from '../../base/common/uri.js';\nimport { EditOperation, ISingleEditOperation } from './core/editOperation.js';\nimport { IPosition, Position } from './core/position.js';\nimport { IRange, Range } from './core/range.js';\nimport { Selection } from './core/selection.js';\nimport { LanguageId } from './encodedTokenAttributes.js';\nimport { LanguageSelector } from './languageSelector.js';\nimport * as model from './model.js';\nimport { TokenizationRegistry as TokenizationRegistryImpl } from './tokenizationRegistry.js';\nimport { ContiguousMultilineTokens } from './tokens/contiguousMultilineTokens.js';\nimport { localize } from '../../nls.js';\nimport { ExtensionIdentifier } from '../../platform/extensions/common/extensions.js';\nimport { IMarkerData } from '../../platform/markers/common/markers.js';\n\n/**\n * @internal\n */\nexport interface ILanguageIdCodec {\n\tencodeLanguageId(languageId: string): LanguageId;\n\tdecodeLanguageId(languageId: LanguageId): string;\n}\n\nexport class Token {\n\t_tokenBrand: void = undefined;\n\n\tconstructor(\n\t\tpublic readonly offset: number,\n\t\tpublic readonly type: string,\n\t\tpublic readonly language: string,\n\t) {\n\t}\n\n\tpublic toString(): string {\n\t\treturn '(' + this.offset + ', ' + this.type + ')';\n\t}\n}\n\n/**\n * @internal\n */\nexport class TokenizationResult {\n\t_tokenizationResultBrand: void = undefined;\n\n\tconstructor(\n\t\tpublic readonly tokens: Token[],\n\t\tpublic readonly endState: IState,\n\t) {\n\t}\n}\n\n/**\n * @internal\n */\nexport class EncodedTokenizationResult {\n\t_encodedTokenizationResultBrand: void = undefined;\n\n\tconstructor(\n\t\t/**\n\t\t * The tokens in binary format. Each token occupies two array indices. For token i:\n\t\t *  - at offset 2*i => startIndex\n\t\t *  - at offset 2*i + 1 => metadata\n\t\t *\n\t\t */\n\t\tpublic readonly tokens: Uint32Array,\n\t\tpublic readonly endState: IState,\n\t) {\n\t}\n}\n\nexport interface SyntaxNode {\n\tstartIndex: number;\n\tendIndex: number;\n\tstartPosition: IPosition;\n\tendPosition: IPosition;\n}\n\nexport interface QueryCapture {\n\tname: string;\n\ttext?: string;\n\tnode: SyntaxNode;\n\tencodedLanguageId: number;\n}\n\n/**\n * @internal\n */\nexport interface ITokenizationSupport {\n\t/**\n\t * If true, the background tokenizer will only be used to verify tokens against the default background tokenizer.\n\t * Used for debugging.\n\t */\n\treadonly backgroundTokenizerShouldOnlyVerifyTokens?: boolean;\n\n\tgetInitialState(): IState;\n\n\ttokenize(line: string, hasEOL: boolean, state: IState): TokenizationResult;\n\n\ttokenizeEncoded(line: string, hasEOL: boolean, state: IState): EncodedTokenizationResult;\n\n\t/**\n\t * Can be/return undefined if default background tokenization should be used.\n\t */\n\tcreateBackgroundTokenizer?(textModel: model.ITextModel, store: IBackgroundTokenizationStore): IBackgroundTokenizer | undefined;\n}\n\n/**\n * @internal\n */\nexport interface IBackgroundTokenizer extends IDisposable {\n\t/**\n\t * Instructs the background tokenizer to set the tokens for the given range again.\n\t *\n\t * This might be necessary if the renderer overwrote those tokens with heuristically computed ones for some viewport,\n\t * when the change does not even propagate to that viewport.\n\t */\n\trequestTokens(startLineNumber: number, endLineNumberExclusive: number): void;\n\n\treportMismatchingTokens?(lineNumber: number): void;\n}\n\n/**\n * @internal\n */\nexport interface IBackgroundTokenizationStore {\n\tsetTokens(tokens: ContiguousMultilineTokens[]): void;\n\n\tsetEndState(lineNumber: number, state: IState): void;\n\n\t/**\n\t * Should be called to indicate that the background tokenization has finished for now.\n\t * (This triggers bracket pair colorization to re-parse the bracket pairs with token information)\n\t */\n\tbackgroundTokenizationFinished(): void;\n}\n\n/**\n * The state of the tokenizer between two lines.\n * It is useful to store flags such as in multiline comment, etc.\n * The model will clone the previous line's state and pass it in to tokenize the next line.\n */\nexport interface IState {\n\tclone(): IState;\n\tequals(other: IState): boolean;\n}\n\n/**\n * A provider result represents the values a provider, like the {@link HoverProvider},\n * may return. For once this is the actual result type `T`, like `Hover`, or a thenable that resolves\n * to that type `T`. In addition, `null` and `undefined` can be returned - either directly or from a\n * thenable.\n */\nexport type ProviderResult<T> = T | undefined | null | Thenable<T | undefined | null>;\n\n/**\n * A hover represents additional information for a symbol or word. Hovers are\n * rendered in a tooltip-like widget.\n */\nexport interface Hover {\n\t/**\n\t * The contents of this hover.\n\t */\n\tcontents: IMarkdownString[];\n\n\t/**\n\t * The range to which this hover applies. When missing, the\n\t * editor will use the range at the current position or the\n\t * current position itself.\n\t */\n\trange?: IRange;\n\n\t/**\n\t * Can increase the verbosity of the hover\n\t */\n\tcanIncreaseVerbosity?: boolean;\n\n\t/**\n\t * Can decrease the verbosity of the hover\n\t */\n\tcanDecreaseVerbosity?: boolean;\n}\n\n/**\n * The hover provider interface defines the contract between extensions and\n * the [hover](https://code.visualstudio.com/docs/editor/intellisense)-feature.\n */\nexport interface HoverProvider<THover = Hover> {\n\t/**\n\t * Provide a hover for the given position, context and document. Multiple hovers at the same\n\t * position will be merged by the editor. A hover can have a range which defaults\n\t * to the word range at the position when omitted.\n\t */\n\tprovideHover(model: model.ITextModel, position: Position, token: CancellationToken, context?: HoverContext<THover>): ProviderResult<THover>;\n}\n\nexport interface HoverContext<THover = Hover> {\n\t/**\n\t * Hover verbosity request\n\t */\n\tverbosityRequest?: HoverVerbosityRequest<THover>;\n}\n\nexport interface HoverVerbosityRequest<THover = Hover> {\n\t/**\n\t * The delta by which to increase/decrease the hover verbosity level\n\t */\n\tverbosityDelta: number;\n\t/**\n\t * The previous hover for the same position\n\t */\n\tpreviousHover: THover;\n}\n\nexport enum HoverVerbosityAction {\n\t/**\n\t * Increase the verbosity of the hover\n\t */\n\tIncrease,\n\t/**\n\t * Decrease the verbosity of the hover\n\t */\n\tDecrease\n}\n\n/**\n * An evaluatable expression represents additional information for an expression in a document. Evaluatable expressions are\n * evaluated by a debugger or runtime and their result is rendered in a tooltip-like widget.\n * @internal\n */\nexport interface EvaluatableExpression {\n\t/**\n\t * The range to which this expression applies.\n\t */\n\trange: IRange;\n\t/**\n\t * This expression overrides the expression extracted from the range.\n\t */\n\texpression?: string;\n}\n\n\n/**\n * The evaluatable expression provider interface defines the contract between extensions and\n * the debug hover.\n * @internal\n */\nexport interface EvaluatableExpressionProvider {\n\t/**\n\t * Provide a hover for the given position and document. Multiple hovers at the same\n\t * position will be merged by the editor. A hover can have a range which defaults\n\t * to the word range at the position when omitted.\n\t */\n\tprovideEvaluatableExpression(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<EvaluatableExpression>;\n}\n\n/**\n * A value-object that contains contextual information when requesting inline values from a InlineValuesProvider.\n * @internal\n */\nexport interface InlineValueContext {\n\tframeId: number;\n\tstoppedLocation: Range;\n}\n\n/**\n * Provide inline value as text.\n * @internal\n */\nexport interface InlineValueText {\n\ttype: 'text';\n\trange: IRange;\n\ttext: string;\n}\n\n/**\n * Provide inline value through a variable lookup.\n * @internal\n */\nexport interface InlineValueVariableLookup {\n\ttype: 'variable';\n\trange: IRange;\n\tvariableName?: string;\n\tcaseSensitiveLookup: boolean;\n}\n\n/**\n * Provide inline value through an expression evaluation.\n * @internal\n */\nexport interface InlineValueExpression {\n\ttype: 'expression';\n\trange: IRange;\n\texpression?: string;\n}\n\n/**\n * Inline value information can be provided by different means:\n * - directly as a text value (class InlineValueText).\n * - as a name to use for a variable lookup (class InlineValueVariableLookup)\n * - as an evaluatable expression (class InlineValueEvaluatableExpression)\n * The InlineValue types combines all inline value types into one type.\n * @internal\n */\nexport type InlineValue = InlineValueText | InlineValueVariableLookup | InlineValueExpression;\n\n/**\n * The inline values provider interface defines the contract between extensions and\n * the debugger's inline values feature.\n * @internal\n */\nexport interface InlineValuesProvider {\n\t/**\n\t */\n\tonDidChangeInlineValues?: Event<void> | undefined;\n\t/**\n\t * Provide the \"inline values\" for the given range and document. Multiple hovers at the same\n\t * position will be merged by the editor. A hover can have a range which defaults\n\t * to the word range at the position when omitted.\n\t */\n\tprovideInlineValues(model: model.ITextModel, viewPort: Range, context: InlineValueContext, token: CancellationToken): ProviderResult<InlineValue[]>;\n}\n\nexport const enum CompletionItemKind {\n\tMethod,\n\tFunction,\n\tConstructor,\n\tField,\n\tVariable,\n\tClass,\n\tStruct,\n\tInterface,\n\tModule,\n\tProperty,\n\tEvent,\n\tOperator,\n\tUnit,\n\tValue,\n\tConstant,\n\tEnum,\n\tEnumMember,\n\tKeyword,\n\tText,\n\tColor,\n\tFile,\n\tReference,\n\tCustomcolor,\n\tFolder,\n\tTypeParameter,\n\tUser,\n\tIssue,\n\tTool,\n\tSnippet, // <- highest value (used for compare!)\n}\n\n/**\n * @internal\n */\nexport namespace CompletionItemKinds {\n\n\tconst byKind = new Map<CompletionItemKind, ThemeIcon>();\n\tbyKind.set(CompletionItemKind.Method, Codicon.symbolMethod);\n\tbyKind.set(CompletionItemKind.Function, Codicon.symbolFunction);\n\tbyKind.set(CompletionItemKind.Constructor, Codicon.symbolConstructor);\n\tbyKind.set(CompletionItemKind.Field, Codicon.symbolField);\n\tbyKind.set(CompletionItemKind.Variable, Codicon.symbolVariable);\n\tbyKind.set(CompletionItemKind.Class, Codicon.symbolClass);\n\tbyKind.set(CompletionItemKind.Struct, Codicon.symbolStruct);\n\tbyKind.set(CompletionItemKind.Interface, Codicon.symbolInterface);\n\tbyKind.set(CompletionItemKind.Module, Codicon.symbolModule);\n\tbyKind.set(CompletionItemKind.Property, Codicon.symbolProperty);\n\tbyKind.set(CompletionItemKind.Event, Codicon.symbolEvent);\n\tbyKind.set(CompletionItemKind.Operator, Codicon.symbolOperator);\n\tbyKind.set(CompletionItemKind.Unit, Codicon.symbolUnit);\n\tbyKind.set(CompletionItemKind.Value, Codicon.symbolValue);\n\tbyKind.set(CompletionItemKind.Enum, Codicon.symbolEnum);\n\tbyKind.set(CompletionItemKind.Constant, Codicon.symbolConstant);\n\tbyKind.set(CompletionItemKind.Enum, Codicon.symbolEnum);\n\tbyKind.set(CompletionItemKind.EnumMember, Codicon.symbolEnumMember);\n\tbyKind.set(CompletionItemKind.Keyword, Codicon.symbolKeyword);\n\tbyKind.set(CompletionItemKind.Snippet, Codicon.symbolSnippet);\n\tbyKind.set(CompletionItemKind.Text, Codicon.symbolText);\n\tbyKind.set(CompletionItemKind.Color, Codicon.symbolColor);\n\tbyKind.set(CompletionItemKind.File, Codicon.symbolFile);\n\tbyKind.set(CompletionItemKind.Reference, Codicon.symbolReference);\n\tbyKind.set(CompletionItemKind.Customcolor, Codicon.symbolCustomColor);\n\tbyKind.set(CompletionItemKind.Folder, Codicon.symbolFolder);\n\tbyKind.set(CompletionItemKind.TypeParameter, Codicon.symbolTypeParameter);\n\tbyKind.set(CompletionItemKind.User, Codicon.account);\n\tbyKind.set(CompletionItemKind.Issue, Codicon.issues);\n\tbyKind.set(CompletionItemKind.Tool, Codicon.tools);\n\n\t/**\n\t * @internal\n\t */\n\texport function toIcon(kind: CompletionItemKind): ThemeIcon {\n\t\tlet codicon = byKind.get(kind);\n\t\tif (!codicon) {\n\t\t\tconsole.info('No codicon found for CompletionItemKind ' + kind);\n\t\t\tcodicon = Codicon.symbolProperty;\n\t\t}\n\t\treturn codicon;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\texport function toLabel(kind: CompletionItemKind): string {\n\t\tswitch (kind) {\n\t\t\tcase CompletionItemKind.Method: return localize('suggestWidget.kind.method', 'Method');\n\t\t\tcase CompletionItemKind.Function: return localize('suggestWidget.kind.function', 'Function');\n\t\t\tcase CompletionItemKind.Constructor: return localize('suggestWidget.kind.constructor', 'Constructor');\n\t\t\tcase CompletionItemKind.Field: return localize('suggestWidget.kind.field', 'Field');\n\t\t\tcase CompletionItemKind.Variable: return localize('suggestWidget.kind.variable', 'Variable');\n\t\t\tcase CompletionItemKind.Class: return localize('suggestWidget.kind.class', 'Class');\n\t\t\tcase CompletionItemKind.Struct: return localize('suggestWidget.kind.struct', 'Struct');\n\t\t\tcase CompletionItemKind.Interface: return localize('suggestWidget.kind.interface', 'Interface');\n\t\t\tcase CompletionItemKind.Module: return localize('suggestWidget.kind.module', 'Module');\n\t\t\tcase CompletionItemKind.Property: return localize('suggestWidget.kind.property', 'Property');\n\t\t\tcase CompletionItemKind.Event: return localize('suggestWidget.kind.event', 'Event');\n\t\t\tcase CompletionItemKind.Operator: return localize('suggestWidget.kind.operator', 'Operator');\n\t\t\tcase CompletionItemKind.Unit: return localize('suggestWidget.kind.unit', 'Unit');\n\t\t\tcase CompletionItemKind.Value: return localize('suggestWidget.kind.value', 'Value');\n\t\t\tcase CompletionItemKind.Constant: return localize('suggestWidget.kind.constant', 'Constant');\n\t\t\tcase CompletionItemKind.Enum: return localize('suggestWidget.kind.enum', 'Enum');\n\t\t\tcase CompletionItemKind.EnumMember: return localize('suggestWidget.kind.enumMember', 'Enum Member');\n\t\t\tcase CompletionItemKind.Keyword: return localize('suggestWidget.kind.keyword', 'Keyword');\n\t\t\tcase CompletionItemKind.Text: return localize('suggestWidget.kind.text', 'Text');\n\t\t\tcase CompletionItemKind.Color: return localize('suggestWidget.kind.color', 'Color');\n\t\t\tcase CompletionItemKind.File: return localize('suggestWidget.kind.file', 'File');\n\t\t\tcase CompletionItemKind.Reference: return localize('suggestWidget.kind.reference', 'Reference');\n\t\t\tcase CompletionItemKind.Customcolor: return localize('suggestWidget.kind.customcolor', 'Custom Color');\n\t\t\tcase CompletionItemKind.Folder: return localize('suggestWidget.kind.folder', 'Folder');\n\t\t\tcase CompletionItemKind.TypeParameter: return localize('suggestWidget.kind.typeParameter', 'Type Parameter');\n\t\t\tcase CompletionItemKind.User: return localize('suggestWidget.kind.user', 'User');\n\t\t\tcase CompletionItemKind.Issue: return localize('suggestWidget.kind.issue', 'Issue');\n\t\t\tcase CompletionItemKind.Tool: return localize('suggestWidget.kind.tool', 'Tool');\n\t\t\tcase CompletionItemKind.Snippet: return localize('suggestWidget.kind.snippet', 'Snippet');\n\t\t\tdefault: return '';\n\t\t}\n\t}\n\n\tconst data = new Map<string, CompletionItemKind>();\n\tdata.set('method', CompletionItemKind.Method);\n\tdata.set('function', CompletionItemKind.Function);\n\tdata.set('constructor', <any>CompletionItemKind.Constructor);\n\tdata.set('field', CompletionItemKind.Field);\n\tdata.set('variable', CompletionItemKind.Variable);\n\tdata.set('class', CompletionItemKind.Class);\n\tdata.set('struct', CompletionItemKind.Struct);\n\tdata.set('interface', CompletionItemKind.Interface);\n\tdata.set('module', CompletionItemKind.Module);\n\tdata.set('property', CompletionItemKind.Property);\n\tdata.set('event', CompletionItemKind.Event);\n\tdata.set('operator', CompletionItemKind.Operator);\n\tdata.set('unit', CompletionItemKind.Unit);\n\tdata.set('value', CompletionItemKind.Value);\n\tdata.set('constant', CompletionItemKind.Constant);\n\tdata.set('enum', CompletionItemKind.Enum);\n\tdata.set('enum-member', CompletionItemKind.EnumMember);\n\tdata.set('enumMember', CompletionItemKind.EnumMember);\n\tdata.set('keyword', CompletionItemKind.Keyword);\n\tdata.set('snippet', CompletionItemKind.Snippet);\n\tdata.set('text', CompletionItemKind.Text);\n\tdata.set('color', CompletionItemKind.Color);\n\tdata.set('file', CompletionItemKind.File);\n\tdata.set('reference', CompletionItemKind.Reference);\n\tdata.set('customcolor', CompletionItemKind.Customcolor);\n\tdata.set('folder', CompletionItemKind.Folder);\n\tdata.set('type-parameter', CompletionItemKind.TypeParameter);\n\tdata.set('typeParameter', CompletionItemKind.TypeParameter);\n\tdata.set('account', CompletionItemKind.User);\n\tdata.set('issue', CompletionItemKind.Issue);\n\tdata.set('tool', CompletionItemKind.Tool);\n\n\t/**\n\t * @internal\n\t */\n\texport function fromString(value: string): CompletionItemKind;\n\t/**\n\t * @internal\n\t */\n\texport function fromString(value: string, strict: true): CompletionItemKind | undefined;\n\t/**\n\t * @internal\n\t */\n\texport function fromString(value: string, strict?: boolean): CompletionItemKind | undefined {\n\t\tlet res = data.get(value);\n\t\tif (typeof res === 'undefined' && !strict) {\n\t\t\tres = CompletionItemKind.Property;\n\t\t}\n\t\treturn res;\n\t}\n}\n\nexport interface CompletionItemLabel {\n\tlabel: string;\n\tdetail?: string;\n\tdescription?: string;\n}\n\nexport const enum CompletionItemTag {\n\tDeprecated = 1\n}\n\nexport const enum CompletionItemInsertTextRule {\n\tNone = 0,\n\n\t/**\n\t * Adjust whitespace/indentation of multiline insert texts to\n\t * match the current line indentation.\n\t */\n\tKeepWhitespace = 0b001,\n\n\t/**\n\t * `insertText` is a snippet.\n\t */\n\tInsertAsSnippet = 0b100,\n}\n\nexport interface CompletionItemRanges {\n\tinsert: IRange;\n\treplace: IRange;\n}\n\n/**\n * A completion item represents a text snippet that is\n * proposed to complete text that is being typed.\n */\nexport interface CompletionItem {\n\t/**\n\t * The label of this completion item. By default\n\t * this is also the text that is inserted when selecting\n\t * this completion.\n\t */\n\tlabel: string | CompletionItemLabel;\n\t/**\n\t * The kind of this completion item. Based on the kind\n\t * an icon is chosen by the editor.\n\t */\n\tkind: CompletionItemKind;\n\t/**\n\t * A modifier to the `kind` which affect how the item\n\t * is rendered, e.g. Deprecated is rendered with a strikeout\n\t */\n\ttags?: ReadonlyArray<CompletionItemTag>;\n\t/**\n\t * A human-readable string with additional information\n\t * about this item, like type or symbol information.\n\t */\n\tdetail?: string;\n\t/**\n\t * A human-readable string that represents a doc-comment.\n\t */\n\tdocumentation?: string | IMarkdownString;\n\t/**\n\t * A string that should be used when comparing this item\n\t * with other items. When `falsy` the {@link CompletionItem.label label}\n\t * is used.\n\t */\n\tsortText?: string;\n\t/**\n\t * A string that should be used when filtering a set of\n\t * completion items. When `falsy` the {@link CompletionItem.label label}\n\t * is used.\n\t */\n\tfilterText?: string;\n\t/**\n\t * Select this item when showing. *Note* that only one completion item can be selected and\n\t * that the editor decides which item that is. The rule is that the *first* item of those\n\t * that match best is selected.\n\t */\n\tpreselect?: boolean;\n\t/**\n\t * A string or snippet that should be inserted in a document when selecting\n\t * this completion.\n\t */\n\tinsertText: string;\n\t/**\n\t * Additional rules (as bitmask) that should be applied when inserting\n\t * this completion.\n\t */\n\tinsertTextRules?: CompletionItemInsertTextRule;\n\t/**\n\t * A range of text that should be replaced by this completion item.\n\t *\n\t * *Note:* The range must be a {@link Range.isSingleLine single line} and it must\n\t * {@link Range.contains contain} the position at which completion has been {@link CompletionItemProvider.provideCompletionItems requested}.\n\t */\n\trange: IRange | CompletionItemRanges;\n\t/**\n\t * An optional set of characters that when pressed while this completion is active will accept it first and\n\t * then type that character. *Note* that all commit characters should have `length=1` and that superfluous\n\t * characters will be ignored.\n\t */\n\tcommitCharacters?: string[];\n\t/**\n\t * An optional array of additional text edits that are applied when\n\t * selecting this completion. Edits must not overlap with the main edit\n\t * nor with themselves.\n\t */\n\tadditionalTextEdits?: ISingleEditOperation[];\n\t/**\n\t * A command that should be run upon acceptance of this item.\n\t */\n\tcommand?: Command;\n\t/**\n\t * A command that should be run upon acceptance of this item.\n\t */\n\taction?: Command;\n\t/**\n\t * @internal\n\t */\n\textensionId?: ExtensionIdentifier;\n\n\t/**\n\t * @internal\n\t */\n\t_id?: [number, number];\n}\n\nexport interface CompletionList {\n\tsuggestions: CompletionItem[];\n\tincomplete?: boolean;\n\tdispose?(): void;\n\n\t/**\n\t * @internal\n\t */\n\tduration?: number;\n}\n\n/**\n * Info provided on partial acceptance.\n */\nexport interface PartialAcceptInfo {\n\tkind: PartialAcceptTriggerKind;\n\tacceptedLength: number;\n}\n\n/**\n * How a partial acceptance was triggered.\n */\nexport const enum PartialAcceptTriggerKind {\n\tWord = 0,\n\tLine = 1,\n\tSuggest = 2,\n}\n\n/**\n * How a suggest provider was triggered.\n */\nexport const enum CompletionTriggerKind {\n\tInvoke = 0,\n\tTriggerCharacter = 1,\n\tTriggerForIncompleteCompletions = 2\n}\n/**\n * Contains additional information about the context in which\n * {@link CompletionItemProvider.provideCompletionItems completion provider} is triggered.\n */\nexport interface CompletionContext {\n\t/**\n\t * How the completion was triggered.\n\t */\n\ttriggerKind: CompletionTriggerKind;\n\t/**\n\t * Character that triggered the completion item provider.\n\t *\n\t * `undefined` if provider was not triggered by a character.\n\t */\n\ttriggerCharacter?: string;\n}\n/**\n * The completion item provider interface defines the contract between extensions and\n * the [IntelliSense](https://code.visualstudio.com/docs/editor/intellisense).\n *\n * When computing *complete* completion items is expensive, providers can optionally implement\n * the `resolveCompletionItem`-function. In that case it is enough to return completion\n * items with a {@link CompletionItem.label label} from the\n * {@link CompletionItemProvider.provideCompletionItems provideCompletionItems}-function. Subsequently,\n * when a completion item is shown in the UI and gains focus this provider is asked to resolve\n * the item, like adding {@link CompletionItem.documentation doc-comment} or {@link CompletionItem.detail details}.\n */\nexport interface CompletionItemProvider {\n\n\t/**\n\t * Used to identify completions in the (debug) UI and telemetry. This isn't the extension identifier because extensions\n\t * often contribute multiple completion item providers.\n\t *\n\t * @internal\n\t */\n\t_debugDisplayName: string;\n\n\ttriggerCharacters?: string[];\n\t/**\n\t * Provide completion items for the given position and document.\n\t */\n\tprovideCompletionItems(model: model.ITextModel, position: Position, context: CompletionContext, token: CancellationToken): ProviderResult<CompletionList>;\n\n\t/**\n\t * Given a completion item fill in more data, like {@link CompletionItem.documentation doc-comment}\n\t * or {@link CompletionItem.detail details}.\n\t *\n\t * The editor will only resolve a completion item once.\n\t */\n\tresolveCompletionItem?(item: CompletionItem, token: CancellationToken): ProviderResult<CompletionItem>;\n}\n\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport enum InlineCompletionTriggerKind {\n\t/**\n\t * Completion was triggered automatically while editing.\n\t * It is sufficient to return a single completion item in this case.\n\t */\n\tAutomatic = 0,\n\n\t/**\n\t * Completion was triggered explicitly by a user gesture.\n\t * Return multiple completion items to enable cycling through them.\n\t */\n\tExplicit = 1,\n}\n\nexport interface InlineCompletionContext {\n\n\t/**\n\t * How the completion was triggered.\n\t */\n\treadonly triggerKind: InlineCompletionTriggerKind;\n\treadonly selectedSuggestionInfo: SelectedSuggestionInfo | undefined;\n\t/**\n\t * @experimental\n\t * @internal\n\t*/\n\treadonly userPrompt?: string | undefined;\n\t/**\n\t * @experimental\n\t * @internal\n\t*/\n\treadonly requestUuid: string;\n\n\treadonly includeInlineEdits: boolean;\n\treadonly includeInlineCompletions: boolean;\n\treadonly requestIssuedDateTime: number;\n\treadonly earliestShownDateTime: number;\n}\n\nexport class SelectedSuggestionInfo {\n\tconstructor(\n\t\tpublic readonly range: IRange,\n\t\tpublic readonly text: string,\n\t\tpublic readonly completionKind: CompletionItemKind,\n\t\tpublic readonly isSnippetText: boolean,\n\t) {\n\t}\n\n\tpublic equals(other: SelectedSuggestionInfo) {\n\t\treturn Range.lift(this.range).equalsRange(other.range)\n\t\t\t&& this.text === other.text\n\t\t\t&& this.completionKind === other.completionKind\n\t\t\t&& this.isSnippetText === other.isSnippetText;\n\t}\n}\n\nexport interface InlineCompletion {\n\t/**\n\t * The text to insert.\n\t * If the text contains a line break, the range must end at the end of a line.\n\t * If existing text should be replaced, the existing text must be a prefix of the text to insert.\n\t *\n\t * The text can also be a snippet. In that case, a preview with default parameters is shown.\n\t * When accepting the suggestion, the full snippet is inserted.\n\t*/\n\treadonly insertText: string | { snippet: string };\n\n\t/**\n\t * A text that is used to decide if this inline completion should be shown.\n\t * An inline completion is shown if the text to replace is a subword of the filter text.\n\t */\n\treadonly filterText?: string;\n\n\t/**\n\t * An optional array of additional text edits that are applied when\n\t * selecting this completion. Edits must not overlap with the main edit\n\t * nor with themselves.\n\t */\n\treadonly additionalTextEdits?: ISingleEditOperation[];\n\n\t/**\n\t * The range to replace.\n\t * Must begin and end on the same line.\n\t*/\n\treadonly range?: IRange;\n\n\treadonly command?: Command;\n\n\treadonly action?: Command;\n\n\t/**\n\t * Is called the first time an inline completion is shown.\n\t * @deprecated. Use `onDidShow` of the provider instead.\n\t*/\n\treadonly shownCommand?: Command;\n\n\t/**\n\t * If set to `true`, unopened closing brackets are removed and unclosed opening brackets are closed.\n\t * Defaults to `false`.\n\t*/\n\treadonly completeBracketPairs?: boolean;\n\n\treadonly isInlineEdit?: boolean;\n\treadonly showInlineEditMenu?: boolean;\n\n\treadonly showRange?: IRange;\n\n\treadonly warning?: InlineCompletionWarning;\n\n\treadonly displayLocation?: InlineCompletionDisplayLocation;\n\n\t/**\n\t * Used for telemetry.\n\t */\n\treadonly correlationId?: string | undefined;\n}\n\nexport interface InlineCompletionWarning {\n\tmessage: IMarkdownString | string;\n\ticon?: IconPath;\n}\n\nexport enum InlineCompletionDisplayLocationKind {\n\tCode = 1,\n\tLabel = 2\n}\n\nexport interface InlineCompletionDisplayLocation {\n\trange: IRange;\n\tkind: InlineCompletionDisplayLocationKind;\n\tlabel: string;\n}\n\n/**\n * TODO: add `| URI | { light: URI; dark: URI }`.\n*/\nexport type IconPath = ThemeIcon;\n\nexport interface InlineCompletions<TItem extends InlineCompletion = InlineCompletion> {\n\treadonly items: readonly TItem[];\n\t/**\n\t * A list of commands associated with the inline completions of this list.\n\t */\n\treadonly commands?: InlineCompletionCommand[];\n\n\treadonly suppressSuggestions?: boolean | undefined;\n\n\t/**\n\t * When set and the user types a suggestion without derivating from it, the inline suggestion is not updated.\n\t */\n\treadonly enableForwardStability?: boolean | undefined;\n}\n\nexport type InlineCompletionCommand = { command: Command; icon?: ThemeIcon };\n\nexport type InlineCompletionProviderGroupId = string;\n\nexport interface InlineCompletionsProvider<T extends InlineCompletions = InlineCompletions> {\n\tprovideInlineCompletions(model: model.ITextModel, position: Position, context: InlineCompletionContext, token: CancellationToken): ProviderResult<T>;\n\n\t/**\n\t * Will be called when an item is shown.\n\t * @param updatedInsertText Is useful to understand bracket completion.\n\t*/\n\thandleItemDidShow?(completions: T, item: T['items'][number], updatedInsertText: string): void;\n\n\t/**\n\t * Will be called when an item is partially accepted. TODO: also handle full acceptance here!\n\t * @param acceptedCharacters Deprecated. Use `info.acceptedCharacters` instead.\n\t */\n\thandlePartialAccept?(completions: T, item: T['items'][number], acceptedCharacters: number, info: PartialAcceptInfo): void;\n\n\t/**\n\t * @deprecated Use `handleEndOfLifetime` instead.\n\t*/\n\thandleRejection?(completions: T, item: T['items'][number]): void;\n\n\t/**\n\t * Is called when an inline completion item is no longer being used.\n\t * Provides a reason of why it is not used anymore.\n\t*/\n\thandleEndOfLifetime?(completions: T, item: T['items'][number], reason: InlineCompletionEndOfLifeReason<T['items'][number]>, lifetimeSummary: LifetimeSummary): void;\n\n\t/**\n\t * Will be called when a completions list is no longer in use and can be garbage-collected.\n\t*/\n\tdisposeInlineCompletions(completions: T, reason: InlineCompletionsDisposeReason): void;\n\n\tonDidChangeInlineCompletions?: Event<void>;\n\n\t/**\n\t * Only used for {@link yieldsToGroupIds}.\n\t * Multiple providers can have the same group id.\n\t */\n\tgroupId?: InlineCompletionProviderGroupId;\n\n\t/** @internal */\n\tproviderId?: ProviderId;\n\n\t/**\n\t * Returns a list of preferred provider {@link groupId}s.\n\t * The current provider is only requested for completions if no provider with a preferred group id returned a result.\n\t */\n\tyieldsToGroupIds?: InlineCompletionProviderGroupId[];\n\n\texcludesGroupIds?: InlineCompletionProviderGroupId[];\n\n\tdisplayName?: string;\n\n\tdebounceDelayMs?: number;\n\n\ttoString?(): string;\n}\n\n\n/** @internal */\nexport class ProviderId {\n\tpublic static fromExtensionId(extensionId: string | undefined): ProviderId {\n\t\treturn new ProviderId(extensionId, undefined, undefined);\n\t}\n\n\tconstructor(\n\t\tpublic readonly extensionId: string | undefined,\n\t\tpublic readonly extensionVersion: string | undefined,\n\t\tpublic readonly providerId: string | undefined\n\t) {\n\t}\n\n\ttoString(): string {\n\t\tlet result = '';\n\t\tif (this.extensionId) {\n\t\t\tresult += this.extensionId;\n\t\t}\n\t\tif (this.extensionVersion) {\n\t\t\tresult += `@${this.extensionVersion}`;\n\t\t}\n\t\tif (this.providerId) {\n\t\t\tresult += `:${this.providerId}`;\n\t\t}\n\t\tif (result.length === 0) {\n\t\t\tresult = 'unknown';\n\t\t}\n\t\treturn result;\n\t}\n}\n\n/** @internal */\nexport class VersionedExtensionId {\n\tpublic static tryCreate(extensionId: string | undefined, version: string | undefined): VersionedExtensionId | undefined {\n\t\tif (!extensionId || !version) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn new VersionedExtensionId(extensionId, version);\n\t}\n\n\tconstructor(\n\t\tpublic readonly extensionId: string,\n\t\tpublic readonly version: string,\n\t) { }\n\n\ttoString(): string {\n\t\treturn `${this.extensionId}@${this.version}`;\n\t}\n}\n\nexport type InlineCompletionsDisposeReason = { kind: 'lostRace' | 'tokenCancellation' | 'other' | 'empty' | 'notTaken' };\n\nexport enum InlineCompletionEndOfLifeReasonKind {\n\tAccepted = 0,\n\tRejected = 1,\n\tIgnored = 2,\n}\n\nexport type InlineCompletionEndOfLifeReason<TInlineCompletion = InlineCompletion> = {\n\tkind: InlineCompletionEndOfLifeReasonKind.Accepted; // User did an explicit action to accept\n} | {\n\tkind: InlineCompletionEndOfLifeReasonKind.Rejected; // User did an explicit action to reject\n} | {\n\tkind: InlineCompletionEndOfLifeReasonKind.Ignored;\n\tsupersededBy?: TInlineCompletion;\n\tuserTypingDisagreed: boolean;\n};\n\nexport type LifetimeSummary = {\n\trequestUuid: string;\n\tcorrelationId: string | undefined;\n\tpartiallyAccepted: number;\n\tpartiallyAcceptedCountSinceOriginal: number;\n\tpartiallyAcceptedRatioSinceOriginal: number;\n\tpartiallyAcceptedCharactersSinceOriginal: number;\n\tshown: boolean;\n\tshownDuration: number;\n\tshownDurationUncollapsed: number;\n\ttimeUntilShown: number | undefined;\n\ttimeUntilProviderRequest: number;\n\ttimeUntilProviderResponse: number;\n\teditorType: string;\n\tviewKind: string | undefined;\n\terror: string | undefined;\n\tpreceeded: boolean;\n\tlanguageId: string;\n\trequestReason: string;\n\tcursorColumnDistance?: number;\n\tcursorLineDistance?: number;\n\tlineCountOriginal?: number;\n\tlineCountModified?: number;\n\tcharacterCountOriginal?: number;\n\tcharacterCountModified?: number;\n\tdisjointReplacements?: number;\n\tsameShapeReplacements?: boolean;\n\ttypingInterval: number;\n\ttypingIntervalCharacterCount: number;\n};\n\nexport interface CodeAction {\n\ttitle: string;\n\tcommand?: Command;\n\tedit?: WorkspaceEdit;\n\tdiagnostics?: IMarkerData[];\n\tkind?: string;\n\tisPreferred?: boolean;\n\tisAI?: boolean;\n\tdisabled?: string;\n\tranges?: IRange[];\n}\n\nexport const enum CodeActionTriggerType {\n\tInvoke = 1,\n\tAuto = 2,\n}\n\n/**\n * @internal\n */\nexport interface CodeActionContext {\n\tonly?: string;\n\ttrigger: CodeActionTriggerType;\n}\n\nexport interface CodeActionList extends IDisposable {\n\treadonly actions: ReadonlyArray<CodeAction>;\n}\n\n/**\n * The code action interface defines the contract between extensions and\n * the [light bulb](https://code.visualstudio.com/docs/editor/editingevolved#_code-action) feature.\n * @internal\n */\nexport interface CodeActionProvider {\n\n\tdisplayName?: string;\n\n\textensionId?: string;\n\n\t/**\n\t * Provide commands for the given document and range.\n\t */\n\tprovideCodeActions(model: model.ITextModel, range: Range | Selection, context: CodeActionContext, token: CancellationToken): ProviderResult<CodeActionList>;\n\n\t/**\n\t * Given a code action fill in the edit. Will only invoked when missing.\n\t */\n\tresolveCodeAction?(codeAction: CodeAction, token: CancellationToken): ProviderResult<CodeAction>;\n\n\t/**\n\t * Optional list of CodeActionKinds that this provider returns.\n\t */\n\treadonly providedCodeActionKinds?: ReadonlyArray<string>;\n\n\treadonly documentation?: ReadonlyArray<{ readonly kind: string; readonly command: Command }>;\n\n\t/**\n\t * @internal\n\t */\n\t_getAdditionalMenuItems?(context: CodeActionContext, actions: readonly CodeAction[]): Command[];\n}\n\n/**\n * @internal\n */\nexport interface DocumentPasteEdit {\n\treadonly title: string;\n\treadonly kind: HierarchicalKind;\n\treadonly handledMimeType?: string;\n\tyieldTo?: readonly DropYieldTo[];\n\tinsertText: string | { readonly snippet: string };\n\tadditionalEdit?: WorkspaceEdit;\n}\n\n/**\n * @internal\n */\nexport enum DocumentPasteTriggerKind {\n\tAutomatic = 0,\n\tPasteAs = 1,\n}\n\n/**\n * @internal\n */\nexport interface DocumentPasteContext {\n\treadonly only?: HierarchicalKind;\n\treadonly triggerKind: DocumentPasteTriggerKind;\n}\n\n/**\n * @internal\n */\nexport interface DocumentPasteEditsSession {\n\tedits: readonly DocumentPasteEdit[];\n\tdispose(): void;\n}\n\n/**\n * @internal\n */\nexport interface DocumentPasteEditProvider {\n\treadonly id?: string;\n\treadonly copyMimeTypes: readonly string[];\n\treadonly pasteMimeTypes: readonly string[];\n\treadonly providedPasteEditKinds: readonly HierarchicalKind[];\n\n\tprepareDocumentPaste?(model: model.ITextModel, ranges: readonly IRange[], dataTransfer: IReadonlyVSDataTransfer, token: CancellationToken): Promise<undefined | IReadonlyVSDataTransfer>;\n\n\tprovideDocumentPasteEdits?(model: model.ITextModel, ranges: readonly IRange[], dataTransfer: IReadonlyVSDataTransfer, context: DocumentPasteContext, token: CancellationToken): Promise<DocumentPasteEditsSession | undefined>;\n\n\tresolveDocumentPasteEdit?(edit: DocumentPasteEdit, token: CancellationToken): Promise<DocumentPasteEdit>;\n}\n\n/**\n * Represents a parameter of a callable-signature. A parameter can\n * have a label and a doc-comment.\n */\nexport interface ParameterInformation {\n\t/**\n\t * The label of this signature. Will be shown in\n\t * the UI.\n\t */\n\tlabel: string | [number, number];\n\t/**\n\t * The human-readable doc-comment of this signature. Will be shown\n\t * in the UI but can be omitted.\n\t */\n\tdocumentation?: string | IMarkdownString;\n}\n/**\n * Represents the signature of something callable. A signature\n * can have a label, like a function-name, a doc-comment, and\n * a set of parameters.\n */\nexport interface SignatureInformation {\n\t/**\n\t * The label of this signature. Will be shown in\n\t * the UI.\n\t */\n\tlabel: string;\n\t/**\n\t * The human-readable doc-comment of this signature. Will be shown\n\t * in the UI but can be omitted.\n\t */\n\tdocumentation?: string | IMarkdownString;\n\t/**\n\t * The parameters of this signature.\n\t */\n\tparameters: ParameterInformation[];\n\t/**\n\t * Index of the active parameter.\n\t *\n\t * If provided, this is used in place of `SignatureHelp.activeSignature`.\n\t */\n\tactiveParameter?: number;\n}\n/**\n * Signature help represents the signature of something\n * callable. There can be multiple signatures but only one\n * active and only one active parameter.\n */\nexport interface SignatureHelp {\n\t/**\n\t * One or more signatures.\n\t */\n\tsignatures: SignatureInformation[];\n\t/**\n\t * The active signature.\n\t */\n\tactiveSignature: number;\n\t/**\n\t * The active parameter of the active signature.\n\t */\n\tactiveParameter: number;\n}\n\nexport interface SignatureHelpResult extends IDisposable {\n\tvalue: SignatureHelp;\n}\n\nexport enum SignatureHelpTriggerKind {\n\tInvoke = 1,\n\tTriggerCharacter = 2,\n\tContentChange = 3,\n}\n\nexport interface SignatureHelpContext {\n\treadonly triggerKind: SignatureHelpTriggerKind;\n\treadonly triggerCharacter?: string;\n\treadonly isRetrigger: boolean;\n\treadonly activeSignatureHelp?: SignatureHelp;\n}\n\n/**\n * The signature help provider interface defines the contract between extensions and\n * the [parameter hints](https://code.visualstudio.com/docs/editor/intellisense)-feature.\n */\nexport interface SignatureHelpProvider {\n\n\treadonly signatureHelpTriggerCharacters?: ReadonlyArray<string>;\n\treadonly signatureHelpRetriggerCharacters?: ReadonlyArray<string>;\n\n\t/**\n\t * Provide help for the signature at the given position and document.\n\t */\n\tprovideSignatureHelp(model: model.ITextModel, position: Position, token: CancellationToken, context: SignatureHelpContext): ProviderResult<SignatureHelpResult>;\n}\n\n/**\n * A document highlight kind.\n */\nexport enum DocumentHighlightKind {\n\t/**\n\t * A textual occurrence.\n\t */\n\tText,\n\t/**\n\t * Read-access of a symbol, like reading a variable.\n\t */\n\tRead,\n\t/**\n\t * Write-access of a symbol, like writing to a variable.\n\t */\n\tWrite\n}\n/**\n * A document highlight is a range inside a text document which deserves\n * special attention. Usually a document highlight is visualized by changing\n * the background color of its range.\n */\nexport interface DocumentHighlight {\n\t/**\n\t * The range this highlight applies to.\n\t */\n\trange: IRange;\n\t/**\n\t * The highlight kind, default is {@link DocumentHighlightKind.Text text}.\n\t */\n\tkind?: DocumentHighlightKind;\n}\n\n/**\n * Represents a set of document highlights for a specific URI.\n */\nexport interface MultiDocumentHighlight {\n\t/**\n\t * The URI of the document that the highlights belong to.\n\t */\n\turi: URI;\n\n\t/**\n\t * The set of highlights for the document.\n\t */\n\thighlights: DocumentHighlight[];\n}\n\n/**\n * The document highlight provider interface defines the contract between extensions and\n * the word-highlight-feature.\n */\nexport interface DocumentHighlightProvider {\n\t/**\n\t * Provide a set of document highlights, like all occurrences of a variable or\n\t * all exit-points of a function.\n\t */\n\tprovideDocumentHighlights(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<DocumentHighlight[]>;\n}\n\n/**\n * A provider that can provide document highlights across multiple documents.\n */\nexport interface MultiDocumentHighlightProvider {\n\treadonly selector: LanguageSelector;\n\n\t/**\n\t * Provide a Map of URI --> document highlights, like all occurrences of a variable or\n\t * all exit-points of a function.\n\t *\n\t * Used in cases such as split view, notebooks, etc. where there can be multiple documents\n\t * with shared symbols.\n\t *\n\t * @param primaryModel The primary text model.\n\t * @param position The position at which to provide document highlights.\n\t * @param otherModels The other text models to search for document highlights.\n\t * @param token A cancellation token.\n\t * @returns A map of URI to document highlights.\n\t */\n\tprovideMultiDocumentHighlights(primaryModel: model.ITextModel, position: Position, otherModels: model.ITextModel[], token: CancellationToken): ProviderResult<Map<URI, DocumentHighlight[]>>;\n}\n\n/**\n * The linked editing range provider interface defines the contract between extensions and\n * the linked editing feature.\n */\nexport interface LinkedEditingRangeProvider {\n\n\t/**\n\t * Provide a list of ranges that can be edited together.\n\t */\n\tprovideLinkedEditingRanges(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<LinkedEditingRanges>;\n}\n\n/**\n * Represents a list of ranges that can be edited together along with a word pattern to describe valid contents.\n */\nexport interface LinkedEditingRanges {\n\t/**\n\t * A list of ranges that can be edited together. The ranges must have\n\t * identical length and text content. The ranges cannot overlap\n\t */\n\tranges: IRange[];\n\n\t/**\n\t * An optional word pattern that describes valid contents for the given ranges.\n\t * If no pattern is provided, the language configuration's word pattern will be used.\n\t */\n\twordPattern?: RegExp;\n}\n\n/**\n * Value-object that contains additional information when\n * requesting references.\n */\nexport interface ReferenceContext {\n\t/**\n\t * Include the declaration of the current symbol.\n\t */\n\tincludeDeclaration: boolean;\n}\n/**\n * The reference provider interface defines the contract between extensions and\n * the [find references](https://code.visualstudio.com/docs/editor/editingevolved#_peek)-feature.\n */\nexport interface ReferenceProvider {\n\t/**\n\t * Provide a set of project-wide references for the given position and document.\n\t */\n\tprovideReferences(model: model.ITextModel, position: Position, context: ReferenceContext, token: CancellationToken): ProviderResult<Location[]>;\n}\n\n/**\n * Represents a location inside a resource, such as a line\n * inside a text file.\n */\nexport interface Location {\n\t/**\n\t * The resource identifier of this location.\n\t */\n\turi: URI;\n\t/**\n\t * The document range of this locations.\n\t */\n\trange: IRange;\n}\n\nexport interface LocationLink {\n\t/**\n\t * A range to select where this link originates from.\n\t */\n\toriginSelectionRange?: IRange;\n\n\t/**\n\t * The target uri this link points to.\n\t */\n\turi: URI;\n\n\t/**\n\t * The full range this link points to.\n\t */\n\trange: IRange;\n\n\t/**\n\t * A range to select this link points to. Must be contained\n\t * in `LocationLink.range`.\n\t */\n\ttargetSelectionRange?: IRange;\n}\n\n/**\n * @internal\n */\nexport function isLocationLink(thing: any): thing is LocationLink {\n\treturn thing\n\t\t&& URI.isUri((thing as LocationLink).uri)\n\t\t&& Range.isIRange((thing as LocationLink).range)\n\t\t&& (Range.isIRange((thing as LocationLink).originSelectionRange) || Range.isIRange((thing as LocationLink).targetSelectionRange));\n}\n\n/**\n * @internal\n */\nexport function isLocation(thing: any): thing is Location {\n\treturn thing\n\t\t&& URI.isUri((thing as Location).uri)\n\t\t&& Range.isIRange((thing as Location).range);\n}\n\n\nexport type Definition = Location | Location[] | LocationLink[];\n\n/**\n * The definition provider interface defines the contract between extensions and\n * the [go to definition](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-definition)\n * and peek definition features.\n */\nexport interface DefinitionProvider {\n\t/**\n\t * Provide the definition of the symbol at the given position and document.\n\t */\n\tprovideDefinition(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * The definition provider interface defines the contract between extensions and\n * the [go to definition](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-definition)\n * and peek definition features.\n */\nexport interface DeclarationProvider {\n\t/**\n\t * Provide the declaration of the symbol at the given position and document.\n\t */\n\tprovideDeclaration(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * The implementation provider interface defines the contract between extensions and\n * the go to implementation feature.\n */\nexport interface ImplementationProvider {\n\t/**\n\t * Provide the implementation of the symbol at the given position and document.\n\t */\n\tprovideImplementation(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * The type definition provider interface defines the contract between extensions and\n * the go to type definition feature.\n */\nexport interface TypeDefinitionProvider {\n\t/**\n\t * Provide the type definition of the symbol at the given position and document.\n\t */\n\tprovideTypeDefinition(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * A symbol kind.\n */\nexport const enum SymbolKind {\n\tFile = 0,\n\tModule = 1,\n\tNamespace = 2,\n\tPackage = 3,\n\tClass = 4,\n\tMethod = 5,\n\tProperty = 6,\n\tField = 7,\n\tConstructor = 8,\n\tEnum = 9,\n\tInterface = 10,\n\tFunction = 11,\n\tVariable = 12,\n\tConstant = 13,\n\tString = 14,\n\tNumber = 15,\n\tBoolean = 16,\n\tArray = 17,\n\tObject = 18,\n\tKey = 19,\n\tNull = 20,\n\tEnumMember = 21,\n\tStruct = 22,\n\tEvent = 23,\n\tOperator = 24,\n\tTypeParameter = 25\n}\n\n/**\n * @internal\n */\nexport const symbolKindNames: { [symbol: number]: string } = {\n\t[SymbolKind.Array]: localize('Array', \"array\"),\n\t[SymbolKind.Boolean]: localize('Boolean', \"boolean\"),\n\t[SymbolKind.Class]: localize('Class', \"class\"),\n\t[SymbolKind.Constant]: localize('Constant', \"constant\"),\n\t[SymbolKind.Constructor]: localize('Constructor', \"constructor\"),\n\t[SymbolKind.Enum]: localize('Enum', \"enumeration\"),\n\t[SymbolKind.EnumMember]: localize('EnumMember', \"enumeration member\"),\n\t[SymbolKind.Event]: localize('Event', \"event\"),\n\t[SymbolKind.Field]: localize('Field', \"field\"),\n\t[SymbolKind.File]: localize('File', \"file\"),\n\t[SymbolKind.Function]: localize('Function', \"function\"),\n\t[SymbolKind.Interface]: localize('Interface', \"interface\"),\n\t[SymbolKind.Key]: localize('Key', \"key\"),\n\t[SymbolKind.Method]: localize('Method', \"method\"),\n\t[SymbolKind.Module]: localize('Module', \"module\"),\n\t[SymbolKind.Namespace]: localize('Namespace', \"namespace\"),\n\t[SymbolKind.Null]: localize('Null', \"null\"),\n\t[SymbolKind.Number]: localize('Number', \"number\"),\n\t[SymbolKind.Object]: localize('Object', \"object\"),\n\t[SymbolKind.Operator]: localize('Operator', \"operator\"),\n\t[SymbolKind.Package]: localize('Package', \"package\"),\n\t[SymbolKind.Property]: localize('Property', \"property\"),\n\t[SymbolKind.String]: localize('String', \"string\"),\n\t[SymbolKind.Struct]: localize('Struct', \"struct\"),\n\t[SymbolKind.TypeParameter]: localize('TypeParameter', \"type parameter\"),\n\t[SymbolKind.Variable]: localize('Variable', \"variable\"),\n};\n\n/**\n * @internal\n */\nexport function getAriaLabelForSymbol(symbolName: string, kind: SymbolKind): string {\n\treturn localize('symbolAriaLabel', '{0} ({1})', symbolName, symbolKindNames[kind]);\n}\n\nexport const enum SymbolTag {\n\tDeprecated = 1,\n}\n\n/**\n * @internal\n */\nexport namespace SymbolKinds {\n\n\tconst byKind = new Map<SymbolKind, ThemeIcon>();\n\tbyKind.set(SymbolKind.File, Codicon.symbolFile);\n\tbyKind.set(SymbolKind.Module, Codicon.symbolModule);\n\tbyKind.set(SymbolKind.Namespace, Codicon.symbolNamespace);\n\tbyKind.set(SymbolKind.Package, Codicon.symbolPackage);\n\tbyKind.set(SymbolKind.Class, Codicon.symbolClass);\n\tbyKind.set(SymbolKind.Method, Codicon.symbolMethod);\n\tbyKind.set(SymbolKind.Property, Codicon.symbolProperty);\n\tbyKind.set(SymbolKind.Field, Codicon.symbolField);\n\tbyKind.set(SymbolKind.Constructor, Codicon.symbolConstructor);\n\tbyKind.set(SymbolKind.Enum, Codicon.symbolEnum);\n\tbyKind.set(SymbolKind.Interface, Codicon.symbolInterface);\n\tbyKind.set(SymbolKind.Function, Codicon.symbolFunction);\n\tbyKind.set(SymbolKind.Variable, Codicon.symbolVariable);\n\tbyKind.set(SymbolKind.Constant, Codicon.symbolConstant);\n\tbyKind.set(SymbolKind.String, Codicon.symbolString);\n\tbyKind.set(SymbolKind.Number, Codicon.symbolNumber);\n\tbyKind.set(SymbolKind.Boolean, Codicon.symbolBoolean);\n\tbyKind.set(SymbolKind.Array, Codicon.symbolArray);\n\tbyKind.set(SymbolKind.Object, Codicon.symbolObject);\n\tbyKind.set(SymbolKind.Key, Codicon.symbolKey);\n\tbyKind.set(SymbolKind.Null, Codicon.symbolNull);\n\tbyKind.set(SymbolKind.EnumMember, Codicon.symbolEnumMember);\n\tbyKind.set(SymbolKind.Struct, Codicon.symbolStruct);\n\tbyKind.set(SymbolKind.Event, Codicon.symbolEvent);\n\tbyKind.set(SymbolKind.Operator, Codicon.symbolOperator);\n\tbyKind.set(SymbolKind.TypeParameter, Codicon.symbolTypeParameter);\n\t/**\n\t * @internal\n\t */\n\texport function toIcon(kind: SymbolKind): ThemeIcon {\n\t\tlet icon = byKind.get(kind);\n\t\tif (!icon) {\n\t\t\tconsole.info('No codicon found for SymbolKind ' + kind);\n\t\t\ticon = Codicon.symbolProperty;\n\t\t}\n\t\treturn icon;\n\t}\n\n\tconst byCompletionKind = new Map<SymbolKind, CompletionItemKind>();\n\tbyCompletionKind.set(SymbolKind.File, CompletionItemKind.File);\n\tbyCompletionKind.set(SymbolKind.Module, CompletionItemKind.Module);\n\tbyCompletionKind.set(SymbolKind.Namespace, CompletionItemKind.Module);\n\tbyCompletionKind.set(SymbolKind.Package, CompletionItemKind.Module);\n\tbyCompletionKind.set(SymbolKind.Class, CompletionItemKind.Class);\n\tbyCompletionKind.set(SymbolKind.Method, CompletionItemKind.Method);\n\tbyCompletionKind.set(SymbolKind.Property, CompletionItemKind.Property);\n\tbyCompletionKind.set(SymbolKind.Field, CompletionItemKind.Field);\n\tbyCompletionKind.set(SymbolKind.Constructor, CompletionItemKind.Constructor);\n\tbyCompletionKind.set(SymbolKind.Enum, CompletionItemKind.Enum);\n\tbyCompletionKind.set(SymbolKind.Interface, CompletionItemKind.Interface);\n\tbyCompletionKind.set(SymbolKind.Function, CompletionItemKind.Function);\n\tbyCompletionKind.set(SymbolKind.Variable, CompletionItemKind.Variable);\n\tbyCompletionKind.set(SymbolKind.Constant, CompletionItemKind.Constant);\n\tbyCompletionKind.set(SymbolKind.String, CompletionItemKind.Text);\n\tbyCompletionKind.set(SymbolKind.Number, CompletionItemKind.Value);\n\tbyCompletionKind.set(SymbolKind.Boolean, CompletionItemKind.Value);\n\tbyCompletionKind.set(SymbolKind.Array, CompletionItemKind.Value);\n\tbyCompletionKind.set(SymbolKind.Object, CompletionItemKind.Value);\n\tbyCompletionKind.set(SymbolKind.Key, CompletionItemKind.Keyword);\n\tbyCompletionKind.set(SymbolKind.Null, CompletionItemKind.Value);\n\tbyCompletionKind.set(SymbolKind.EnumMember, CompletionItemKind.EnumMember);\n\tbyCompletionKind.set(SymbolKind.Struct, CompletionItemKind.Struct);\n\tbyCompletionKind.set(SymbolKind.Event, CompletionItemKind.Event);\n\tbyCompletionKind.set(SymbolKind.Operator, CompletionItemKind.Operator);\n\tbyCompletionKind.set(SymbolKind.TypeParameter, CompletionItemKind.TypeParameter);\n\t/**\n\t * @internal\n\t */\n\texport function toCompletionKind(kind: SymbolKind): CompletionItemKind {\n\t\tlet completionKind = byCompletionKind.get(kind);\n\t\tif (completionKind === undefined) {\n\t\t\tconsole.info('No completion kind found for SymbolKind ' + kind);\n\t\t\tcompletionKind = CompletionItemKind.File;\n\t\t}\n\t\treturn completionKind;\n\t}\n}\n\nexport interface DocumentSymbol {\n\tname: string;\n\tdetail: string;\n\tkind: SymbolKind;\n\ttags: ReadonlyArray<SymbolTag>;\n\tcontainerName?: string;\n\trange: IRange;\n\tselectionRange: IRange;\n\tchildren?: DocumentSymbol[];\n}\n\n/**\n * The document symbol provider interface defines the contract between extensions and\n * the [go to symbol](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-symbol)-feature.\n */\nexport interface DocumentSymbolProvider {\n\n\tdisplayName?: string;\n\n\t/**\n\t * Provide symbol information for the given document.\n\t */\n\tprovideDocumentSymbols(model: model.ITextModel, token: CancellationToken): ProviderResult<DocumentSymbol[]>;\n}\n\nexport interface TextEdit {\n\trange: IRange;\n\ttext: string;\n\teol?: model.EndOfLineSequence;\n}\n\n/** @internal */\nexport abstract class TextEdit {\n\tstatic asEditOperation(edit: TextEdit): ISingleEditOperation {\n\t\tconst range = Range.lift(edit.range);\n\t\treturn range.isEmpty()\n\t\t\t? EditOperation.insert(range.getStartPosition(), edit.text) // moves marker\n\t\t\t: EditOperation.replace(range, edit.text);\n\t}\n\tstatic isTextEdit(thing: any): thing is TextEdit {\n\t\tconst possibleTextEdit = thing as TextEdit;\n\t\treturn typeof possibleTextEdit.text === 'string' && Range.isIRange(possibleTextEdit.range);\n\t}\n}\n\n/**\n * Interface used to format a model\n */\nexport interface FormattingOptions {\n\t/**\n\t * Size of a tab in spaces.\n\t */\n\ttabSize: number;\n\t/**\n\t * Prefer spaces over tabs.\n\t */\n\tinsertSpaces: boolean;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface DocumentFormattingEditProvider {\n\n\t/**\n\t * @internal\n\t */\n\treadonly extensionId?: ExtensionIdentifier;\n\n\treadonly displayName?: string;\n\n\t/**\n\t * Provide formatting edits for a whole document.\n\t */\n\tprovideDocumentFormattingEdits(model: model.ITextModel, options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface DocumentRangeFormattingEditProvider {\n\t/**\n\t * @internal\n\t */\n\treadonly extensionId?: ExtensionIdentifier;\n\n\treadonly displayName?: string;\n\n\t/**\n\t * Provide formatting edits for a range in a document.\n\t *\n\t * The given range is a hint and providers can decide to format a smaller\n\t * or larger range. Often this is done by adjusting the start and end\n\t * of the range to full syntax nodes.\n\t */\n\tprovideDocumentRangeFormattingEdits(model: model.ITextModel, range: Range, options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n\n\tprovideDocumentRangesFormattingEdits?(model: model.ITextModel, ranges: Range[], options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface OnTypeFormattingEditProvider {\n\n\n\t/**\n\t * @internal\n\t */\n\treadonly extensionId?: ExtensionIdentifier;\n\n\tautoFormatTriggerCharacters: string[];\n\n\t/**\n\t * Provide formatting edits after a character has been typed.\n\t *\n\t * The given position and character should hint to the provider\n\t * what range the position to expand to, like find the matching `{`\n\t * when `}` has been entered.\n\t */\n\tprovideOnTypeFormattingEdits(model: model.ITextModel, position: Position, ch: string, options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n}\n\n/**\n * @internal\n */\nexport interface IInplaceReplaceSupportResult {\n\tvalue: string;\n\trange: IRange;\n}\n\n/**\n * A link inside the editor.\n */\nexport interface ILink {\n\trange: IRange;\n\turl?: URI | string;\n\ttooltip?: string;\n}\n\nexport interface ILinksList {\n\tlinks: ILink[];\n\tdispose?(): void;\n}\n/**\n * A provider of links.\n */\nexport interface LinkProvider {\n\tprovideLinks(model: model.ITextModel, token: CancellationToken): ProviderResult<ILinksList>;\n\tresolveLink?: (link: ILink, token: CancellationToken) => ProviderResult<ILink>;\n}\n\n/**\n * A color in RGBA format.\n */\nexport interface IColor {\n\n\t/**\n\t * The red component in the range [0-1].\n\t */\n\treadonly red: number;\n\n\t/**\n\t * The green component in the range [0-1].\n\t */\n\treadonly green: number;\n\n\t/**\n\t * The blue component in the range [0-1].\n\t */\n\treadonly blue: number;\n\n\t/**\n\t * The alpha component in the range [0-1].\n\t */\n\treadonly alpha: number;\n}\n\n/**\n * String representations for a color\n */\nexport interface IColorPresentation {\n\t/**\n\t * The label of this color presentation. It will be shown on the color\n\t * picker header. By default this is also the text that is inserted when selecting\n\t * this color presentation.\n\t */\n\tlabel: string;\n\t/**\n\t * An {@link TextEdit edit} which is applied to a document when selecting\n\t * this presentation for the color.\n\t */\n\ttextEdit?: TextEdit;\n\t/**\n\t * An optional array of additional {@link TextEdit text edits} that are applied when\n\t * selecting this color presentation.\n\t */\n\tadditionalTextEdits?: TextEdit[];\n}\n\n/**\n * A color range is a range in a text model which represents a color.\n */\nexport interface IColorInformation {\n\n\t/**\n\t * The range within the model.\n\t */\n\trange: IRange;\n\n\t/**\n\t * The color represented in this range.\n\t */\n\tcolor: IColor;\n}\n\n/**\n * A provider of colors for editor models.\n */\nexport interface DocumentColorProvider {\n\t/**\n\t * Provides the color ranges for a specific model.\n\t */\n\tprovideDocumentColors(model: model.ITextModel, token: CancellationToken): ProviderResult<IColorInformation[]>;\n\t/**\n\t * Provide the string representations for a color.\n\t */\n\tprovideColorPresentations(model: model.ITextModel, colorInfo: IColorInformation, token: CancellationToken): ProviderResult<IColorPresentation[]>;\n}\n\nexport interface SelectionRange {\n\trange: IRange;\n}\n\nexport interface SelectionRangeProvider {\n\t/**\n\t * Provide ranges that should be selected from the given position.\n\t */\n\tprovideSelectionRanges(model: model.ITextModel, positions: Position[], token: CancellationToken): ProviderResult<SelectionRange[][]>;\n}\n\nexport interface FoldingContext {\n}\n/**\n * A provider of folding ranges for editor models.\n */\nexport interface FoldingRangeProvider {\n\n\t/**\n\t * @internal\n\t */\n\treadonly id?: string;\n\n\t/**\n\t * An optional event to signal that the folding ranges from this provider have changed.\n\t */\n\tonDidChange?: Event<this>;\n\n\t/**\n\t * Provides the folding ranges for a specific model.\n\t */\n\tprovideFoldingRanges(model: model.ITextModel, context: FoldingContext, token: CancellationToken): ProviderResult<FoldingRange[]>;\n}\n\nexport interface FoldingRange {\n\n\t/**\n\t * The one-based start line of the range to fold. The folded area starts after the line's last character.\n\t */\n\tstart: number;\n\n\t/**\n\t * The one-based end line of the range to fold. The folded area ends with the line's last character.\n\t */\n\tend: number;\n\n\t/**\n\t * Describes the {@link FoldingRangeKind Kind} of the folding range such as {@link FoldingRangeKind.Comment Comment} or\n\t * {@link FoldingRangeKind.Region Region}. The kind is used to categorize folding ranges and used by commands\n\t * like 'Fold all comments'. See\n\t * {@link FoldingRangeKind} for an enumeration of standardized kinds.\n\t */\n\tkind?: FoldingRangeKind;\n}\nexport class FoldingRangeKind {\n\t/**\n\t * Kind for folding range representing a comment. The value of the kind is 'comment'.\n\t */\n\tstatic readonly Comment = new FoldingRangeKind('comment');\n\t/**\n\t * Kind for folding range representing a import. The value of the kind is 'imports'.\n\t */\n\tstatic readonly Imports = new FoldingRangeKind('imports');\n\t/**\n\t * Kind for folding range representing regions (for example marked by `#region`, `#endregion`).\n\t * The value of the kind is 'region'.\n\t */\n\tstatic readonly Region = new FoldingRangeKind('region');\n\n\t/**\n\t * Returns a {@link FoldingRangeKind} for the given value.\n\t *\n\t * @param value of the kind.\n\t */\n\tstatic fromValue(value: string) {\n\t\tswitch (value) {\n\t\t\tcase 'comment': return FoldingRangeKind.Comment;\n\t\t\tcase 'imports': return FoldingRangeKind.Imports;\n\t\t\tcase 'region': return FoldingRangeKind.Region;\n\t\t}\n\t\treturn new FoldingRangeKind(value);\n\t}\n\n\t/**\n\t * Creates a new {@link FoldingRangeKind}.\n\t *\n\t * @param value of the kind.\n\t */\n\tpublic constructor(public value: string) {\n\t}\n}\n\n\nexport interface WorkspaceEditMetadata {\n\tneedsConfirmation: boolean;\n\tlabel: string;\n\tdescription?: string;\n\t/**\n\t * @internal\n\t */\n\ticonPath?: ThemeIcon | URI | { light: URI; dark: URI };\n}\n\nexport interface WorkspaceFileEditOptions {\n\toverwrite?: boolean;\n\tignoreIfNotExists?: boolean;\n\tignoreIfExists?: boolean;\n\trecursive?: boolean;\n\tcopy?: boolean;\n\tfolder?: boolean;\n\tskipTrashBin?: boolean;\n\tmaxSize?: number;\n\n\t/**\n\t * @internal\n\t */\n\tcontents?: Promise<VSBuffer>;\n}\n\nexport interface IWorkspaceFileEdit {\n\toldResource?: URI;\n\tnewResource?: URI;\n\toptions?: WorkspaceFileEditOptions;\n\tmetadata?: WorkspaceEditMetadata;\n}\n\nexport interface IWorkspaceTextEdit {\n\tresource: URI;\n\ttextEdit: TextEdit & { insertAsSnippet?: boolean; keepWhitespace?: boolean };\n\tversionId: number | undefined;\n\tmetadata?: WorkspaceEditMetadata;\n}\n\nexport interface WorkspaceEdit {\n\tedits: Array<IWorkspaceTextEdit | IWorkspaceFileEdit | ICustomEdit>;\n}\n\nexport interface ICustomEdit {\n\treadonly resource: URI;\n\treadonly metadata?: WorkspaceEditMetadata;\n\tundo(): Promise<void> | void;\n\tredo(): Promise<void> | void;\n}\n\nexport interface Rejection {\n\trejectReason?: string;\n}\nexport interface RenameLocation {\n\trange: IRange;\n\ttext: string;\n}\n\nexport interface RenameProvider {\n\tprovideRenameEdits(model: model.ITextModel, position: Position, newName: string, token: CancellationToken): ProviderResult<WorkspaceEdit & Rejection>;\n\tresolveRenameLocation?(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<RenameLocation & Rejection>;\n}\n\nexport enum NewSymbolNameTag {\n\tAIGenerated = 1\n}\n\nexport enum NewSymbolNameTriggerKind {\n\tInvoke = 0,\n\tAutomatic = 1,\n}\n\nexport interface NewSymbolName {\n\treadonly newSymbolName: string;\n\treadonly tags?: readonly NewSymbolNameTag[];\n}\n\nexport interface NewSymbolNamesProvider {\n\tsupportsAutomaticNewSymbolNamesTriggerKind?: Promise<boolean | undefined>;\n\tprovideNewSymbolNames(model: model.ITextModel, range: IRange, triggerKind: NewSymbolNameTriggerKind, token: CancellationToken): ProviderResult<NewSymbolName[]>;\n}\n\nexport interface Command {\n\tid: string;\n\ttitle: string;\n\ttooltip?: string;\n\targuments?: any[];\n}\n\n/**\n * @internal\n */\nexport namespace Command {\n\n\t/**\n\t * @internal\n\t */\n\texport function is(obj: any): obj is Command {\n\t\tif (!obj || typeof obj !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<Command>obj).id === 'string' &&\n\t\t\ttypeof (<Command>obj).title === 'string';\n\t}\n}\n\n/**\n * @internal\n */\nexport interface CommentThreadTemplate {\n\tcontrollerHandle: number;\n\tlabel: string;\n\tacceptInputCommand?: Command;\n\tadditionalCommands?: Command[];\n\tdeleteCommand?: Command;\n}\n\n/**\n * @internal\n */\nexport interface CommentInfo<T = IRange> {\n\textensionId?: string;\n\tthreads: CommentThread<T>[];\n\tpendingCommentThreads?: PendingCommentThread[];\n\tcommentingRanges: CommentingRanges;\n}\n\n\n/**\n * @internal\n */\nexport interface CommentingRangeResourceHint {\n\tschemes: readonly string[];\n}\n\n/**\n * @internal\n */\nexport enum CommentThreadCollapsibleState {\n\t/**\n\t * Determines an item is collapsed\n\t */\n\tCollapsed = 0,\n\t/**\n\t * Determines an item is expanded\n\t */\n\tExpanded = 1\n}\n\n/**\n * @internal\n */\nexport enum CommentThreadState {\n\tUnresolved = 0,\n\tResolved = 1\n}\n\n/**\n * @internal\n */\nexport enum CommentThreadApplicability {\n\tCurrent = 0,\n\tOutdated = 1\n}\n\n/**\n * @internal\n */\nexport interface CommentWidget {\n\tcommentThread: CommentThread;\n\tcomment?: Comment;\n\tinput: string;\n\tonDidChangeInput: Event<string>;\n}\n\n/**\n * @internal\n */\nexport interface CommentInput {\n\tvalue: string;\n\turi: URI;\n}\n\nexport interface CommentThreadRevealOptions {\n\tpreserveFocus: boolean;\n\tfocusReply: boolean;\n}\n\n/**\n * @internal\n */\nexport interface CommentThread<T = IRange> {\n\tisDocumentCommentThread(): this is CommentThread<IRange>;\n\tcommentThreadHandle: number;\n\tcontrollerHandle: number;\n\textensionId?: string;\n\tthreadId: string;\n\tresource: string | null;\n\trange: T | undefined;\n\tlabel: string | undefined;\n\tcontextValue: string | undefined;\n\tcomments: ReadonlyArray<Comment> | undefined;\n\tonDidChangeComments: Event<readonly Comment[] | undefined>;\n\tcollapsibleState?: CommentThreadCollapsibleState;\n\tinitialCollapsibleState?: CommentThreadCollapsibleState;\n\tonDidChangeInitialCollapsibleState: Event<CommentThreadCollapsibleState | undefined>;\n\tstate?: CommentThreadState;\n\tapplicability?: CommentThreadApplicability;\n\tcanReply: boolean | CommentAuthorInformation;\n\tinput?: CommentInput;\n\tonDidChangeInput: Event<CommentInput | undefined>;\n\tonDidChangeLabel: Event<string | undefined>;\n\tonDidChangeCollapsibleState: Event<CommentThreadCollapsibleState | undefined>;\n\tonDidChangeState: Event<CommentThreadState | undefined>;\n\tonDidChangeCanReply: Event<boolean>;\n\tisDisposed: boolean;\n\tisTemplate: boolean;\n}\n\n/**\n * @internal\n */\nexport interface AddedCommentThread<T = IRange> extends CommentThread<T> {\n\teditorId?: string;\n}\n\n/**\n * @internal\n */\n\nexport interface CommentingRanges {\n\treadonly resource: URI;\n\tranges: IRange[];\n\tfileComments: boolean;\n}\n\nexport interface CommentAuthorInformation {\n\tname: string;\n\ticonPath?: UriComponents;\n\n}\n\n/**\n * @internal\n */\nexport interface CommentReaction {\n\treadonly label?: string;\n\treadonly iconPath?: UriComponents;\n\treadonly count?: number;\n\treadonly hasReacted?: boolean;\n\treadonly canEdit?: boolean;\n\treadonly reactors?: readonly string[];\n}\n\n/**\n * @internal\n */\nexport interface CommentOptions {\n\t/**\n\t * An optional string to show on the comment input box when it's collapsed.\n\t */\n\tprompt?: string;\n\n\t/**\n\t * An optional string to show as placeholder in the comment input box when it's focused.\n\t */\n\tplaceHolder?: string;\n}\n\n/**\n * @internal\n */\nexport enum CommentMode {\n\tEditing = 0,\n\tPreview = 1\n}\n\n/**\n * @internal\n */\nexport enum CommentState {\n\tPublished = 0,\n\tDraft = 1\n}\n\n/**\n * @internal\n */\nexport interface Comment {\n\treadonly uniqueIdInThread: number;\n\treadonly body: string | IMarkdownString;\n\treadonly userName: string;\n\treadonly userIconPath?: UriComponents;\n\treadonly contextValue?: string;\n\treadonly commentReactions?: CommentReaction[];\n\treadonly label?: string;\n\treadonly mode?: CommentMode;\n\treadonly timestamp?: string;\n}\n\nexport interface PendingCommentThread {\n\trange: IRange | undefined;\n\turi: URI;\n\tuniqueOwner: string;\n\tisReply: boolean;\n\tcomment: PendingComment;\n}\n\nexport interface PendingComment {\n\tbody: string;\n\tcursor: IPosition;\n}\n\n/**\n * @internal\n */\nexport interface CommentThreadChangedEvent<T> {\n\t/**\n\t * Pending comment threads.\n\t */\n\treadonly pending: PendingCommentThread[];\n\n\t/**\n\t * Added comment threads.\n\t */\n\treadonly added: AddedCommentThread<T>[];\n\n\t/**\n\t * Removed comment threads.\n\t */\n\treadonly removed: CommentThread<T>[];\n\n\t/**\n\t * Changed comment threads.\n\t */\n\treadonly changed: CommentThread<T>[];\n}\n\nexport interface CodeLens {\n\trange: IRange;\n\tid?: string;\n\tcommand?: Command;\n}\n\nexport interface CodeLensList {\n\treadonly lenses: readonly CodeLens[];\n\tdispose?(): void;\n}\n\nexport interface CodeLensProvider {\n\tonDidChange?: Event<this>;\n\tprovideCodeLenses(model: model.ITextModel, token: CancellationToken): ProviderResult<CodeLensList>;\n\tresolveCodeLens?(model: model.ITextModel, codeLens: CodeLens, token: CancellationToken): ProviderResult<CodeLens>;\n}\n\n\nexport enum InlayHintKind {\n\tType = 1,\n\tParameter = 2,\n}\n\nexport interface InlayHintLabelPart {\n\tlabel: string;\n\ttooltip?: string | IMarkdownString;\n\t// collapsible?: boolean;\n\tcommand?: Command;\n\tlocation?: Location;\n}\n\nexport interface InlayHint {\n\tlabel: string | InlayHintLabelPart[];\n\ttooltip?: string | IMarkdownString;\n\ttextEdits?: TextEdit[];\n\tposition: IPosition;\n\tkind?: InlayHintKind;\n\tpaddingLeft?: boolean;\n\tpaddingRight?: boolean;\n}\n\nexport interface InlayHintList {\n\thints: InlayHint[];\n\tdispose(): void;\n}\n\nexport interface InlayHintsProvider {\n\tdisplayName?: string;\n\tonDidChangeInlayHints?: Event<void>;\n\tprovideInlayHints(model: model.ITextModel, range: Range, token: CancellationToken): ProviderResult<InlayHintList>;\n\tresolveInlayHint?(hint: InlayHint, token: CancellationToken): ProviderResult<InlayHint>;\n}\n\nexport interface SemanticTokensLegend {\n\treadonly tokenTypes: string[];\n\treadonly tokenModifiers: string[];\n}\n\nexport interface SemanticTokens {\n\treadonly resultId?: string;\n\treadonly data: Uint32Array;\n}\n\nexport interface SemanticTokensEdit {\n\treadonly start: number;\n\treadonly deleteCount: number;\n\treadonly data?: Uint32Array;\n}\n\nexport interface SemanticTokensEdits {\n\treadonly resultId?: string;\n\treadonly edits: SemanticTokensEdit[];\n}\n\nexport interface DocumentSemanticTokensProvider {\n\tonDidChange?: Event<void>;\n\tgetLegend(): SemanticTokensLegend;\n\tprovideDocumentSemanticTokens(model: model.ITextModel, lastResultId: string | null, token: CancellationToken): ProviderResult<SemanticTokens | SemanticTokensEdits>;\n\treleaseDocumentSemanticTokens(resultId: string | undefined): void;\n}\n\nexport interface DocumentRangeSemanticTokensProvider {\n\tgetLegend(): SemanticTokensLegend;\n\tprovideDocumentRangeSemanticTokens(model: model.ITextModel, range: Range, token: CancellationToken): ProviderResult<SemanticTokens>;\n}\n\n/**\n * @internal\n */\nexport interface ITokenizationSupportChangedEvent {\n\tchangedLanguages: string[];\n\tchangedColorMap: boolean;\n}\n\n/**\n * @internal\n */\nexport interface ILazyTokenizationSupport<TSupport> {\n\tget tokenizationSupport(): Promise<TSupport | null>;\n}\n\n/**\n * @internal\n */\nexport class LazyTokenizationSupport<TSupport = ITokenizationSupport> implements IDisposable, ILazyTokenizationSupport<TSupport> {\n\tprivate _tokenizationSupport: Promise<TSupport & IDisposable | null> | null = null;\n\n\tconstructor(private readonly createSupport: () => Promise<TSupport & IDisposable | null>) {\n\t}\n\n\tdispose(): void {\n\t\tif (this._tokenizationSupport) {\n\t\t\tthis._tokenizationSupport.then((support) => {\n\t\t\t\tif (support) {\n\t\t\t\t\tsupport.dispose();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tget tokenizationSupport(): Promise<TSupport | null> {\n\t\tif (!this._tokenizationSupport) {\n\t\t\tthis._tokenizationSupport = this.createSupport();\n\t\t}\n\t\treturn this._tokenizationSupport;\n\t}\n}\n\n/**\n * @internal\n */\nexport interface ITokenizationRegistry<TSupport> {\n\n\t/**\n\t * An event triggered when:\n\t *  - a tokenization support is registered, unregistered or changed.\n\t *  - the color map is changed.\n\t */\n\tonDidChange: Event<ITokenizationSupportChangedEvent>;\n\n\t/**\n\t * Fire a change event for a language.\n\t * This is useful for languages that embed other languages.\n\t */\n\thandleChange(languageIds: string[]): void;\n\n\t/**\n\t * Register a tokenization support.\n\t */\n\tregister(languageId: string, support: TSupport): IDisposable;\n\n\t/**\n\t * Register a tokenization support factory.\n\t */\n\tregisterFactory(languageId: string, factory: ILazyTokenizationSupport<TSupport>): IDisposable;\n\n\t/**\n\t * Get or create the tokenization support for a language.\n\t * Returns `null` if not found.\n\t */\n\tgetOrCreate(languageId: string): Promise<TSupport | null>;\n\n\t/**\n\t * Get the tokenization support for a language.\n\t * Returns `null` if not found.\n\t */\n\tget(languageId: string): TSupport | null;\n\n\t/**\n\t * Returns false if a factory is still pending.\n\t */\n\tisResolved(languageId: string): boolean;\n\n\t/**\n\t * Set the new color map that all tokens will use in their ColorId binary encoded bits for foreground and background.\n\t */\n\tsetColorMap(colorMap: Color[]): void;\n\n\tgetColorMap(): Color[] | null;\n\n\tgetDefaultBackground(): Color | null;\n}\n\n/**\n * @internal\n */\nexport const TokenizationRegistry: ITokenizationRegistry<ITokenizationSupport> = new TokenizationRegistryImpl();\n\n/**\n * @internal\n */\nexport enum ExternalUriOpenerPriority {\n\tNone = 0,\n\tOption = 1,\n\tDefault = 2,\n\tPreferred = 3,\n}\n\n/**\n * @internal\n */\nexport type DropYieldTo = { readonly kind: HierarchicalKind } | { readonly mimeType: string };\n\n/**\n * @internal\n */\nexport interface DocumentDropEdit {\n\treadonly title: string;\n\treadonly kind: HierarchicalKind | undefined;\n\treadonly handledMimeType?: string;\n\treadonly yieldTo?: readonly DropYieldTo[];\n\tinsertText: string | { readonly snippet: string };\n\tadditionalEdit?: WorkspaceEdit;\n}\n\n/**\n * @internal\n */\nexport interface DocumentDropEditsSession {\n\tedits: readonly DocumentDropEdit[];\n\tdispose(): void;\n}\n\n/**\n * @internal\n */\nexport interface DocumentDropEditProvider {\n\treadonly id?: string;\n\treadonly dropMimeTypes?: readonly string[];\n\treadonly providedDropEditKinds?: readonly HierarchicalKind[];\n\n\tprovideDocumentDropEdits(model: model.ITextModel, position: IPosition, dataTransfer: IReadonlyVSDataTransfer, token: CancellationToken): ProviderResult<DocumentDropEditsSession>;\n\tresolveDocumentDropEdit?(edit: DocumentDropEdit, token: CancellationToken): Promise<DocumentDropEdit>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Token, TokenizationResult, EncodedTokenizationResult, IState } from '../languages.js';\nimport { LanguageId, FontStyle, ColorId, StandardTokenType, MetadataConsts } from '../encodedTokenAttributes.js';\n\nexport const NullState: IState = new class implements IState {\n\tpublic clone(): IState {\n\t\treturn this;\n\t}\n\tpublic equals(other: IState): boolean {\n\t\treturn (this === other);\n\t}\n};\n\nexport function nullTokenize(languageId: string, state: IState): TokenizationResult {\n\treturn new TokenizationResult([new Token(0, '', languageId)], state);\n}\n\nexport function nullTokenizeEncoded(languageId: LanguageId, state: IState | null): EncodedTokenizationResult {\n\tconst tokens = new Uint32Array(2);\n\ttokens[0] = 0;\n\ttokens[1] = (\n\t\t(languageId << MetadataConsts.LANGUAGEID_OFFSET)\n\t\t| (StandardTokenType.Other << MetadataConsts.TOKEN_TYPE_OFFSET)\n\t\t| (FontStyle.None << MetadataConsts.FONT_STYLE_OFFSET)\n\t\t| (ColorId.DefaultForeground << MetadataConsts.FOREGROUND_OFFSET)\n\t\t| (ColorId.DefaultBackground << MetadataConsts.BACKGROUND_OFFSET)\n\t) >>> 0;\n\n\treturn new EncodedTokenizationResult(tokens, state === null ? NullState : state);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { arrayInsert } from '../../../base/common/arrays.js';\n\n/**\n * An array that avoids being sparse by always\n * filling up unused indices with a default value.\n */\nexport class FixedArray<T> {\n\tprivate _store: T[] = [];\n\n\tconstructor(\n\t\tprivate readonly _default: T\n\t) { }\n\n\tpublic get(index: number): T {\n\t\tif (index < this._store.length) {\n\t\t\treturn this._store[index];\n\t\t}\n\t\treturn this._default;\n\t}\n\n\tpublic set(index: number, value: T): void {\n\t\twhile (index >= this._store.length) {\n\t\t\tthis._store[this._store.length] = this._default;\n\t\t}\n\t\tthis._store[index] = value;\n\t}\n\n\tpublic replace(index: number, oldLength: number, newLength: number): void {\n\t\tif (index >= this._store.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (oldLength === 0) {\n\t\t\tthis.insert(index, newLength);\n\t\t\treturn;\n\t\t} else if (newLength === 0) {\n\t\t\tthis.delete(index, oldLength);\n\t\t\treturn;\n\t\t}\n\n\t\tconst before = this._store.slice(0, index);\n\t\tconst after = this._store.slice(index + oldLength);\n\t\tconst insertArr = arrayFill(newLength, this._default);\n\t\tthis._store = before.concat(insertArr, after);\n\t}\n\n\tpublic delete(deleteIndex: number, deleteCount: number): void {\n\t\tif (deleteCount === 0 || deleteIndex >= this._store.length) {\n\t\t\treturn;\n\t\t}\n\t\tthis._store.splice(deleteIndex, deleteCount);\n\t}\n\n\tpublic insert(insertIndex: number, insertCount: number): void {\n\t\tif (insertCount === 0 || insertIndex >= this._store.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst arr: T[] = [];\n\t\tfor (let i = 0; i < insertCount; i++) {\n\t\t\tarr[i] = this._default;\n\t\t}\n\t\tthis._store = arrayInsert(this._store, insertIndex, arr);\n\t}\n}\n\nfunction arrayFill<T>(length: number, value: T): T[] {\n\tconst arr: T[] = [];\n\tfor (let i = 0; i < length; i++) {\n\t\tarr[i] = value;\n\t}\n\treturn arr;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Lazy } from './lazy.js';\nimport * as streams from './stream.js';\n\ninterface NodeBuffer {\n\tallocUnsafe(size: number): Uint8Array;\n\tisBuffer(obj: any): obj is NodeBuffer;\n\tfrom(arrayBuffer: ArrayBufferLike, byteOffset?: number, length?: number): Uint8Array;\n\tfrom(data: string): Uint8Array;\n}\n\ndeclare const Buffer: NodeBuffer;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst indexOfTable = new Lazy(() => new Uint8Array(256));\n\nlet textEncoder: { encode: (input: string) => Uint8Array } | null;\nlet textDecoder: { decode: (input: Uint8Array) => string } | null;\n\nexport class VSBuffer {\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for\n\t * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,\n\t * which is not transferrable.\n\t */\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromString(source: string, options?: { dontUseNodeBuffer?: boolean }): VSBuffer {\n\t\tconst dontUseNodeBuffer = options?.dontUseNodeBuffer || false;\n\t\tif (!dontUseNodeBuffer && hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromByteArray(source: number[]): VSBuffer {\n\t\tconst result = VSBuffer.alloc(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\tresult.buffer[i] = source[i];\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tstatic isNativeBuffer(buffer: unknown): boolean {\n\t\treturn hasBuffer && Buffer.isBuffer(buffer);\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tclone(): VSBuffer {\n\t\tconst result = VSBuffer.alloc(this.byteLength);\n\t\tresult.set(this);\n\t\treturn result;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performance, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: ArrayBuffer, offset?: number): void;\n\tset(array: ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else if (array instanceof Uint8Array) {\n\t\t\tthis.buffer.set(array, offset);\n\t\t} else if (array instanceof ArrayBuffer) {\n\t\t\tthis.buffer.set(new Uint8Array(array), offset);\n\t\t} else if (ArrayBuffer.isView(array)) {\n\t\t\tthis.buffer.set(new Uint8Array(array.buffer, array.byteOffset, array.byteLength), offset);\n\t\t} else {\n\t\t\tthrow new Error(`Unknown argument 'array'`);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n\n\tindexOf(subarray: VSBuffer | Uint8Array, offset = 0) {\n\t\treturn binaryIndexOf(this.buffer, subarray instanceof VSBuffer ? subarray.buffer : subarray, offset);\n\t}\n\n\tequals(other: VSBuffer): boolean {\n\t\tif (this === other) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.byteLength !== other.byteLength) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.buffer.every((value, index) => value === other.buffer[index]);\n\t}\n}\n\n/**\n * Like String.indexOf, but works on Uint8Arrays.\n * Uses the boyer-moore-horspool algorithm to be reasonably speedy.\n */\nexport function binaryIndexOf(haystack: Uint8Array, needle: Uint8Array, offset = 0): number {\n\tconst needleLen = needle.byteLength;\n\tconst haystackLen = haystack.byteLength;\n\n\tif (needleLen === 0) {\n\t\treturn 0;\n\t}\n\n\tif (needleLen === 1) {\n\t\treturn haystack.indexOf(needle[0]);\n\t}\n\n\tif (needleLen > haystackLen - offset) {\n\t\treturn -1;\n\t}\n\n\t// find index of the subarray using boyer-moore-horspool algorithm\n\tconst table = indexOfTable.value;\n\ttable.fill(needle.length);\n\tfor (let i = 0; i < needle.length; i++) {\n\t\ttable[needle[i]] = needle.length - i - 1;\n\t}\n\n\tlet i = offset + needle.length - 1;\n\tlet j = i;\n\tlet result = -1;\n\twhile (i < haystackLen) {\n\t\tif (haystack[i] === needle[j]) {\n\t\t\tif (j === 0) {\n\t\t\t\tresult = i;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ti--;\n\t\t\tj--;\n\t\t} else {\n\t\t\ti += Math.max(needle.length - j, table[haystack[i]]);\n\t\t\tj = needle.length - 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n\nexport function prefixedBufferReadable(prefix: VSBuffer, readable: VSBufferReadable): VSBufferReadable {\n\treturn streams.prefixedReadable(prefix, readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function prefixedBufferStream(prefix: VSBuffer, stream: VSBufferReadableStream): VSBufferReadableStream {\n\treturn streams.prefixedStream(prefix, stream, chunks => VSBuffer.concat(chunks));\n}\n\n/** Decodes base64 to a uint8 array. URL-encoded and unpadded base64 is allowed. */\nexport function decodeBase64(encoded: string) {\n\tlet building = 0;\n\tlet remainder = 0;\n\tlet bufi = 0;\n\n\t// The simpler way to do this is `Uint8Array.from(atob(str), c => c.charCodeAt(0))`,\n\t// but that's about 10-20x slower than this function in current Chromium versions.\n\n\tconst buffer = new Uint8Array(Math.floor(encoded.length / 4 * 3));\n\tconst append = (value: number) => {\n\t\tswitch (remainder) {\n\t\t\tcase 3:\n\t\t\t\tbuffer[bufi++] = building | value;\n\t\t\t\tremainder = 0;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 2);\n\t\t\t\tbuilding = value << 6;\n\t\t\t\tremainder = 3;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 4);\n\t\t\t\tbuilding = value << 4;\n\t\t\t\tremainder = 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbuilding = value << 2;\n\t\t\t\tremainder = 1;\n\t\t}\n\t};\n\n\tfor (let i = 0; i < encoded.length; i++) {\n\t\tconst code = encoded.charCodeAt(i);\n\t\t// See https://datatracker.ietf.org/doc/html/rfc4648#section-4\n\t\t// This branchy code is about 3x faster than an indexOf on a base64 char string.\n\t\tif (code >= 65 && code <= 90) {\n\t\t\tappend(code - 65); // A-Z starts ranges from char code 65 to 90\n\t\t} else if (code >= 97 && code <= 122) {\n\t\t\tappend(code - 97 + 26); // a-z starts ranges from char code 97 to 122, starting at byte 26\n\t\t} else if (code >= 48 && code <= 57) {\n\t\t\tappend(code - 48 + 52); // 0-9 starts ranges from char code 48 to 58, starting at byte 52\n\t\t} else if (code === 43 || code === 45) {\n\t\t\tappend(62); // \"+\" or \"-\" for URLS\n\t\t} else if (code === 47 || code === 95) {\n\t\t\tappend(63); // \"/\" or \"_\" for URLS\n\t\t} else if (code === 61) {\n\t\t\tbreak; // \"=\"\n\t\t} else {\n\t\t\tthrow new SyntaxError(`Unexpected base64 character ${encoded[i]}`);\n\t\t}\n\t}\n\n\tconst unpadded = bufi;\n\twhile (remainder > 0) {\n\t\tappend(0);\n\t}\n\n\t// slice is needed to account for overestimation due to padding\n\treturn VSBuffer.wrap(buffer).slice(0, unpadded);\n}\n\nconst base64Alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64UrlSafeAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\n\n/** Encodes a buffer to a base64 string. */\nexport function encodeBase64({ buffer }: VSBuffer, padded = true, urlSafe = false) {\n\tconst dictionary = urlSafe ? base64UrlSafeAlphabet : base64Alphabet;\n\tlet output = '';\n\n\tconst remainder = buffer.byteLength % 3;\n\n\tlet i = 0;\n\tfor (; i < buffer.byteLength - remainder; i += 3) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\tconst c = buffer[i + 2];\n\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2 | c >>> 6) & 0b111111];\n\t\toutput += dictionary[c & 0b111111];\n\t}\n\n\tif (remainder === 1) {\n\t\tconst a = buffer[i + 0];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4) & 0b111111];\n\t\tif (padded) { output += '=='; }\n\t} else if (remainder === 2) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2) & 0b111111];\n\t\tif (padded) { output += '='; }\n\t}\n\n\treturn output;\n}\n\nconst hexChars = '0123456789abcdef';\nexport function encodeHex({ buffer }: VSBuffer): string {\n\tlet result = '';\n\tfor (let i = 0; i < buffer.length; i++) {\n\t\tconst byte = buffer[i];\n\t\tresult += hexChars[byte >>> 4];\n\t\tresult += hexChars[byte & 0x0f];\n\t}\n\treturn result;\n}\n\nexport function decodeHex(hex: string): VSBuffer {\n\tif (hex.length % 2 !== 0) {\n\t\tthrow new SyntaxError('Hex string must have an even length');\n\t}\n\tconst out = new Uint8Array(hex.length >> 1);\n\tfor (let i = 0; i < hex.length;) {\n\t\tout[i >> 1] = (decodeHexChar(hex, i++) << 4) | decodeHexChar(hex, i++);\n\t}\n\treturn VSBuffer.wrap(out);\n}\n\nfunction decodeHexChar(str: string, position: number) {\n\tconst s = str.charCodeAt(position);\n\tif (s >= 48 && s <= 57) { // '0'-'9'\n\t\treturn s - 48;\n\t} else if (s >= 97 && s <= 102) { // 'a'-'f'\n\t\treturn s - 87;\n\t} else if (s >= 65 && s <= 70) { // 'A'-'F'\n\t\treturn s - 55;\n\t} else {\n\t\tthrow new SyntaxError(`Invalid hex character at position ${position}`);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Open ended enum at runtime\n */\nexport const enum LanguageId {\n\tNull = 0,\n\tPlainText = 1\n}\n\n/**\n * A font style. Values are 2^x such that a bit mask can be used.\n */\nexport const enum FontStyle {\n\tNotSet = -1,\n\tNone = 0,\n\tItalic = 1,\n\tBold = 2,\n\tUnderline = 4,\n\tStrikethrough = 8,\n}\n\n/**\n * Open ended enum at runtime\n */\nexport const enum ColorId {\n\tNone = 0,\n\tDefaultForeground = 1,\n\tDefaultBackground = 2\n}\n\n/**\n * A standard token type.\n */\nexport const enum StandardTokenType {\n\tOther = 0,\n\tComment = 1,\n\tString = 2,\n\tRegEx = 3\n}\n\n/**\n * Helpers to manage the \"collapsed\" metadata of an entire StackElement stack.\n * The following assumptions have been made:\n *  - languageId < 256 => needs 8 bits\n *  - unique color count < 512 => needs 9 bits\n *\n * The binary format is:\n * - -------------------------------------------\n *     3322 2222 2222 1111 1111 1100 0000 0000\n *     1098 7654 3210 9876 5432 1098 7654 3210\n * - -------------------------------------------\n *     xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx\n *     bbbb bbbb ffff ffff fFFF FBTT LLLL LLLL\n * - -------------------------------------------\n *  - L = LanguageId (8 bits)\n *  - T = StandardTokenType (2 bits)\n *  - B = Balanced bracket (1 bit)\n *  - F = FontStyle (4 bits)\n *  - f = foreground color (9 bits)\n *  - b = background color (8 bits)\n *\n */\nexport const enum MetadataConsts {\n\tLANGUAGEID_MASK /*            */ = 0b00000000_00000000_00000000_11111111,\n\tTOKEN_TYPE_MASK /*            */ = 0b00000000_00000000_00000011_00000000,\n\tBALANCED_BRACKETS_MASK /*     */ = 0b00000000_00000000_00000100_00000000,\n\tFONT_STYLE_MASK /*            */ = 0b00000000_00000000_01111000_00000000,\n\tFOREGROUND_MASK /*            */ = 0b00000000_11111111_10000000_00000000,\n\tBACKGROUND_MASK /*            */ = 0b11111111_00000000_00000000_00000000,\n\n\tITALIC_MASK /*                */ = 0b00000000_00000000_00001000_00000000,\n\tBOLD_MASK /*                  */ = 0b00000000_00000000_00010000_00000000,\n\tUNDERLINE_MASK /*             */ = 0b00000000_00000000_00100000_00000000,\n\tSTRIKETHROUGH_MASK /*         */ = 0b00000000_00000000_01000000_00000000,\n\n\t// Semantic tokens cannot set the language id, so we can\n\t// use the first 8 bits for control purposes\n\tSEMANTIC_USE_ITALIC /*        */ = 0b00000000_00000000_00000000_00000001,\n\tSEMANTIC_USE_BOLD /*          */ = 0b00000000_00000000_00000000_00000010,\n\tSEMANTIC_USE_UNDERLINE  /*    */ = 0b00000000_00000000_00000000_00000100,\n\tSEMANTIC_USE_STRIKETHROUGH /* */ = 0b00000000_00000000_00000000_00001000,\n\tSEMANTIC_USE_FOREGROUND /*    */ = 0b00000000_00000000_00000000_00010000,\n\tSEMANTIC_USE_BACKGROUND /*    */ = 0b00000000_00000000_00000000_00100000,\n\n\tLANGUAGEID_OFFSET = 0,\n\tTOKEN_TYPE_OFFSET = 8,\n\tBALANCED_BRACKETS_OFFSET = 10,\n\tFONT_STYLE_OFFSET = 11,\n\tFOREGROUND_OFFSET = 15,\n\tBACKGROUND_OFFSET = 24\n}\n\n/**\n */\nexport class TokenMetadata {\n\n\tpublic static getLanguageId(metadata: number): LanguageId {\n\t\treturn (metadata & MetadataConsts.LANGUAGEID_MASK) >>> MetadataConsts.LANGUAGEID_OFFSET;\n\t}\n\n\tpublic static getTokenType(metadata: number): StandardTokenType {\n\t\treturn (metadata & MetadataConsts.TOKEN_TYPE_MASK) >>> MetadataConsts.TOKEN_TYPE_OFFSET;\n\t}\n\n\tpublic static containsBalancedBrackets(metadata: number): boolean {\n\t\treturn (metadata & MetadataConsts.BALANCED_BRACKETS_MASK) !== 0;\n\t}\n\n\tpublic static getFontStyle(metadata: number): FontStyle {\n\t\treturn (metadata & MetadataConsts.FONT_STYLE_MASK) >>> MetadataConsts.FONT_STYLE_OFFSET;\n\t}\n\n\tpublic static getForeground(metadata: number): ColorId {\n\t\treturn (metadata & MetadataConsts.FOREGROUND_MASK) >>> MetadataConsts.FOREGROUND_OFFSET;\n\t}\n\n\tpublic static getBackground(metadata: number): ColorId {\n\t\treturn (metadata & MetadataConsts.BACKGROUND_MASK) >>> MetadataConsts.BACKGROUND_OFFSET;\n\t}\n\n\tpublic static getClassNameFromMetadata(metadata: number): string {\n\t\tconst foreground = this.getForeground(metadata);\n\t\tlet className = 'mtk' + foreground;\n\n\t\tconst fontStyle = this.getFontStyle(metadata);\n\t\tif (fontStyle & FontStyle.Italic) {\n\t\t\tclassName += ' mtki';\n\t\t}\n\t\tif (fontStyle & FontStyle.Bold) {\n\t\t\tclassName += ' mtkb';\n\t\t}\n\t\tif (fontStyle & FontStyle.Underline) {\n\t\t\tclassName += ' mtku';\n\t\t}\n\t\tif (fontStyle & FontStyle.Strikethrough) {\n\t\t\tclassName += ' mtks';\n\t\t}\n\n\t\treturn className;\n\t}\n\n\tpublic static getInlineStyleFromMetadata(metadata: number, colorMap: string[]): string {\n\t\tconst foreground = this.getForeground(metadata);\n\t\tconst fontStyle = this.getFontStyle(metadata);\n\n\t\tlet result = `color: ${colorMap[foreground]};`;\n\t\tif (fontStyle & FontStyle.Italic) {\n\t\t\tresult += 'font-style: italic;';\n\t\t}\n\t\tif (fontStyle & FontStyle.Bold) {\n\t\t\tresult += 'font-weight: bold;';\n\t\t}\n\t\tlet textDecoration = '';\n\t\tif (fontStyle & FontStyle.Underline) {\n\t\t\ttextDecoration += ' underline';\n\t\t}\n\t\tif (fontStyle & FontStyle.Strikethrough) {\n\t\t\ttextDecoration += ' line-through';\n\t\t}\n\t\tif (textDecoration) {\n\t\t\tresult += `text-decoration:${textDecoration};`;\n\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic static getPresentationFromMetadata(metadata: number): ITokenPresentation {\n\t\tconst foreground = this.getForeground(metadata);\n\t\tconst fontStyle = this.getFontStyle(metadata);\n\n\t\treturn {\n\t\t\tforeground: foreground,\n\t\t\titalic: Boolean(fontStyle & FontStyle.Italic),\n\t\t\tbold: Boolean(fontStyle & FontStyle.Bold),\n\t\t\tunderline: Boolean(fontStyle & FontStyle.Underline),\n\t\t\tstrikethrough: Boolean(fontStyle & FontStyle.Strikethrough),\n\t\t};\n\t}\n}\n\n/**\n */\nexport interface ITokenPresentation {\n\tforeground: ColorId;\n\titalic: boolean;\n\tbold: boolean;\n\tunderline: boolean;\n\tstrikethrough: boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILanguageIdCodec } from '../languages.js';\nimport { FontStyle, ColorId, StandardTokenType, MetadataConsts, ITokenPresentation, TokenMetadata } from '../encodedTokenAttributes.js';\nimport { IPosition } from '../core/position.js';\nimport { ITextModel } from '../model.js';\nimport { OffsetRange } from '../core/ranges/offsetRange.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\n\n\nexport interface IViewLineTokens {\n\tlanguageIdCodec: ILanguageIdCodec;\n\tequals(other: IViewLineTokens): boolean;\n\tgetCount(): number;\n\tgetStandardTokenType(tokenIndex: number): StandardTokenType;\n\tgetForeground(tokenIndex: number): ColorId;\n\tgetEndOffset(tokenIndex: number): number;\n\tgetClassName(tokenIndex: number): string;\n\tgetInlineStyle(tokenIndex: number, colorMap: string[]): string;\n\tgetPresentation(tokenIndex: number): ITokenPresentation;\n\tfindTokenIndexAtOffset(offset: number): number;\n\tgetLineContent(): string;\n\tgetMetadata(tokenIndex: number): number;\n\tgetLanguageId(tokenIndex: number): string;\n\tgetTokenText(tokenIndex: number): string;\n\tforEach(callback: (tokenIndex: number) => void): void;\n}\n\nexport class LineTokens implements IViewLineTokens {\n\tpublic static createEmpty(lineContent: string, decoder: ILanguageIdCodec): LineTokens {\n\t\tconst defaultMetadata = LineTokens.defaultTokenMetadata;\n\n\t\tconst tokens = new Uint32Array(2);\n\t\ttokens[0] = lineContent.length;\n\t\ttokens[1] = defaultMetadata;\n\n\t\treturn new LineTokens(tokens, lineContent, decoder);\n\t}\n\n\tpublic static createFromTextAndMetadata(data: { text: string; metadata: number }[], decoder: ILanguageIdCodec): LineTokens {\n\t\tlet offset: number = 0;\n\t\tlet fullText: string = '';\n\t\tconst tokens = new Array<number>();\n\t\tfor (const { text, metadata } of data) {\n\t\t\ttokens.push(offset + text.length, metadata);\n\t\t\toffset += text.length;\n\t\t\tfullText += text;\n\t\t}\n\t\treturn new LineTokens(new Uint32Array(tokens), fullText, decoder);\n\t}\n\n\tpublic static convertToEndOffset(tokens: Uint32Array, lineTextLength: number): void {\n\t\tconst tokenCount = (tokens.length >>> 1);\n\t\tconst lastTokenIndex = tokenCount - 1;\n\t\tfor (let tokenIndex = 0; tokenIndex < lastTokenIndex; tokenIndex++) {\n\t\t\ttokens[tokenIndex << 1] = tokens[(tokenIndex + 1) << 1];\n\t\t}\n\t\ttokens[lastTokenIndex << 1] = lineTextLength;\n\t}\n\n\tpublic static findIndexInTokensArray(tokens: Uint32Array, desiredIndex: number): number {\n\t\tif (tokens.length <= 2) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet low = 0;\n\t\tlet high = (tokens.length >>> 1) - 1;\n\n\t\twhile (low < high) {\n\n\t\t\tconst mid = low + Math.floor((high - low) / 2);\n\t\t\tconst endOffset = tokens[(mid << 1)];\n\n\t\t\tif (endOffset === desiredIndex) {\n\t\t\t\treturn mid + 1;\n\t\t\t} else if (endOffset < desiredIndex) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else if (endOffset > desiredIndex) {\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n\n\t_lineTokensBrand: void = undefined;\n\n\tprivate readonly _tokens: Uint32Array;\n\tprivate readonly _tokensCount: number;\n\tprivate readonly _text: string;\n\n\tpublic readonly languageIdCodec: ILanguageIdCodec;\n\n\tpublic static defaultTokenMetadata = (\n\t\t(FontStyle.None << MetadataConsts.FONT_STYLE_OFFSET)\n\t\t| (ColorId.DefaultForeground << MetadataConsts.FOREGROUND_OFFSET)\n\t\t| (ColorId.DefaultBackground << MetadataConsts.BACKGROUND_OFFSET)\n\t) >>> 0;\n\n\tconstructor(tokens: Uint32Array, text: string, decoder: ILanguageIdCodec) {\n\t\tconst tokensLength = tokens.length > 1 ? tokens[tokens.length - 2] : 0;\n\t\tif (tokensLength !== text.length) {\n\t\t\tonUnexpectedError(new Error('Token length and text length do not match!'));\n\t\t}\n\t\tthis._tokens = tokens;\n\t\tthis._tokensCount = (this._tokens.length >>> 1);\n\t\tthis._text = text;\n\t\tthis.languageIdCodec = decoder;\n\t}\n\n\tpublic getTextLength(): number {\n\t\treturn this._text.length;\n\t}\n\n\tpublic equals(other: IViewLineTokens): boolean {\n\t\tif (other instanceof LineTokens) {\n\t\t\treturn this.slicedEquals(other, 0, this._tokensCount);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic slicedEquals(other: LineTokens, sliceFromTokenIndex: number, sliceTokenCount: number): boolean {\n\t\tif (this._text !== other._text) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._tokensCount !== other._tokensCount) {\n\t\t\treturn false;\n\t\t}\n\t\tconst from = (sliceFromTokenIndex << 1);\n\t\tconst to = from + (sliceTokenCount << 1);\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tif (this._tokens[i] !== other._tokens[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getLineContent(): string {\n\t\treturn this._text;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this._tokensCount;\n\t}\n\n\tpublic getStartOffset(tokenIndex: number): number {\n\t\tif (tokenIndex > 0) {\n\t\t\treturn this._tokens[(tokenIndex - 1) << 1];\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic getMetadata(tokenIndex: number): number {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\treturn metadata;\n\t}\n\n\tpublic getLanguageId(tokenIndex: number): string {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\tconst languageId = TokenMetadata.getLanguageId(metadata);\n\t\treturn this.languageIdCodec.decodeLanguageId(languageId);\n\t}\n\n\tpublic getStandardTokenType(tokenIndex: number): StandardTokenType {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\treturn TokenMetadata.getTokenType(metadata);\n\t}\n\n\tpublic getForeground(tokenIndex: number): ColorId {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\treturn TokenMetadata.getForeground(metadata);\n\t}\n\n\tpublic getClassName(tokenIndex: number): string {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\treturn TokenMetadata.getClassNameFromMetadata(metadata);\n\t}\n\n\tpublic getInlineStyle(tokenIndex: number, colorMap: string[]): string {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\treturn TokenMetadata.getInlineStyleFromMetadata(metadata, colorMap);\n\t}\n\n\tpublic getPresentation(tokenIndex: number): ITokenPresentation {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\treturn TokenMetadata.getPresentationFromMetadata(metadata);\n\t}\n\n\tpublic getEndOffset(tokenIndex: number): number {\n\t\treturn this._tokens[tokenIndex << 1];\n\t}\n\n\t/**\n\t * Find the token containing offset `offset`.\n\t * @param offset The search offset\n\t * @return The index of the token containing the offset.\n\t */\n\tpublic findTokenIndexAtOffset(offset: number): number {\n\t\treturn LineTokens.findIndexInTokensArray(this._tokens, offset);\n\t}\n\n\tpublic inflate(): IViewLineTokens {\n\t\treturn this;\n\t}\n\n\tpublic sliceAndInflate(startOffset: number, endOffset: number, deltaOffset: number): IViewLineTokens {\n\t\treturn new SliceLineTokens(this, startOffset, endOffset, deltaOffset);\n\t}\n\n\tpublic sliceZeroCopy(range: OffsetRange): IViewLineTokens {\n\t\treturn this.sliceAndInflate(range.start, range.endExclusive, 0);\n\t}\n\n\t/**\n\t * @pure\n\t * @param insertTokens Must be sorted by offset.\n\t*/\n\tpublic withInserted(insertTokens: { offset: number; text: string; tokenMetadata: number }[]): LineTokens {\n\t\tif (insertTokens.length === 0) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet nextOriginalTokenIdx = 0;\n\t\tlet nextInsertTokenIdx = 0;\n\t\tlet text = '';\n\t\tconst newTokens = new Array<number>();\n\n\t\tlet originalEndOffset = 0;\n\t\twhile (true) {\n\t\t\tconst nextOriginalTokenEndOffset = nextOriginalTokenIdx < this._tokensCount ? this._tokens[nextOriginalTokenIdx << 1] : -1;\n\t\t\tconst nextInsertToken = nextInsertTokenIdx < insertTokens.length ? insertTokens[nextInsertTokenIdx] : null;\n\n\t\t\tif (nextOriginalTokenEndOffset !== -1 && (nextInsertToken === null || nextOriginalTokenEndOffset <= nextInsertToken.offset)) {\n\t\t\t\t// original token ends before next insert token\n\t\t\t\ttext += this._text.substring(originalEndOffset, nextOriginalTokenEndOffset);\n\t\t\t\tconst metadata = this._tokens[(nextOriginalTokenIdx << 1) + 1];\n\t\t\t\tnewTokens.push(text.length, metadata);\n\t\t\t\tnextOriginalTokenIdx++;\n\t\t\t\toriginalEndOffset = nextOriginalTokenEndOffset;\n\n\t\t\t} else if (nextInsertToken) {\n\t\t\t\tif (nextInsertToken.offset > originalEndOffset) {\n\t\t\t\t\t// insert token is in the middle of the next token.\n\t\t\t\t\ttext += this._text.substring(originalEndOffset, nextInsertToken.offset);\n\t\t\t\t\tconst metadata = this._tokens[(nextOriginalTokenIdx << 1) + 1];\n\t\t\t\t\tnewTokens.push(text.length, metadata);\n\t\t\t\t\toriginalEndOffset = nextInsertToken.offset;\n\t\t\t\t}\n\n\t\t\t\ttext += nextInsertToken.text;\n\t\t\t\tnewTokens.push(text.length, nextInsertToken.tokenMetadata);\n\t\t\t\tnextInsertTokenIdx++;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn new LineTokens(new Uint32Array(newTokens), text, this.languageIdCodec);\n\t}\n\n\tpublic getTokensInRange(range: OffsetRange): TokenArray {\n\t\tconst builder = new TokenArrayBuilder();\n\n\t\tconst startTokenIndex = this.findTokenIndexAtOffset(range.start);\n\t\tconst endTokenIndex = this.findTokenIndexAtOffset(range.endExclusive);\n\n\t\tfor (let tokenIndex = startTokenIndex; tokenIndex <= endTokenIndex; tokenIndex++) {\n\t\t\tconst tokenRange = new OffsetRange(this.getStartOffset(tokenIndex), this.getEndOffset(tokenIndex));\n\t\t\tconst length = tokenRange.intersectionLength(range);\n\t\t\tif (length > 0) {\n\t\t\t\tbuilder.add(length, this.getMetadata(tokenIndex));\n\t\t\t}\n\t\t}\n\n\t\treturn builder.build();\n\t}\n\n\tpublic getTokenText(tokenIndex: number): string {\n\t\tconst startOffset = this.getStartOffset(tokenIndex);\n\t\tconst endOffset = this.getEndOffset(tokenIndex);\n\t\tconst text = this._text.substring(startOffset, endOffset);\n\t\treturn text;\n\t}\n\n\tpublic forEach(callback: (tokenIndex: number) => void): void {\n\t\tconst tokenCount = this.getCount();\n\t\tfor (let tokenIndex = 0; tokenIndex < tokenCount; tokenIndex++) {\n\t\t\tcallback(tokenIndex);\n\t\t}\n\t}\n\n\ttoString(): string {\n\t\tlet result = '';\n\t\tthis.forEach((i) => {\n\t\t\tresult += `[${this.getTokenText(i)}]{${this.getClassName(i)}}`;\n\t\t});\n\t\treturn result;\n\t}\n}\n\nclass SliceLineTokens implements IViewLineTokens {\n\n\tprivate readonly _source: LineTokens;\n\tprivate readonly _startOffset: number;\n\tprivate readonly _endOffset: number;\n\tprivate readonly _deltaOffset: number;\n\n\tprivate readonly _firstTokenIndex: number;\n\tprivate readonly _tokensCount: number;\n\n\tpublic readonly languageIdCodec: ILanguageIdCodec;\n\n\tconstructor(source: LineTokens, startOffset: number, endOffset: number, deltaOffset: number) {\n\t\tthis._source = source;\n\t\tthis._startOffset = startOffset;\n\t\tthis._endOffset = endOffset;\n\t\tthis._deltaOffset = deltaOffset;\n\t\tthis._firstTokenIndex = source.findTokenIndexAtOffset(startOffset);\n\t\tthis.languageIdCodec = source.languageIdCodec;\n\n\t\tthis._tokensCount = 0;\n\t\tfor (let i = this._firstTokenIndex, len = source.getCount(); i < len; i++) {\n\t\t\tconst tokenStartOffset = source.getStartOffset(i);\n\t\t\tif (tokenStartOffset >= endOffset) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._tokensCount++;\n\t\t}\n\t}\n\n\tpublic getMetadata(tokenIndex: number): number {\n\t\treturn this._source.getMetadata(this._firstTokenIndex + tokenIndex);\n\t}\n\n\tpublic getLanguageId(tokenIndex: number): string {\n\t\treturn this._source.getLanguageId(this._firstTokenIndex + tokenIndex);\n\t}\n\n\tpublic getLineContent(): string {\n\t\treturn this._source.getLineContent().substring(this._startOffset, this._endOffset);\n\t}\n\n\tpublic equals(other: IViewLineTokens): boolean {\n\t\tif (other instanceof SliceLineTokens) {\n\t\t\treturn (\n\t\t\t\tthis._startOffset === other._startOffset\n\t\t\t\t&& this._endOffset === other._endOffset\n\t\t\t\t&& this._deltaOffset === other._deltaOffset\n\t\t\t\t&& this._source.slicedEquals(other._source, this._firstTokenIndex, this._tokensCount)\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this._tokensCount;\n\t}\n\n\tpublic getStandardTokenType(tokenIndex: number): StandardTokenType {\n\t\treturn this._source.getStandardTokenType(this._firstTokenIndex + tokenIndex);\n\t}\n\n\tpublic getForeground(tokenIndex: number): ColorId {\n\t\treturn this._source.getForeground(this._firstTokenIndex + tokenIndex);\n\t}\n\n\tpublic getEndOffset(tokenIndex: number): number {\n\t\tconst tokenEndOffset = this._source.getEndOffset(this._firstTokenIndex + tokenIndex);\n\t\treturn Math.min(this._endOffset, tokenEndOffset) - this._startOffset + this._deltaOffset;\n\t}\n\n\tpublic getClassName(tokenIndex: number): string {\n\t\treturn this._source.getClassName(this._firstTokenIndex + tokenIndex);\n\t}\n\n\tpublic getInlineStyle(tokenIndex: number, colorMap: string[]): string {\n\t\treturn this._source.getInlineStyle(this._firstTokenIndex + tokenIndex, colorMap);\n\t}\n\n\tpublic getPresentation(tokenIndex: number): ITokenPresentation {\n\t\treturn this._source.getPresentation(this._firstTokenIndex + tokenIndex);\n\t}\n\n\tpublic findTokenIndexAtOffset(offset: number): number {\n\t\treturn this._source.findTokenIndexAtOffset(offset + this._startOffset - this._deltaOffset) - this._firstTokenIndex;\n\t}\n\n\tpublic getTokenText(tokenIndex: number): string {\n\t\tconst adjustedTokenIndex = this._firstTokenIndex + tokenIndex;\n\t\tconst tokenStartOffset = this._source.getStartOffset(adjustedTokenIndex);\n\t\tconst tokenEndOffset = this._source.getEndOffset(adjustedTokenIndex);\n\t\tlet text = this._source.getTokenText(adjustedTokenIndex);\n\t\tif (tokenStartOffset < this._startOffset) {\n\t\t\ttext = text.substring(this._startOffset - tokenStartOffset);\n\t\t}\n\t\tif (tokenEndOffset > this._endOffset) {\n\t\t\ttext = text.substring(0, text.length - (tokenEndOffset - this._endOffset));\n\t\t}\n\t\treturn text;\n\t}\n\n\tpublic forEach(callback: (tokenIndex: number) => void): void {\n\t\tfor (let tokenIndex = 0; tokenIndex < this.getCount(); tokenIndex++) {\n\t\t\tcallback(tokenIndex);\n\t\t}\n\t}\n}\n\nexport function getStandardTokenTypeAtPosition(model: ITextModel, position: IPosition): StandardTokenType | undefined {\n\tconst lineNumber = position.lineNumber;\n\tif (!model.tokenization.isCheapToTokenize(lineNumber)) {\n\t\treturn undefined;\n\t}\n\tmodel.tokenization.forceTokenization(lineNumber);\n\tconst lineTokens = model.tokenization.getLineTokens(lineNumber);\n\tconst tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n\tconst tokenType = lineTokens.getStandardTokenType(tokenIndex);\n\treturn tokenType;\n}\n\n\n\n/**\n * This class represents a sequence of tokens.\n * Conceptually, each token has a length and a metadata number.\n * A token array might be used to annotate a string with metadata.\n * Use {@link TokenArrayBuilder} to efficiently create a token array.\n *\n * TODO: Make this class more efficient (e.g. by using a Int32Array).\n*/\nexport class TokenArray {\n\tpublic static fromLineTokens(lineTokens: LineTokens): TokenArray {\n\t\tconst tokenInfo: TokenInfo[] = [];\n\t\tfor (let i = 0; i < lineTokens.getCount(); i++) {\n\t\t\ttokenInfo.push(new TokenInfo(lineTokens.getEndOffset(i) - lineTokens.getStartOffset(i), lineTokens.getMetadata(i)));\n\t\t}\n\t\treturn TokenArray.create(tokenInfo);\n\t}\n\n\tpublic static create(tokenInfo: TokenInfo[]): TokenArray {\n\t\treturn new TokenArray(tokenInfo);\n\t}\n\n\tprivate constructor(\n\t\tprivate readonly _tokenInfo: TokenInfo[]\n\t) { }\n\n\tpublic toLineTokens(lineContent: string, decoder: ILanguageIdCodec): LineTokens {\n\t\treturn LineTokens.createFromTextAndMetadata(this.map((r, t) => ({ text: r.substring(lineContent), metadata: t.metadata })), decoder);\n\t}\n\n\tpublic forEach(cb: (range: OffsetRange, tokenInfo: TokenInfo) => void): void {\n\t\tlet lengthSum = 0;\n\t\tfor (const tokenInfo of this._tokenInfo) {\n\t\t\tconst range = new OffsetRange(lengthSum, lengthSum + tokenInfo.length);\n\t\t\tcb(range, tokenInfo);\n\t\t\tlengthSum += tokenInfo.length;\n\t\t}\n\t}\n\n\tpublic map<T>(cb: (range: OffsetRange, tokenInfo: TokenInfo) => T): T[] {\n\t\tconst result: T[] = [];\n\t\tlet lengthSum = 0;\n\t\tfor (const tokenInfo of this._tokenInfo) {\n\t\t\tconst range = new OffsetRange(lengthSum, lengthSum + tokenInfo.length);\n\t\t\tresult.push(cb(range, tokenInfo));\n\t\t\tlengthSum += tokenInfo.length;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic slice(range: OffsetRange): TokenArray {\n\t\tconst result: TokenInfo[] = [];\n\t\tlet lengthSum = 0;\n\t\tfor (const tokenInfo of this._tokenInfo) {\n\t\t\tconst tokenStart = lengthSum;\n\t\t\tconst tokenEndEx = tokenStart + tokenInfo.length;\n\t\t\tif (tokenEndEx > range.start) {\n\t\t\t\tif (tokenStart >= range.endExclusive) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst deltaBefore = Math.max(0, range.start - tokenStart);\n\t\t\t\tconst deltaAfter = Math.max(0, tokenEndEx - range.endExclusive);\n\n\t\t\t\tresult.push(new TokenInfo(tokenInfo.length - deltaBefore - deltaAfter, tokenInfo.metadata));\n\t\t\t}\n\n\t\t\tlengthSum += tokenInfo.length;\n\t\t}\n\t\treturn TokenArray.create(result);\n\t}\n\n\tpublic append(other: TokenArray): TokenArray {\n\t\tconst result: TokenInfo[] = this._tokenInfo.concat(other._tokenInfo);\n\t\treturn TokenArray.create(result);\n\t}\n}\n\nexport type ITokenMetadata = number;\n\nexport class TokenInfo {\n\tconstructor(\n\t\tpublic readonly length: number,\n\t\tpublic readonly metadata: ITokenMetadata\n\t) { }\n}\n/**\n * TODO: Make this class more efficient (e.g. by using a Int32Array).\n*/\n\nexport class TokenArrayBuilder {\n\tprivate readonly _tokens: TokenInfo[] = [];\n\n\tpublic add(length: number, metadata: ITokenMetadata): void {\n\t\tthis._tokens.push(new TokenInfo(length, metadata));\n\t}\n\n\tpublic build(): TokenArray {\n\t\treturn TokenArray.create(this._tokens);\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LineTokens } from './lineTokens.js';\n\nexport const EMPTY_LINE_TOKENS = (new Uint32Array(0)).buffer;\n\nexport class ContiguousTokensEditing {\n\n\tpublic static deleteBeginning(lineTokens: Uint32Array | ArrayBuffer | null, toChIndex: number): Uint32Array | ArrayBuffer | null {\n\t\tif (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n\t\t\treturn lineTokens;\n\t\t}\n\t\treturn ContiguousTokensEditing.delete(lineTokens, 0, toChIndex);\n\t}\n\n\tpublic static deleteEnding(lineTokens: Uint32Array | ArrayBuffer | null, fromChIndex: number): Uint32Array | ArrayBuffer | null {\n\t\tif (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tconst tokens = toUint32Array(lineTokens);\n\t\tconst lineTextLength = tokens[tokens.length - 2];\n\t\treturn ContiguousTokensEditing.delete(lineTokens, fromChIndex, lineTextLength);\n\t}\n\n\tpublic static delete(lineTokens: Uint32Array | ArrayBuffer | null, fromChIndex: number, toChIndex: number): Uint32Array | ArrayBuffer | null {\n\t\tif (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS || fromChIndex === toChIndex) {\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tconst tokens = toUint32Array(lineTokens);\n\t\tconst tokensCount = (tokens.length >>> 1);\n\n\t\t// special case: deleting everything\n\t\tif (fromChIndex === 0 && tokens[tokens.length - 2] === toChIndex) {\n\t\t\treturn EMPTY_LINE_TOKENS;\n\t\t}\n\n\t\tconst fromTokenIndex = LineTokens.findIndexInTokensArray(tokens, fromChIndex);\n\t\tconst fromTokenStartOffset = (fromTokenIndex > 0 ? tokens[(fromTokenIndex - 1) << 1] : 0);\n\t\tconst fromTokenEndOffset = tokens[fromTokenIndex << 1];\n\n\t\tif (toChIndex < fromTokenEndOffset) {\n\t\t\t// the delete range is inside a single token\n\t\t\tconst delta = (toChIndex - fromChIndex);\n\t\t\tfor (let i = fromTokenIndex; i < tokensCount; i++) {\n\t\t\t\ttokens[i << 1] -= delta;\n\t\t\t}\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tlet dest: number;\n\t\tlet lastEnd: number;\n\t\tif (fromTokenStartOffset !== fromChIndex) {\n\t\t\ttokens[fromTokenIndex << 1] = fromChIndex;\n\t\t\tdest = ((fromTokenIndex + 1) << 1);\n\t\t\tlastEnd = fromChIndex;\n\t\t} else {\n\t\t\tdest = (fromTokenIndex << 1);\n\t\t\tlastEnd = fromTokenStartOffset;\n\t\t}\n\n\t\tconst delta = (toChIndex - fromChIndex);\n\t\tfor (let tokenIndex = fromTokenIndex + 1; tokenIndex < tokensCount; tokenIndex++) {\n\t\t\tconst tokenEndOffset = tokens[tokenIndex << 1] - delta;\n\t\t\tif (tokenEndOffset > lastEnd) {\n\t\t\t\ttokens[dest++] = tokenEndOffset;\n\t\t\t\ttokens[dest++] = tokens[(tokenIndex << 1) + 1];\n\t\t\t\tlastEnd = tokenEndOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (dest === tokens.length) {\n\t\t\t// nothing to trim\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tconst tmp = new Uint32Array(dest);\n\t\ttmp.set(tokens.subarray(0, dest), 0);\n\t\treturn tmp.buffer;\n\t}\n\n\tpublic static append(lineTokens: Uint32Array | ArrayBuffer | null, _otherTokens: Uint32Array | ArrayBuffer | null): Uint32Array | ArrayBuffer | null {\n\t\tif (_otherTokens === EMPTY_LINE_TOKENS) {\n\t\t\treturn lineTokens;\n\t\t}\n\t\tif (lineTokens === EMPTY_LINE_TOKENS) {\n\t\t\treturn _otherTokens;\n\t\t}\n\t\tif (lineTokens === null) {\n\t\t\treturn lineTokens;\n\t\t}\n\t\tif (_otherTokens === null) {\n\t\t\t// cannot determine combined line length...\n\t\t\treturn null;\n\t\t}\n\t\tconst myTokens = toUint32Array(lineTokens);\n\t\tconst otherTokens = toUint32Array(_otherTokens);\n\t\tconst otherTokensCount = (otherTokens.length >>> 1);\n\n\t\tconst result = new Uint32Array(myTokens.length + otherTokens.length);\n\t\tresult.set(myTokens, 0);\n\t\tlet dest = myTokens.length;\n\t\tconst delta = myTokens[myTokens.length - 2];\n\t\tfor (let i = 0; i < otherTokensCount; i++) {\n\t\t\tresult[dest++] = otherTokens[(i << 1)] + delta;\n\t\t\tresult[dest++] = otherTokens[(i << 1) + 1];\n\t\t}\n\t\treturn result.buffer;\n\t}\n\n\tpublic static insert(lineTokens: Uint32Array | ArrayBuffer | null, chIndex: number, textLength: number): Uint32Array | ArrayBuffer | null {\n\t\tif (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n\t\t\t// nothing to do\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tconst tokens = toUint32Array(lineTokens);\n\t\tconst tokensCount = (tokens.length >>> 1);\n\n\t\tlet fromTokenIndex = LineTokens.findIndexInTokensArray(tokens, chIndex);\n\t\tif (fromTokenIndex > 0) {\n\t\t\tconst fromTokenStartOffset = tokens[(fromTokenIndex - 1) << 1];\n\t\t\tif (fromTokenStartOffset === chIndex) {\n\t\t\t\tfromTokenIndex--;\n\t\t\t}\n\t\t}\n\t\tfor (let tokenIndex = fromTokenIndex; tokenIndex < tokensCount; tokenIndex++) {\n\t\t\ttokens[tokenIndex << 1] += textLength;\n\t\t}\n\t\treturn lineTokens;\n\t}\n}\n\nexport function toUint32Array(arr: Uint32Array | ArrayBuffer): Uint32Array<ArrayBuffer> {\n\tif (arr instanceof Uint32Array) {\n\t\treturn arr as Uint32Array<ArrayBuffer>;\n\t} else {\n\t\treturn new Uint32Array<ArrayBuffer>(arr);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from '../../../base/common/arrays.js';\nimport { readUInt32BE, writeUInt32BE } from '../../../base/common/buffer.js';\nimport { Position } from '../core/position.js';\nimport { IRange } from '../core/range.js';\nimport { countEOL } from '../core/misc/eolCounter.js';\nimport { ContiguousTokensEditing } from './contiguousTokensEditing.js';\nimport { LineRange } from '../core/ranges/lineRange.js';\n\n/**\n * Represents contiguous tokens over a contiguous range of lines.\n */\nexport class ContiguousMultilineTokens {\n\tpublic static deserialize(buff: Uint8Array, offset: number, result: ContiguousMultilineTokens[]): number {\n\t\tconst view32 = new Uint32Array(buff.buffer);\n\t\tconst startLineNumber = readUInt32BE(buff, offset); offset += 4;\n\t\tconst count = readUInt32BE(buff, offset); offset += 4;\n\t\tconst tokens: Uint32Array[] = [];\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tconst byteCount = readUInt32BE(buff, offset); offset += 4;\n\t\t\ttokens.push(view32.subarray(offset / 4, offset / 4 + byteCount / 4));\n\t\t\toffset += byteCount;\n\t\t}\n\t\tresult.push(new ContiguousMultilineTokens(startLineNumber, tokens));\n\t\treturn offset;\n\t}\n\n\t/**\n\t * The start line number for this block of tokens.\n\t */\n\tprivate _startLineNumber: number;\n\n\t/**\n\t * The tokens are stored in a binary format. There is an element for each line,\n\t * so `tokens[index]` contains all tokens on line `startLineNumber + index`.\n\t *\n\t * On a specific line, each token occupies two array indices. For token i:\n\t *  - at offset 2*i => endOffset\n\t *  - at offset 2*i + 1 => metadata\n\t *\n\t */\n\tprivate _tokens: (Uint32Array | ArrayBuffer | null)[];\n\n\t/**\n\t * (Inclusive) start line number for these tokens.\n\t */\n\tpublic get startLineNumber(): number {\n\t\treturn this._startLineNumber;\n\t}\n\n\t/**\n\t * (Inclusive) end line number for these tokens.\n\t */\n\tpublic get endLineNumber(): number {\n\t\treturn this._startLineNumber + this._tokens.length - 1;\n\t}\n\n\tconstructor(startLineNumber: number, tokens: Uint32Array[]) {\n\t\tthis._startLineNumber = startLineNumber;\n\t\tthis._tokens = tokens;\n\t}\n\n\tgetLineRange(): LineRange {\n\t\treturn new LineRange(this._startLineNumber, this._startLineNumber + this._tokens.length);\n\t}\n\n\t/**\n\t * @see {@link _tokens}\n\t */\n\tpublic getLineTokens(lineNumber: number): Uint32Array | ArrayBuffer | null {\n\t\treturn this._tokens[lineNumber - this._startLineNumber];\n\t}\n\n\tpublic appendLineTokens(lineTokens: Uint32Array): void {\n\t\tthis._tokens.push(lineTokens);\n\t}\n\n\tpublic serializeSize(): number {\n\t\tlet result = 0;\n\t\tresult += 4; // 4 bytes for the start line number\n\t\tresult += 4; // 4 bytes for the line count\n\t\tfor (let i = 0; i < this._tokens.length; i++) {\n\t\t\tconst lineTokens = this._tokens[i];\n\t\t\tif (!(lineTokens instanceof Uint32Array)) {\n\t\t\t\tthrow new Error(`Not supported!`);\n\t\t\t}\n\t\t\tresult += 4; // 4 bytes for the byte count\n\t\t\tresult += lineTokens.byteLength;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic serialize(destination: Uint8Array, offset: number): number {\n\t\twriteUInt32BE(destination, this._startLineNumber, offset); offset += 4;\n\t\twriteUInt32BE(destination, this._tokens.length, offset); offset += 4;\n\t\tfor (let i = 0; i < this._tokens.length; i++) {\n\t\t\tconst lineTokens = this._tokens[i];\n\t\t\tif (!(lineTokens instanceof Uint32Array)) {\n\t\t\t\tthrow new Error(`Not supported!`);\n\t\t\t}\n\t\t\twriteUInt32BE(destination, lineTokens.byteLength, offset); offset += 4;\n\t\t\tdestination.set(new Uint8Array(lineTokens.buffer), offset); offset += lineTokens.byteLength;\n\t\t}\n\t\treturn offset;\n\t}\n\n\tpublic applyEdit(range: IRange, text: string): void {\n\t\tconst [eolCount, firstLineLength] = countEOL(text);\n\t\tthis._acceptDeleteRange(range);\n\t\tthis._acceptInsertText(new Position(range.startLineNumber, range.startColumn), eolCount, firstLineLength);\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\t\tif (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn) {\n\t\t\t// Nothing to delete\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstLineIndex = range.startLineNumber - this._startLineNumber;\n\t\tconst lastLineIndex = range.endLineNumber - this._startLineNumber;\n\n\t\tif (lastLineIndex < 0) {\n\t\t\t// this deletion occurs entirely before this block, so we only need to adjust line numbers\n\t\t\tconst deletedLinesCount = lastLineIndex - firstLineIndex;\n\t\t\tthis._startLineNumber -= deletedLinesCount;\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstLineIndex >= this._tokens.length) {\n\t\t\t// this deletion occurs entirely after this block, so there is nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstLineIndex < 0 && lastLineIndex >= this._tokens.length) {\n\t\t\t// this deletion completely encompasses this block\n\t\t\tthis._startLineNumber = 0;\n\t\t\tthis._tokens = [];\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstLineIndex === lastLineIndex) {\n\t\t\t// a delete on a single line\n\t\t\tthis._tokens[firstLineIndex] = ContiguousTokensEditing.delete(this._tokens[firstLineIndex], range.startColumn - 1, range.endColumn - 1);\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstLineIndex >= 0) {\n\t\t\t// The first line survives\n\t\t\tthis._tokens[firstLineIndex] = ContiguousTokensEditing.deleteEnding(this._tokens[firstLineIndex], range.startColumn - 1);\n\n\t\t\tif (lastLineIndex < this._tokens.length) {\n\t\t\t\t// The last line survives\n\t\t\t\tconst lastLineTokens = ContiguousTokensEditing.deleteBeginning(this._tokens[lastLineIndex], range.endColumn - 1);\n\n\t\t\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\t\t\tthis._tokens[firstLineIndex] = ContiguousTokensEditing.append(this._tokens[firstLineIndex], lastLineTokens);\n\n\t\t\t\t// Delete middle lines\n\t\t\t\tthis._tokens.splice(firstLineIndex + 1, lastLineIndex - firstLineIndex);\n\t\t\t} else {\n\t\t\t\t// The last line does not survive\n\n\t\t\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\t\t\tthis._tokens[firstLineIndex] = ContiguousTokensEditing.append(this._tokens[firstLineIndex], null);\n\n\t\t\t\t// Delete lines\n\t\t\t\tthis._tokens = this._tokens.slice(0, firstLineIndex + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// The first line does not survive\n\n\t\t\tconst deletedBefore = -firstLineIndex;\n\t\t\tthis._startLineNumber -= deletedBefore;\n\n\t\t\t// Remove beginning from last line\n\t\t\tthis._tokens[lastLineIndex] = ContiguousTokensEditing.deleteBeginning(this._tokens[lastLineIndex], range.endColumn - 1);\n\n\t\t\t// Delete lines\n\t\t\tthis._tokens = this._tokens.slice(lastLineIndex);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: Position, eolCount: number, firstLineLength: number): void {\n\n\t\tif (eolCount === 0 && firstLineLength === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\n\t\tconst lineIndex = position.lineNumber - this._startLineNumber;\n\n\t\tif (lineIndex < 0) {\n\t\t\t// this insertion occurs before this block, so we only need to adjust line numbers\n\t\t\tthis._startLineNumber += eolCount;\n\t\t\treturn;\n\t\t}\n\n\t\tif (lineIndex >= this._tokens.length) {\n\t\t\t// this insertion occurs after this block, so there is nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (eolCount === 0) {\n\t\t\t// Inserting text on one line\n\t\t\tthis._tokens[lineIndex] = ContiguousTokensEditing.insert(this._tokens[lineIndex], position.column - 1, firstLineLength);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tokens[lineIndex] = ContiguousTokensEditing.deleteEnding(this._tokens[lineIndex], position.column - 1);\n\t\tthis._tokens[lineIndex] = ContiguousTokensEditing.insert(this._tokens[lineIndex], position.column - 1, firstLineLength);\n\n\t\tthis._insertLines(position.lineNumber, eolCount);\n\t}\n\n\tprivate _insertLines(insertIndex: number, insertCount: number): void {\n\t\tif (insertCount === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst lineTokens: (Uint32Array | ArrayBuffer | null)[] = [];\n\t\tfor (let i = 0; i < insertCount; i++) {\n\t\t\tlineTokens[i] = null;\n\t\t}\n\t\tthis._tokens = arrays.arrayInsert(this._tokens, insertIndex, lineTokens);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { readUInt32BE, writeUInt32BE } from '../../../base/common/buffer.js';\nimport { ContiguousMultilineTokens } from './contiguousMultilineTokens.js';\n\nexport class ContiguousMultilineTokensBuilder {\n\n\tpublic static deserialize(buff: Uint8Array): ContiguousMultilineTokens[] {\n\t\tlet offset = 0;\n\t\tconst count = readUInt32BE(buff, offset); offset += 4;\n\t\tconst result: ContiguousMultilineTokens[] = [];\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\toffset = ContiguousMultilineTokens.deserialize(buff, offset, result);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate readonly _tokens: ContiguousMultilineTokens[];\n\n\tconstructor() {\n\t\tthis._tokens = [];\n\t}\n\n\tpublic add(lineNumber: number, lineTokens: Uint32Array): void {\n\t\tif (this._tokens.length > 0) {\n\t\t\tconst last = this._tokens[this._tokens.length - 1];\n\t\t\tif (last.endLineNumber + 1 === lineNumber) {\n\t\t\t\t// append\n\t\t\t\tlast.appendLineTokens(lineTokens);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis._tokens.push(new ContiguousMultilineTokens(lineNumber, [lineTokens]));\n\t}\n\n\tpublic finalize(): ContiguousMultilineTokens[] {\n\t\treturn this._tokens;\n\t}\n\n\tpublic serialize(): Uint8Array {\n\t\tconst size = this._serializeSize();\n\t\tconst result = new Uint8Array(size);\n\t\tthis._serialize(result);\n\t\treturn result;\n\t}\n\n\tprivate _serializeSize(): number {\n\t\tlet result = 0;\n\t\tresult += 4; // 4 bytes for the count\n\t\tfor (let i = 0; i < this._tokens.length; i++) {\n\t\t\tresult += this._tokens[i].serializeSize();\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _serialize(destination: Uint8Array): void {\n\t\tlet offset = 0;\n\t\twriteUInt32BE(destination, this._tokens.length, offset); offset += 4;\n\t\tfor (let i = 0; i < this._tokens.length; i++) {\n\t\t\toffset = this._tokens[i].serialize(destination, offset);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IdleDeadline, runWhenGlobalIdle } from '../../../base/common/async.js';\nimport { BugIndicatingError, onUnexpectedError } from '../../../base/common/errors.js';\nimport { setTimeout0 } from '../../../base/common/platform.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { countEOL } from '../core/misc/eolCounter.js';\nimport { LineRange } from '../core/ranges/lineRange.js';\nimport { OffsetRange } from '../core/ranges/offsetRange.js';\nimport { Position } from '../core/position.js';\nimport { StandardTokenType } from '../encodedTokenAttributes.js';\nimport { EncodedTokenizationResult, IBackgroundTokenizationStore, IBackgroundTokenizer, ILanguageIdCodec, IState, ITokenizationSupport } from '../languages.js';\nimport { nullTokenizeEncoded } from '../languages/nullTokenize.js';\nimport { ITextModel } from '../model.js';\nimport { FixedArray } from './fixedArray.js';\nimport { IModelContentChange } from './mirrorTextModel.js';\nimport { ContiguousMultilineTokensBuilder } from '../tokens/contiguousMultilineTokensBuilder.js';\nimport { LineTokens } from '../tokens/lineTokens.js';\n\nconst enum Constants {\n\tCHEAP_TOKENIZATION_LENGTH_LIMIT = 2048\n}\n\nexport class TokenizerWithStateStore<TState extends IState = IState> {\n\tprivate readonly initialState;\n\n\tpublic readonly store: TrackingTokenizationStateStore<TState>;\n\n\tconstructor(\n\t\tlineCount: number,\n\t\tpublic readonly tokenizationSupport: ITokenizationSupport\n\t) {\n\t\tthis.initialState = this.tokenizationSupport.getInitialState() as TState;\n\t\tthis.store = new TrackingTokenizationStateStore<TState>(lineCount);\n\t}\n\n\tpublic getStartState(lineNumber: number): TState | null {\n\t\treturn this.store.getStartState(lineNumber, this.initialState);\n\t}\n\n\tpublic getFirstInvalidLine(): { lineNumber: number; startState: TState } | null {\n\t\treturn this.store.getFirstInvalidLine(this.initialState);\n\t}\n}\n\nexport class TokenizerWithStateStoreAndTextModel<TState extends IState = IState> extends TokenizerWithStateStore<TState> {\n\tconstructor(\n\t\tlineCount: number,\n\t\ttokenizationSupport: ITokenizationSupport,\n\t\tpublic readonly _textModel: ITextModel,\n\t\tpublic readonly _languageIdCodec: ILanguageIdCodec\n\t) {\n\t\tsuper(lineCount, tokenizationSupport);\n\t}\n\n\tpublic updateTokensUntilLine(builder: ContiguousMultilineTokensBuilder, lineNumber: number): void {\n\t\tconst languageId = this._textModel.getLanguageId();\n\n\t\twhile (true) {\n\t\t\tconst lineToTokenize = this.getFirstInvalidLine();\n\t\t\tif (!lineToTokenize || lineToTokenize.lineNumber > lineNumber) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst text = this._textModel.getLineContent(lineToTokenize.lineNumber);\n\n\t\t\tconst r = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, text, true, lineToTokenize.startState);\n\t\t\tbuilder.add(lineToTokenize.lineNumber, r.tokens);\n\t\t\tthis.store.setEndState(lineToTokenize.lineNumber, r.endState as TState);\n\t\t}\n\t}\n\n\t/** assumes state is up to date */\n\tpublic getTokenTypeIfInsertingCharacter(position: Position, character: string): StandardTokenType {\n\t\t// TODO@hediet: use tokenizeLineWithEdit\n\t\tconst lineStartState = this.getStartState(position.lineNumber);\n\t\tif (!lineStartState) {\n\t\t\treturn StandardTokenType.Other;\n\t\t}\n\n\t\tconst languageId = this._textModel.getLanguageId();\n\t\tconst lineContent = this._textModel.getLineContent(position.lineNumber);\n\n\t\t// Create the text as if `character` was inserted\n\t\tconst text = (\n\t\t\tlineContent.substring(0, position.column - 1)\n\t\t\t+ character\n\t\t\t+ lineContent.substring(position.column - 1)\n\t\t);\n\n\t\tconst r = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, text, true, lineStartState);\n\t\tconst lineTokens = new LineTokens(r.tokens, text, this._languageIdCodec);\n\t\tif (lineTokens.getCount() === 0) {\n\t\t\treturn StandardTokenType.Other;\n\t\t}\n\n\t\tconst tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n\t\treturn lineTokens.getStandardTokenType(tokenIndex);\n\t}\n\n\t/** assumes state is up to date */\n\tpublic tokenizeLinesAt(lineNumber: number, lines: string[]): LineTokens[] | null {\n\t\tconst lineStartState: IState | null = this.getStartState(lineNumber);\n\t\tif (!lineStartState) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst languageId = this._textModel.getLanguageId();\n\t\tconst result: LineTokens[] = [];\n\n\t\tlet state = lineStartState;\n\t\tfor (const line of lines) {\n\t\t\tconst r = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, line, true, state);\n\t\t\tresult.push(new LineTokens(r.tokens, line, this._languageIdCodec));\n\t\t\tstate = r.endState;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic hasAccurateTokensForLine(lineNumber: number): boolean {\n\t\tconst firstInvalidLineNumber = this.store.getFirstInvalidEndStateLineNumberOrMax();\n\t\treturn (lineNumber < firstInvalidLineNumber);\n\t}\n\n\tpublic isCheapToTokenize(lineNumber: number): boolean {\n\t\tconst firstInvalidLineNumber = this.store.getFirstInvalidEndStateLineNumberOrMax();\n\t\tif (lineNumber < firstInvalidLineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (lineNumber === firstInvalidLineNumber\n\t\t\t&& this._textModel.getLineLength(lineNumber) < Constants.CHEAP_TOKENIZATION_LENGTH_LIMIT) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * The result is not cached.\n\t */\n\tpublic tokenizeHeuristically(builder: ContiguousMultilineTokensBuilder, startLineNumber: number, endLineNumber: number): { heuristicTokens: boolean } {\n\t\tif (endLineNumber <= this.store.getFirstInvalidEndStateLineNumberOrMax()) {\n\t\t\t// nothing to do\n\t\t\treturn { heuristicTokens: false };\n\t\t}\n\n\t\tif (startLineNumber <= this.store.getFirstInvalidEndStateLineNumberOrMax()) {\n\t\t\t// tokenization has reached the viewport start...\n\t\t\tthis.updateTokensUntilLine(builder, endLineNumber);\n\t\t\treturn { heuristicTokens: false };\n\t\t}\n\n\t\tlet state = this.guessStartState(startLineNumber);\n\t\tconst languageId = this._textModel.getLanguageId();\n\n\t\tfor (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n\t\t\tconst text = this._textModel.getLineContent(lineNumber);\n\t\t\tconst r = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, text, true, state);\n\t\t\tbuilder.add(lineNumber, r.tokens);\n\t\t\tstate = r.endState;\n\t\t}\n\n\t\treturn { heuristicTokens: true };\n\t}\n\n\tprivate guessStartState(lineNumber: number): IState {\n\t\tlet { likelyRelevantLines, initialState } = findLikelyRelevantLines(this._textModel, lineNumber, this);\n\n\t\tif (!initialState) {\n\t\t\tinitialState = this.tokenizationSupport.getInitialState();\n\t\t}\n\n\t\tconst languageId = this._textModel.getLanguageId();\n\t\tlet state = initialState;\n\t\tfor (const line of likelyRelevantLines) {\n\t\t\tconst r = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, line, false, state);\n\t\t\tstate = r.endState;\n\t\t}\n\t\treturn state;\n\t}\n}\n\nexport function findLikelyRelevantLines(model: ITextModel, lineNumber: number, store?: TokenizerWithStateStore): { likelyRelevantLines: string[]; initialState?: IState } {\n\tlet nonWhitespaceColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n\tconst likelyRelevantLines: string[] = [];\n\tlet initialState: IState | null | undefined = null;\n\tfor (let i = lineNumber - 1; nonWhitespaceColumn > 1 && i >= 1; i--) {\n\t\tconst newNonWhitespaceIndex = model.getLineFirstNonWhitespaceColumn(i);\n\t\t// Ignore lines full of whitespace\n\t\tif (newNonWhitespaceIndex === 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (newNonWhitespaceIndex < nonWhitespaceColumn) {\n\t\t\tlikelyRelevantLines.push(model.getLineContent(i));\n\t\t\tnonWhitespaceColumn = newNonWhitespaceIndex;\n\t\t\tinitialState = store?.getStartState(i);\n\t\t\tif (initialState) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tlikelyRelevantLines.reverse();\n\treturn { likelyRelevantLines, initialState: initialState ?? undefined };\n}\n\n/**\n * **Invariant:**\n * If the text model is retokenized from line 1 to {@link getFirstInvalidEndStateLineNumber}() - 1,\n * then the recomputed end state for line l will be equal to {@link getEndState}(l).\n */\nexport class TrackingTokenizationStateStore<TState extends IState> {\n\tprivate readonly _tokenizationStateStore = new TokenizationStateStore<TState>();\n\tprivate readonly _invalidEndStatesLineNumbers = new RangePriorityQueueImpl();\n\n\tconstructor(private lineCount: number) {\n\t\tthis._invalidEndStatesLineNumbers.addRange(new OffsetRange(1, lineCount + 1));\n\t}\n\n\tpublic getEndState(lineNumber: number): TState | null {\n\t\treturn this._tokenizationStateStore.getEndState(lineNumber);\n\t}\n\n\t/**\n\t * @returns if the end state has changed.\n\t */\n\tpublic setEndState(lineNumber: number, state: TState): boolean {\n\t\tif (!state) {\n\t\t\tthrow new BugIndicatingError('Cannot set null/undefined state');\n\t\t}\n\n\t\tthis._invalidEndStatesLineNumbers.delete(lineNumber);\n\t\tconst r = this._tokenizationStateStore.setEndState(lineNumber, state);\n\t\tif (r && lineNumber < this.lineCount) {\n\t\t\t// because the state changed, we cannot trust the next state anymore and have to invalidate it.\n\t\t\tthis._invalidEndStatesLineNumbers.addRange(new OffsetRange(lineNumber + 1, lineNumber + 2));\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tpublic acceptChange(range: LineRange, newLineCount: number): void {\n\t\tthis.lineCount += newLineCount - range.length;\n\t\tthis._tokenizationStateStore.acceptChange(range, newLineCount);\n\t\tthis._invalidEndStatesLineNumbers.addRangeAndResize(new OffsetRange(range.startLineNumber, range.endLineNumberExclusive), newLineCount);\n\t}\n\n\tpublic acceptChanges(changes: IModelContentChange[]) {\n\t\tfor (const c of changes) {\n\t\t\tconst [eolCount] = countEOL(c.text);\n\t\t\tthis.acceptChange(new LineRange(c.range.startLineNumber, c.range.endLineNumber + 1), eolCount + 1);\n\t\t}\n\t}\n\n\tpublic invalidateEndStateRange(range: LineRange): void {\n\t\tthis._invalidEndStatesLineNumbers.addRange(new OffsetRange(range.startLineNumber, range.endLineNumberExclusive));\n\t}\n\n\tpublic getFirstInvalidEndStateLineNumber(): number | null { return this._invalidEndStatesLineNumbers.min; }\n\n\tpublic getFirstInvalidEndStateLineNumberOrMax(): number {\n\t\treturn this.getFirstInvalidEndStateLineNumber() || Number.MAX_SAFE_INTEGER;\n\t}\n\n\tpublic allStatesValid(): boolean { return this._invalidEndStatesLineNumbers.min === null; }\n\n\tpublic getStartState(lineNumber: number, initialState: TState): TState | null {\n\t\tif (lineNumber === 1) { return initialState; }\n\t\treturn this.getEndState(lineNumber - 1);\n\t}\n\n\tpublic getFirstInvalidLine(initialState: TState): { lineNumber: number; startState: TState } | null {\n\t\tconst lineNumber = this.getFirstInvalidEndStateLineNumber();\n\t\tif (lineNumber === null) {\n\t\t\treturn null;\n\t\t}\n\t\tconst startState = this.getStartState(lineNumber, initialState);\n\t\tif (!startState) {\n\t\t\tthrow new BugIndicatingError('Start state must be defined');\n\t\t}\n\n\t\treturn { lineNumber, startState };\n\t}\n}\n\nexport class TokenizationStateStore<TState extends IState> {\n\tprivate readonly _lineEndStates = new FixedArray<TState | null>(null);\n\n\tpublic getEndState(lineNumber: number): TState | null {\n\t\treturn this._lineEndStates.get(lineNumber);\n\t}\n\n\tpublic setEndState(lineNumber: number, state: TState): boolean {\n\t\tconst oldState = this._lineEndStates.get(lineNumber);\n\t\tif (oldState && oldState.equals(state)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._lineEndStates.set(lineNumber, state);\n\t\treturn true;\n\t}\n\n\tpublic acceptChange(range: LineRange, newLineCount: number): void {\n\t\tlet length = range.length;\n\t\tif (newLineCount > 0 && length > 0) {\n\t\t\t// Keep the last state, even though it is unrelated.\n\t\t\t// But if the new state happens to agree with this last state, then we know we can stop tokenizing.\n\t\t\tlength--;\n\t\t\tnewLineCount--;\n\t\t}\n\n\t\tthis._lineEndStates.replace(range.startLineNumber, length, newLineCount);\n\t}\n\n\tpublic acceptChanges(changes: IModelContentChange[]) {\n\t\tfor (const c of changes) {\n\t\t\tconst [eolCount] = countEOL(c.text);\n\t\t\tthis.acceptChange(new LineRange(c.range.startLineNumber, c.range.endLineNumber + 1), eolCount + 1);\n\t\t}\n\t}\n}\n\ninterface RangePriorityQueue {\n\tget min(): number | null;\n\tremoveMin(): number | null;\n\n\taddRange(range: OffsetRange): void;\n\n\taddRangeAndResize(range: OffsetRange, newLength: number): void;\n}\n\nexport class RangePriorityQueueImpl implements RangePriorityQueue {\n\tprivate readonly _ranges: OffsetRange[] = [];\n\n\tpublic getRanges(): OffsetRange[] {\n\t\treturn this._ranges;\n\t}\n\n\tpublic get min(): number | null {\n\t\tif (this._ranges.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._ranges[0].start;\n\t}\n\n\tpublic removeMin(): number | null {\n\t\tif (this._ranges.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tconst range = this._ranges[0];\n\t\tif (range.start + 1 === range.endExclusive) {\n\t\t\tthis._ranges.shift();\n\t\t} else {\n\t\t\tthis._ranges[0] = new OffsetRange(range.start + 1, range.endExclusive);\n\t\t}\n\t\treturn range.start;\n\t}\n\n\tpublic delete(value: number): void {\n\t\tconst idx = this._ranges.findIndex(r => r.contains(value));\n\t\tif (idx !== -1) {\n\t\t\tconst range = this._ranges[idx];\n\t\t\tif (range.start === value) {\n\t\t\t\tif (range.endExclusive === value + 1) {\n\t\t\t\t\tthis._ranges.splice(idx, 1);\n\t\t\t\t} else {\n\t\t\t\t\tthis._ranges[idx] = new OffsetRange(value + 1, range.endExclusive);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (range.endExclusive === value + 1) {\n\t\t\t\t\tthis._ranges[idx] = new OffsetRange(range.start, value);\n\t\t\t\t} else {\n\t\t\t\t\tthis._ranges.splice(idx, 1, new OffsetRange(range.start, value), new OffsetRange(value + 1, range.endExclusive));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic addRange(range: OffsetRange): void {\n\t\tOffsetRange.addRange(range, this._ranges);\n\t}\n\n\tpublic addRangeAndResize(range: OffsetRange, newLength: number): void {\n\t\tlet idxFirstMightBeIntersecting = 0;\n\t\twhile (!(idxFirstMightBeIntersecting >= this._ranges.length || range.start <= this._ranges[idxFirstMightBeIntersecting].endExclusive)) {\n\t\t\tidxFirstMightBeIntersecting++;\n\t\t}\n\t\tlet idxFirstIsAfter = idxFirstMightBeIntersecting;\n\t\twhile (!(idxFirstIsAfter >= this._ranges.length || range.endExclusive < this._ranges[idxFirstIsAfter].start)) {\n\t\t\tidxFirstIsAfter++;\n\t\t}\n\t\tconst delta = newLength - range.length;\n\n\t\tfor (let i = idxFirstIsAfter; i < this._ranges.length; i++) {\n\t\t\tthis._ranges[i] = this._ranges[i].delta(delta);\n\t\t}\n\n\t\tif (idxFirstMightBeIntersecting === idxFirstIsAfter) {\n\t\t\tconst newRange = new OffsetRange(range.start, range.start + newLength);\n\t\t\tif (!newRange.isEmpty) {\n\t\t\t\tthis._ranges.splice(idxFirstMightBeIntersecting, 0, newRange);\n\t\t\t}\n\t\t} else {\n\t\t\tconst start = Math.min(range.start, this._ranges[idxFirstMightBeIntersecting].start);\n\t\t\tconst endEx = Math.max(range.endExclusive, this._ranges[idxFirstIsAfter - 1].endExclusive);\n\n\t\t\tconst newRange = new OffsetRange(start, endEx + delta);\n\t\t\tif (!newRange.isEmpty) {\n\t\t\t\tthis._ranges.splice(idxFirstMightBeIntersecting, idxFirstIsAfter - idxFirstMightBeIntersecting, newRange);\n\t\t\t} else {\n\t\t\t\tthis._ranges.splice(idxFirstMightBeIntersecting, idxFirstIsAfter - idxFirstMightBeIntersecting);\n\t\t\t}\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn this._ranges.map(r => r.toString()).join(' + ');\n\t}\n}\n\n\nfunction safeTokenize(languageIdCodec: ILanguageIdCodec, languageId: string, tokenizationSupport: ITokenizationSupport | null, text: string, hasEOL: boolean, state: IState): EncodedTokenizationResult {\n\tlet r: EncodedTokenizationResult | null = null;\n\n\tif (tokenizationSupport) {\n\t\ttry {\n\t\t\tr = tokenizationSupport.tokenizeEncoded(text, hasEOL, state.clone());\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t}\n\t}\n\n\tif (!r) {\n\t\tr = nullTokenizeEncoded(languageIdCodec.encodeLanguageId(languageId), state);\n\t}\n\n\tLineTokens.convertToEndOffset(r.tokens, text.length);\n\treturn r;\n}\n\nexport class DefaultBackgroundTokenizer implements IBackgroundTokenizer {\n\tprivate _isDisposed = false;\n\n\tconstructor(\n\t\tprivate readonly _tokenizerWithStateStore: TokenizerWithStateStoreAndTextModel,\n\t\tprivate readonly _backgroundTokenStore: IBackgroundTokenizationStore,\n\t) {\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t}\n\n\tpublic handleChanges(): void {\n\t\tthis._beginBackgroundTokenization();\n\t}\n\n\tprivate _isScheduled = false;\n\tprivate _beginBackgroundTokenization(): void {\n\t\tif (this._isScheduled || !this._tokenizerWithStateStore._textModel.isAttachedToEditor() || !this._hasLinesToTokenize()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isScheduled = true;\n\t\trunWhenGlobalIdle((deadline) => {\n\t\t\tthis._isScheduled = false;\n\n\t\t\tthis._backgroundTokenizeWithDeadline(deadline);\n\t\t});\n\t}\n\n\t/**\n\t * Tokenize until the deadline occurs, but try to yield every 1-2ms.\n\t */\n\tprivate _backgroundTokenizeWithDeadline(deadline: IdleDeadline): void {\n\t\t// Read the time remaining from the `deadline` immediately because it is unclear\n\t\t// if the `deadline` object will be valid after execution leaves this function.\n\t\tconst endTime = Date.now() + deadline.timeRemaining();\n\n\t\tconst execute = () => {\n\t\t\tif (this._isDisposed || !this._tokenizerWithStateStore._textModel.isAttachedToEditor() || !this._hasLinesToTokenize()) {\n\t\t\t\t// disposed in the meantime or detached or finished\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._backgroundTokenizeForAtLeast1ms();\n\n\t\t\tif (Date.now() < endTime) {\n\t\t\t\t// There is still time before reaching the deadline, so yield to the browser and then\n\t\t\t\t// continue execution\n\t\t\t\tsetTimeout0(execute);\n\t\t\t} else {\n\t\t\t\t// The deadline has been reached, so schedule a new idle callback if necessary\n\t\t\t\tthis._beginBackgroundTokenization();\n\t\t\t}\n\t\t};\n\t\texecute();\n\t}\n\n\t/**\n\t * Tokenize for at least 1ms.\n\t */\n\tprivate _backgroundTokenizeForAtLeast1ms(): void {\n\t\tconst lineCount = this._tokenizerWithStateStore._textModel.getLineCount();\n\t\tconst builder = new ContiguousMultilineTokensBuilder();\n\t\tconst sw = StopWatch.create(false);\n\n\t\tdo {\n\t\t\tif (sw.elapsed() > 1) {\n\t\t\t\t// the comparison is intentionally > 1 and not >= 1 to ensure that\n\t\t\t\t// a full millisecond has elapsed, given how microseconds are rounded\n\t\t\t\t// to milliseconds\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst tokenizedLineNumber = this._tokenizeOneInvalidLine(builder);\n\n\t\t\tif (tokenizedLineNumber >= lineCount) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (this._hasLinesToTokenize());\n\n\t\tthis._backgroundTokenStore.setTokens(builder.finalize());\n\t\tthis.checkFinished();\n\t}\n\n\tprivate _hasLinesToTokenize(): boolean {\n\t\tif (!this._tokenizerWithStateStore) {\n\t\t\treturn false;\n\t\t}\n\t\treturn !this._tokenizerWithStateStore.store.allStatesValid();\n\t}\n\n\tprivate _tokenizeOneInvalidLine(builder: ContiguousMultilineTokensBuilder): number {\n\t\tconst firstInvalidLine = this._tokenizerWithStateStore?.getFirstInvalidLine();\n\t\tif (!firstInvalidLine) {\n\t\t\treturn this._tokenizerWithStateStore._textModel.getLineCount() + 1;\n\t\t}\n\t\tthis._tokenizerWithStateStore.updateTokensUntilLine(builder, firstInvalidLine.lineNumber);\n\t\treturn firstInvalidLine.lineNumber;\n\t}\n\n\tpublic checkFinished(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._tokenizerWithStateStore.store.allStatesValid()) {\n\t\t\tthis._backgroundTokenStore.backgroundTokenizationFinished();\n\t\t}\n\t}\n\n\tpublic requestTokens(startLineNumber: number, endLineNumberExclusive: number): void {\n\t\tthis._tokenizerWithStateStore.store.invalidateEndStateRange(new LineRange(startLineNumber, endLineNumberExclusive));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { StopWatch } from '../../../../../base/common/stopwatch.js';\nimport { LanguageId, TokenMetadata } from '../../../../../editor/common/encodedTokenAttributes.js';\nimport { EncodedTokenizationResult, IBackgroundTokenizationStore, IBackgroundTokenizer, IState, ITokenizationSupport, TokenizationResult } from '../../../../../editor/common/languages.js';\nimport { ITextModel } from '../../../../../editor/common/model.js';\nimport type { IGrammar, StateStack } from 'vscode-textmate';\n\nexport class TextMateTokenizationSupport extends Disposable implements ITokenizationSupport {\n\tprivate readonly _seenLanguages: boolean[] = [];\n\tprivate readonly _onDidEncounterLanguage: Emitter<LanguageId> = this._register(new Emitter<LanguageId>());\n\tpublic get onDidEncounterLanguage(): Event<LanguageId> { return this._onDidEncounterLanguage.event; }\n\n\tconstructor(\n\t\tprivate readonly _grammar: IGrammar,\n\t\tprivate readonly _initialState: StateStack,\n\t\tprivate readonly _containsEmbeddedLanguages: boolean,\n\t\tprivate readonly _createBackgroundTokenizer: ((textModel: ITextModel, tokenStore: IBackgroundTokenizationStore) => IBackgroundTokenizer | undefined) | undefined,\n\t\tprivate readonly _backgroundTokenizerShouldOnlyVerifyTokens: () => boolean,\n\t\tprivate readonly _reportTokenizationTime: (timeMs: number, lineLength: number, isRandomSample: boolean) => void,\n\t\tprivate readonly _reportSlowTokenization: boolean,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic get backgroundTokenizerShouldOnlyVerifyTokens(): boolean | undefined {\n\t\treturn this._backgroundTokenizerShouldOnlyVerifyTokens();\n\t}\n\n\tpublic getInitialState(): IState {\n\t\treturn this._initialState;\n\t}\n\n\tpublic tokenize(line: string, hasEOL: boolean, state: IState): TokenizationResult {\n\t\tthrow new Error('Not supported!');\n\t}\n\n\tpublic createBackgroundTokenizer(textModel: ITextModel, store: IBackgroundTokenizationStore): IBackgroundTokenizer | undefined {\n\t\tif (this._createBackgroundTokenizer) {\n\t\t\treturn this._createBackgroundTokenizer(textModel, store);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic tokenizeEncoded(line: string, hasEOL: boolean, state: StateStack): EncodedTokenizationResult {\n\t\tconst isRandomSample = Math.random() * 10_000 < 1;\n\t\tconst shouldMeasure = this._reportSlowTokenization || isRandomSample;\n\t\tconst sw = shouldMeasure ? new StopWatch(true) : undefined;\n\t\tconst textMateResult = this._grammar.tokenizeLine2(line, state, 500);\n\t\tif (shouldMeasure) {\n\t\t\tconst timeMS = sw!.elapsed();\n\t\t\tif (isRandomSample || timeMS > 32) {\n\t\t\t\tthis._reportTokenizationTime(timeMS, line.length, isRandomSample);\n\t\t\t}\n\t\t}\n\n\t\tif (textMateResult.stoppedEarly) {\n\t\t\tconsole.warn(`Time limit reached when tokenizing line: ${line.substring(0, 100)}`);\n\t\t\t// return the state at the beginning of the line\n\t\t\treturn new EncodedTokenizationResult(textMateResult.tokens, state);\n\t\t}\n\n\t\tif (this._containsEmbeddedLanguages) {\n\t\t\tconst seenLanguages = this._seenLanguages;\n\t\t\tconst tokens = textMateResult.tokens;\n\n\t\t\t// Must check if any of the embedded languages was hit\n\t\t\tfor (let i = 0, len = (tokens.length >>> 1); i < len; i++) {\n\t\t\t\tconst metadata = tokens[(i << 1) + 1];\n\t\t\t\tconst languageId = TokenMetadata.getLanguageId(metadata);\n\n\t\t\t\tif (!seenLanguages[languageId]) {\n\t\t\t\t\tseenLanguages[languageId] = true;\n\t\t\t\t\tthis._onDidEncounterLanguage.fire(languageId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet endState: StateStack;\n\t\t// try to save an object if possible\n\t\tif (state.equals(textMateResult.ruleStack)) {\n\t\t\tendState = state;\n\t\t} else {\n\t\t\tendState = textMateResult.ruleStack;\n\t\t}\n\n\t\treturn new EncodedTokenizationResult(textMateResult.tokens, endState);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LanguageId } from '../../../../../editor/common/encodedTokenAttributes.js';\nimport { EncodedTokenizationResult, IBackgroundTokenizationStore, IBackgroundTokenizer, IState, ITokenizationSupport, TokenizationResult } from '../../../../../editor/common/languages.js';\nimport { nullTokenizeEncoded } from '../../../../../editor/common/languages/nullTokenize.js';\nimport { ITextModel } from '../../../../../editor/common/model.js';\nimport { Disposable, IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { IObservable, keepObserved } from '../../../../../base/common/observable.js';\n\nexport class TokenizationSupportWithLineLimit extends Disposable implements ITokenizationSupport {\n\tget backgroundTokenizerShouldOnlyVerifyTokens(): boolean | undefined {\n\t\treturn this._actual.backgroundTokenizerShouldOnlyVerifyTokens;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _encodedLanguageId: LanguageId,\n\t\tprivate readonly _actual: ITokenizationSupport,\n\t\tdisposable: IDisposable,\n\t\tprivate readonly _maxTokenizationLineLength: IObservable<number>,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(keepObserved(this._maxTokenizationLineLength));\n\t\tthis._register(disposable);\n\t}\n\n\tgetInitialState(): IState {\n\t\treturn this._actual.getInitialState();\n\t}\n\n\ttokenize(line: string, hasEOL: boolean, state: IState): TokenizationResult {\n\t\tthrow new Error('Not supported!');\n\t}\n\n\ttokenizeEncoded(line: string, hasEOL: boolean, state: IState): EncodedTokenizationResult {\n\t\t// Do not attempt to tokenize if a line is too long\n\t\tif (line.length >= this._maxTokenizationLineLength.get()) {\n\t\t\treturn nullTokenizeEncoded(this._encodedLanguageId, state);\n\t\t}\n\n\t\treturn this._actual.tokenizeEncoded(line, hasEOL, state);\n\t}\n\n\tcreateBackgroundTokenizer(textModel: ITextModel, store: IBackgroundTokenizationStore): IBackgroundTokenizer | undefined {\n\t\tif (this._actual.createBackgroundTokenizer) {\n\t\t\treturn this._actual.createBackgroundTokenizer(textModel, store);\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { importAMDNodeModule } from '../../../../../../amdX.js';\nimport { RunOnceScheduler } from '../../../../../../base/common/async.js';\nimport { observableValue } from '../../../../../../base/common/observable.js';\nimport { setTimeout0 } from '../../../../../../base/common/platform.js';\nimport { URI } from '../../../../../../base/common/uri.js';\nimport { LineRange } from '../../../../../../editor/common/core/ranges/lineRange.js';\nimport { LanguageId } from '../../../../../../editor/common/encodedTokenAttributes.js';\nimport { IModelChangedEvent, MirrorTextModel } from '../../../../../../editor/common/model/mirrorTextModel.js';\nimport { TokenizerWithStateStore } from '../../../../../../editor/common/model/textModelTokens.js';\nimport { ContiguousMultilineTokensBuilder } from '../../../../../../editor/common/tokens/contiguousMultilineTokensBuilder.js';\nimport { LineTokens } from '../../../../../../editor/common/tokens/lineTokens.js';\nimport { TextMateTokenizationSupport } from '../../tokenizationSupport/textMateTokenizationSupport.js';\nimport { TokenizationSupportWithLineLimit } from '../../tokenizationSupport/tokenizationSupportWithLineLimit.js';\nimport type { StackDiff, StateStack, diffStateStacksRefEq } from 'vscode-textmate';\nimport { ICreateGrammarResult } from '../../../common/TMGrammarFactory.js';\nimport { StateDeltas } from './textMateTokenizationWorker.worker.js';\nimport { Disposable } from '../../../../../../base/common/lifecycle.js';\n\nexport interface TextMateModelTokenizerHost {\n\tgetOrCreateGrammar(languageId: string, encodedLanguageId: LanguageId): Promise<ICreateGrammarResult | null>;\n\tsetTokensAndStates(versionId: number, tokens: Uint8Array, stateDeltas: StateDeltas[]): void;\n\treportTokenizationTime(timeMs: number, languageId: string, sourceExtensionId: string | undefined, lineLength: number, isRandomSample: boolean): void;\n}\n\nexport class TextMateWorkerTokenizer extends MirrorTextModel {\n\tprivate _tokenizerWithStateStore: TokenizerWithStateStore<StateStack> | null = null;\n\tprivate _isDisposed: boolean = false;\n\tprivate readonly _maxTokenizationLineLength = observableValue(this, -1);\n\tprivate _diffStateStacksRefEqFn?: typeof diffStateStacksRefEq;\n\tprivate readonly _tokenizeDebouncer = new RunOnceScheduler(() => this._tokenize(), 10);\n\n\tconstructor(\n\t\turi: URI,\n\t\tlines: string[],\n\t\teol: string,\n\t\tversionId: number,\n\t\tprivate readonly _host: TextMateModelTokenizerHost,\n\t\tprivate _languageId: string,\n\t\tprivate _encodedLanguageId: LanguageId,\n\t\tmaxTokenizationLineLength: number,\n\t) {\n\t\tsuper(uri, lines, eol, versionId);\n\t\tthis._maxTokenizationLineLength.set(maxTokenizationLineLength, undefined);\n\t\tthis._resetTokenization();\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n\n\tpublic onLanguageId(languageId: string, encodedLanguageId: LanguageId): void {\n\t\tthis._languageId = languageId;\n\t\tthis._encodedLanguageId = encodedLanguageId;\n\t\tthis._resetTokenization();\n\t}\n\n\toverride onEvents(e: IModelChangedEvent): void {\n\t\tsuper.onEvents(e);\n\n\t\tthis._tokenizerWithStateStore?.store.acceptChanges(e.changes);\n\t\tthis._tokenizeDebouncer.schedule();\n\t}\n\n\tpublic acceptMaxTokenizationLineLength(maxTokenizationLineLength: number): void {\n\t\tthis._maxTokenizationLineLength.set(maxTokenizationLineLength, undefined);\n\t}\n\n\tpublic retokenize(startLineNumber: number, endLineNumberExclusive: number) {\n\t\tif (this._tokenizerWithStateStore) {\n\t\t\tthis._tokenizerWithStateStore.store.invalidateEndStateRange(new LineRange(startLineNumber, endLineNumberExclusive));\n\t\t\tthis._tokenizeDebouncer.schedule();\n\t\t}\n\t}\n\n\tprivate async _resetTokenization() {\n\t\tthis._tokenizerWithStateStore = null;\n\n\t\tconst languageId = this._languageId;\n\t\tconst encodedLanguageId = this._encodedLanguageId;\n\n\t\tconst r = await this._host.getOrCreateGrammar(languageId, encodedLanguageId);\n\n\t\tif (this._isDisposed || languageId !== this._languageId || encodedLanguageId !== this._encodedLanguageId || !r) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (r.grammar) {\n\t\t\tconst tokenizationSupport = new TokenizationSupportWithLineLimit(\n\t\t\t\tthis._encodedLanguageId,\n\t\t\t\tnew TextMateTokenizationSupport(r.grammar, r.initialState, false, undefined, () => false,\n\t\t\t\t\t(timeMs, lineLength, isRandomSample) => {\n\t\t\t\t\t\tthis._host.reportTokenizationTime(timeMs, languageId, r.sourceExtensionId, lineLength, isRandomSample);\n\t\t\t\t\t},\n\t\t\t\t\tfalse\n\t\t\t\t),\n\t\t\t\tDisposable.None,\n\t\t\t\tthis._maxTokenizationLineLength\n\t\t\t);\n\t\t\tthis._tokenizerWithStateStore = new TokenizerWithStateStore(this._lines.length, tokenizationSupport);\n\t\t} else {\n\t\t\tthis._tokenizerWithStateStore = null;\n\t\t}\n\t\tthis._tokenize();\n\t}\n\n\tprivate async _tokenize(): Promise<void> {\n\t\tif (this._isDisposed || !this._tokenizerWithStateStore) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._diffStateStacksRefEqFn) {\n\t\t\tconst { diffStateStacksRefEq } = await importAMDNodeModule<typeof import('vscode-textmate')>('vscode-textmate', 'release/main.js');\n\t\t\tthis._diffStateStacksRefEqFn = diffStateStacksRefEq;\n\t\t}\n\n\t\tconst startTime = new Date().getTime();\n\n\t\twhile (true) {\n\t\t\tlet tokenizedLines = 0;\n\t\t\tconst tokenBuilder = new ContiguousMultilineTokensBuilder();\n\t\t\tconst stateDeltaBuilder = new StateDeltaBuilder();\n\n\t\t\twhile (true) {\n\t\t\t\tconst lineToTokenize = this._tokenizerWithStateStore.getFirstInvalidLine();\n\t\t\t\tif (lineToTokenize === null || tokenizedLines > 200) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\ttokenizedLines++;\n\n\t\t\t\tconst text = this._lines[lineToTokenize.lineNumber - 1];\n\t\t\t\tconst r = this._tokenizerWithStateStore.tokenizationSupport.tokenizeEncoded(text, true, lineToTokenize.startState);\n\t\t\t\tif (this._tokenizerWithStateStore.store.setEndState(lineToTokenize.lineNumber, r.endState as StateStack)) {\n\t\t\t\t\tconst delta = this._diffStateStacksRefEqFn(lineToTokenize.startState, r.endState as StateStack);\n\t\t\t\t\tstateDeltaBuilder.setState(lineToTokenize.lineNumber, delta);\n\t\t\t\t} else {\n\t\t\t\t\tstateDeltaBuilder.setState(lineToTokenize.lineNumber, null);\n\t\t\t\t}\n\n\t\t\t\tLineTokens.convertToEndOffset(r.tokens, text.length);\n\t\t\t\ttokenBuilder.add(lineToTokenize.lineNumber, r.tokens);\n\n\t\t\t\tconst deltaMs = new Date().getTime() - startTime;\n\t\t\t\tif (deltaMs > 20) {\n\t\t\t\t\t// yield to check for changes\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tokenizedLines === 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst stateDeltas = stateDeltaBuilder.getStateDeltas();\n\t\t\tthis._host.setTokensAndStates(\n\t\t\t\tthis._versionId,\n\t\t\t\ttokenBuilder.serialize(),\n\t\t\t\tstateDeltas\n\t\t\t);\n\n\t\t\tconst deltaMs = new Date().getTime() - startTime;\n\t\t\tif (deltaMs > 20) {\n\t\t\t\t// yield to check for changes\n\t\t\t\tsetTimeout0(() => this._tokenize());\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass StateDeltaBuilder {\n\tprivate _lastStartLineNumber: number = -1;\n\tprivate _stateDeltas: StateDeltas[] = [];\n\n\tpublic setState(lineNumber: number, stackDiff: StackDiff | null): void {\n\t\tif (lineNumber === this._lastStartLineNumber + 1) {\n\t\t\tthis._stateDeltas[this._stateDeltas.length - 1].stateDeltas.push(stackDiff);\n\t\t} else {\n\t\t\tthis._stateDeltas.push({ startLineNumber: lineNumber, stateDeltas: [stackDiff] });\n\t\t}\n\t\tthis._lastStartLineNumber = lineNumber;\n\t}\n\n\tpublic getStateDeltas(): StateDeltas[] {\n\t\treturn this._stateDeltas;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { UriComponents } from '../../../../../../base/common/uri.js';\nimport { IWebWorkerServer, IWebWorkerClient } from '../../../../../../base/common/worker/webWorker.js';\nimport { StateDeltas } from './textMateTokenizationWorker.worker.js';\n\nexport abstract class TextMateWorkerHost {\n\tpublic static CHANNEL_NAME = 'textMateWorkerHost';\n\tpublic static getChannel(workerServer: IWebWorkerServer): TextMateWorkerHost {\n\t\treturn workerServer.getChannel<TextMateWorkerHost>(TextMateWorkerHost.CHANNEL_NAME);\n\t}\n\tpublic static setChannel(workerClient: IWebWorkerClient<any>, obj: TextMateWorkerHost): void {\n\t\tworkerClient.setChannel<TextMateWorkerHost>(TextMateWorkerHost.CHANNEL_NAME, obj);\n\t}\n\n\tabstract $readFile(_resource: UriComponents): Promise<string>;\n\tabstract $setTokensAndStates(controllerId: number, versionId: number, tokens: Uint8Array, lineEndStateDeltas: StateDeltas[]): Promise<void>;\n\tabstract $reportTokenizationTime(timeMs: number, languageId: string, sourceExtensionId: string | undefined, lineLength: number, isRandomSample: boolean): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from '../../../../../../base/common/uri.js';\nimport { LanguageId } from '../../../../../../editor/common/encodedTokenAttributes.js';\nimport { IModelChangedEvent } from '../../../../../../editor/common/model/mirrorTextModel.js';\nimport { ICreateGrammarResult, TMGrammarFactory } from '../../../common/TMGrammarFactory.js';\nimport { IValidEmbeddedLanguagesMap, IValidGrammarDefinition, IValidTokenTypeMap } from '../../../common/TMScopeRegistry.js';\nimport type { IOnigLib, IRawTheme, StackDiff } from 'vscode-textmate';\nimport { TextMateWorkerTokenizer } from './textMateWorkerTokenizer.js';\nimport { importAMDNodeModule } from '../../../../../../amdX.js';\nimport { IWebWorkerServerRequestHandler, IWebWorkerServer } from '../../../../../../base/common/worker/webWorker.js';\nimport { TextMateWorkerHost } from './textMateWorkerHost.js';\n\nexport function create(workerServer: IWebWorkerServer): TextMateTokenizationWorker {\n\treturn new TextMateTokenizationWorker(workerServer);\n}\n\nexport interface ICreateData {\n\tgrammarDefinitions: IValidGrammarDefinitionDTO[];\n\tonigurumaWASMUri: string;\n}\n\nexport interface IValidGrammarDefinitionDTO {\n\tlocation: UriComponents;\n\tlanguage?: string;\n\tscopeName: string;\n\tembeddedLanguages: IValidEmbeddedLanguagesMap;\n\ttokenTypes: IValidTokenTypeMap;\n\tinjectTo?: string[];\n\tbalancedBracketSelectors: string[];\n\tunbalancedBracketSelectors: string[];\n\tsourceExtensionId?: string;\n}\n\nexport interface StateDeltas {\n\tstartLineNumber: number;\n\t// null means the state for that line did not change\n\tstateDeltas: (StackDiff | null)[];\n}\n\nexport class TextMateTokenizationWorker implements IWebWorkerServerRequestHandler {\n\t_requestHandlerBrand: any;\n\n\tprivate readonly _host: TextMateWorkerHost;\n\tprivate readonly _models = new Map</* controllerId */ number, TextMateWorkerTokenizer>();\n\tprivate readonly _grammarCache: Promise<ICreateGrammarResult>[] = [];\n\tprivate _grammarFactory: Promise<TMGrammarFactory | null> = Promise.resolve(null);\n\n\tconstructor(workerServer: IWebWorkerServer) {\n\t\tthis._host = TextMateWorkerHost.getChannel(workerServer);\n\t}\n\n\tpublic async $init(_createData: ICreateData): Promise<void> {\n\t\tconst grammarDefinitions = _createData.grammarDefinitions.map<IValidGrammarDefinition>((def) => {\n\t\t\treturn {\n\t\t\t\tlocation: URI.revive(def.location),\n\t\t\t\tlanguage: def.language,\n\t\t\t\tscopeName: def.scopeName,\n\t\t\t\tembeddedLanguages: def.embeddedLanguages,\n\t\t\t\ttokenTypes: def.tokenTypes,\n\t\t\t\tinjectTo: def.injectTo,\n\t\t\t\tbalancedBracketSelectors: def.balancedBracketSelectors,\n\t\t\t\tunbalancedBracketSelectors: def.unbalancedBracketSelectors,\n\t\t\t\tsourceExtensionId: def.sourceExtensionId,\n\t\t\t};\n\t\t});\n\t\tthis._grammarFactory = this._loadTMGrammarFactory(grammarDefinitions, _createData.onigurumaWASMUri);\n\t}\n\n\tprivate async _loadTMGrammarFactory(grammarDefinitions: IValidGrammarDefinition[], onigurumaWASMUri: string): Promise<TMGrammarFactory> {\n\t\tconst vscodeTextmate = await importAMDNodeModule<typeof import('vscode-textmate')>('vscode-textmate', 'release/main.js');\n\t\tconst vscodeOniguruma = await importAMDNodeModule<typeof import('vscode-oniguruma')>('vscode-oniguruma', 'release/main.js');\n\t\tconst response = await fetch(onigurumaWASMUri);\n\n\t\t// Using the response directly only works if the server sets the MIME type 'application/wasm'.\n\t\t// Otherwise, a TypeError is thrown when using the streaming compiler.\n\t\t// We therefore use the non-streaming compiler :(.\n\t\tconst bytes = await response.arrayBuffer();\n\t\tawait vscodeOniguruma.loadWASM(bytes);\n\n\t\tconst onigLib: Promise<IOnigLib> = Promise.resolve({\n\t\t\tcreateOnigScanner: (sources) => vscodeOniguruma.createOnigScanner(sources),\n\t\t\tcreateOnigString: (str) => vscodeOniguruma.createOnigString(str)\n\t\t});\n\n\t\treturn new TMGrammarFactory({\n\t\t\tlogTrace: (msg: string) => {/* console.log(msg) */ },\n\t\t\tlogError: (msg: string, err: any) => console.error(msg, err),\n\t\t\treadFile: (resource: URI) => this._host.$readFile(resource)\n\t\t}, grammarDefinitions, vscodeTextmate, onigLib);\n\t}\n\n\t// These methods are called by the renderer\n\n\tpublic $acceptNewModel(data: IRawModelData): void {\n\t\tconst uri = URI.revive(data.uri);\n\t\tconst that = this;\n\t\tthis._models.set(data.controllerId, new TextMateWorkerTokenizer(uri, data.lines, data.EOL, data.versionId, {\n\t\t\tasync getOrCreateGrammar(languageId: string, encodedLanguageId: LanguageId): Promise<ICreateGrammarResult | null> {\n\t\t\t\tconst grammarFactory = await that._grammarFactory;\n\t\t\t\tif (!grammarFactory) {\n\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t}\n\t\t\t\tif (!that._grammarCache[encodedLanguageId]) {\n\t\t\t\t\tthat._grammarCache[encodedLanguageId] = grammarFactory.createGrammar(languageId, encodedLanguageId);\n\t\t\t\t}\n\t\t\t\treturn that._grammarCache[encodedLanguageId];\n\t\t\t},\n\t\t\tsetTokensAndStates(versionId: number, tokens: Uint8Array, stateDeltas: StateDeltas[]): void {\n\t\t\t\tthat._host.$setTokensAndStates(data.controllerId, versionId, tokens, stateDeltas);\n\t\t\t},\n\t\t\treportTokenizationTime(timeMs: number, languageId: string, sourceExtensionId: string | undefined, lineLength: number, isRandomSample: boolean): void {\n\t\t\t\tthat._host.$reportTokenizationTime(timeMs, languageId, sourceExtensionId, lineLength, isRandomSample);\n\t\t\t},\n\t\t}, data.languageId, data.encodedLanguageId, data.maxTokenizationLineLength));\n\t}\n\n\tpublic $acceptModelChanged(controllerId: number, e: IModelChangedEvent): void {\n\t\tthis._models.get(controllerId)!.onEvents(e);\n\t}\n\n\tpublic $retokenize(controllerId: number, startLineNumber: number, endLineNumberExclusive: number): void {\n\t\tthis._models.get(controllerId)!.retokenize(startLineNumber, endLineNumberExclusive);\n\t}\n\n\tpublic $acceptModelLanguageChanged(controllerId: number, newLanguageId: string, newEncodedLanguageId: LanguageId): void {\n\t\tthis._models.get(controllerId)!.onLanguageId(newLanguageId, newEncodedLanguageId);\n\t}\n\n\tpublic $acceptRemovedModel(controllerId: number): void {\n\t\tconst model = this._models.get(controllerId);\n\t\tif (model) {\n\t\t\tmodel.dispose();\n\t\t\tthis._models.delete(controllerId);\n\t\t}\n\t}\n\n\tpublic async $acceptTheme(theme: IRawTheme, colorMap: string[]): Promise<void> {\n\t\tconst grammarFactory = await this._grammarFactory;\n\t\tgrammarFactory?.setTheme(theme, colorMap);\n\t}\n\n\tpublic $acceptMaxTokenizationLineLength(controllerId: number, value: number): void {\n\t\tthis._models.get(controllerId)!.acceptMaxTokenizationLineLength(value);\n\t}\n}\n\nexport interface IRawModelData {\n\turi: UriComponents;\n\tversionId: number;\n\tlines: string[];\n\tEOL: string;\n\tlanguageId: string;\n\tencodedLanguageId: LanguageId;\n\tmaxTokenizationLineLength: number;\n\tcontrollerId: number;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from '../charCode.js';\nimport { onUnexpectedError, transformErrorForSerialization } from '../errors.js';\nimport { Emitter, Event } from '../event.js';\nimport { Disposable, IDisposable } from '../lifecycle.js';\nimport { isWeb } from '../platform.js';\nimport * as strings from '../strings.js';\n\nconst DEFAULT_CHANNEL = 'default';\nconst INITIALIZE = '$initialize';\n\nexport interface IWebWorker extends IDisposable {\n\tgetId(): number;\n\tonMessage: Event<Message>;\n\tonError: Event<any>;\n\tpostMessage(message: Message, transfer: ArrayBuffer[]): void;\n}\n\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err: any): void {\n\tif (!isWeb) {\n\t\t// running tests\n\t\treturn;\n\t}\n\tif (!webWorkerWarningLogged) {\n\t\twebWorkerWarningLogged = true;\n\t\tconsole.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n\t}\n\tconsole.warn(err.message);\n}\n\nconst enum MessageType {\n\tRequest,\n\tReply,\n\tSubscribeEvent,\n\tEvent,\n\tUnsubscribeEvent\n}\nclass RequestMessage {\n\tpublic readonly type = MessageType.Request;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly req: string,\n\t\tpublic readonly channel: string,\n\t\tpublic readonly method: string,\n\t\tpublic readonly args: any[]\n\t) { }\n}\nclass ReplyMessage {\n\tpublic readonly type = MessageType.Reply;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly seq: string,\n\t\tpublic readonly res: any,\n\t\tpublic readonly err: any\n\t) { }\n}\nclass SubscribeEventMessage {\n\tpublic readonly type = MessageType.SubscribeEvent;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly req: string,\n\t\tpublic readonly channel: string,\n\t\tpublic readonly eventName: string,\n\t\tpublic readonly arg: any\n\t) { }\n}\nclass EventMessage {\n\tpublic readonly type = MessageType.Event;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly req: string,\n\t\tpublic readonly event: any\n\t) { }\n}\nclass UnsubscribeEventMessage {\n\tpublic readonly type = MessageType.UnsubscribeEvent;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly req: string\n\t) { }\n}\nexport type Message = RequestMessage | ReplyMessage | SubscribeEventMessage | EventMessage | UnsubscribeEventMessage;\n\ninterface IMessageReply {\n\tresolve: (value?: any) => void;\n\treject: (error?: any) => void;\n}\n\ninterface IMessageHandler {\n\tsendMessage(msg: any, transfer?: ArrayBuffer[]): void;\n\thandleMessage(channel: string, method: string, args: any[]): Promise<any>;\n\thandleEvent(channel: string, eventName: string, arg: any): Event<any>;\n}\n\nclass WebWorkerProtocol {\n\n\tprivate _workerId: number;\n\tprivate _lastSentReq: number;\n\tprivate _pendingReplies: { [req: string]: IMessageReply };\n\tprivate _pendingEmitters: Map<string, Emitter<any>>;\n\tprivate _pendingEvents: Map<string, IDisposable>;\n\tprivate _handler: IMessageHandler;\n\n\tconstructor(handler: IMessageHandler) {\n\t\tthis._workerId = -1;\n\t\tthis._handler = handler;\n\t\tthis._lastSentReq = 0;\n\t\tthis._pendingReplies = Object.create(null);\n\t\tthis._pendingEmitters = new Map<string, Emitter<any>>();\n\t\tthis._pendingEvents = new Map<string, IDisposable>();\n\t}\n\n\tpublic setWorkerId(workerId: number): void {\n\t\tthis._workerId = workerId;\n\t}\n\n\tpublic sendMessage(channel: string, method: string, args: any[]): Promise<any> {\n\t\tconst req = String(++this._lastSentReq);\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis._pendingReplies[req] = {\n\t\t\t\tresolve: resolve,\n\t\t\t\treject: reject\n\t\t\t};\n\t\t\tthis._send(new RequestMessage(this._workerId, req, channel, method, args));\n\t\t});\n\t}\n\n\tpublic listen(channel: string, eventName: string, arg: any): Event<any> {\n\t\tlet req: string | null = null;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonWillAddFirstListener: () => {\n\t\t\t\treq = String(++this._lastSentReq);\n\t\t\t\tthis._pendingEmitters.set(req, emitter);\n\t\t\t\tthis._send(new SubscribeEventMessage(this._workerId, req, channel, eventName, arg));\n\t\t\t},\n\t\t\tonDidRemoveLastListener: () => {\n\t\t\t\tthis._pendingEmitters.delete(req!);\n\t\t\t\tthis._send(new UnsubscribeEventMessage(this._workerId, req!));\n\t\t\t\treq = null;\n\t\t\t}\n\t\t});\n\t\treturn emitter.event;\n\t}\n\n\tpublic handleMessage(message: Message): void {\n\t\tif (!message || !message.vsWorker) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n\t\t\treturn;\n\t\t}\n\t\tthis._handleMessage(message);\n\t}\n\n\tpublic createProxyToRemoteChannel<T extends object>(channel: string, sendMessageBarrier?: () => Promise<void>): T {\n\t\tconst handler = {\n\t\t\tget: (target: any, name: PropertyKey) => {\n\t\t\t\tif (typeof name === 'string' && !target[name]) {\n\t\t\t\t\tif (propertyIsDynamicEvent(name)) { // onDynamic...\n\t\t\t\t\t\ttarget[name] = (arg: any): Event<any> => {\n\t\t\t\t\t\t\treturn this.listen(channel, name, arg);\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (propertyIsEvent(name)) { // on...\n\t\t\t\t\t\ttarget[name] = this.listen(channel, name, undefined);\n\t\t\t\t\t} else if (name.charCodeAt(0) === CharCode.DollarSign) { // $...\n\t\t\t\t\t\ttarget[name] = async (...myArgs: any[]) => {\n\t\t\t\t\t\t\tawait sendMessageBarrier?.();\n\t\t\t\t\t\t\treturn this.sendMessage(channel, name, myArgs);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn target[name];\n\t\t\t}\n\t\t};\n\t\treturn new Proxy(Object.create(null), handler);\n\t}\n\n\tprivate _handleMessage(msg: Message): void {\n\t\tswitch (msg.type) {\n\t\t\tcase MessageType.Reply:\n\t\t\t\treturn this._handleReplyMessage(msg);\n\t\t\tcase MessageType.Request:\n\t\t\t\treturn this._handleRequestMessage(msg);\n\t\t\tcase MessageType.SubscribeEvent:\n\t\t\t\treturn this._handleSubscribeEventMessage(msg);\n\t\t\tcase MessageType.Event:\n\t\t\t\treturn this._handleEventMessage(msg);\n\t\t\tcase MessageType.UnsubscribeEvent:\n\t\t\t\treturn this._handleUnsubscribeEventMessage(msg);\n\t\t}\n\t}\n\n\tprivate _handleReplyMessage(replyMessage: ReplyMessage): void {\n\t\tif (!this._pendingReplies[replyMessage.seq]) {\n\t\t\tconsole.warn('Got reply to unknown seq');\n\t\t\treturn;\n\t\t}\n\n\t\tconst reply = this._pendingReplies[replyMessage.seq];\n\t\tdelete this._pendingReplies[replyMessage.seq];\n\n\t\tif (replyMessage.err) {\n\t\t\tlet err = replyMessage.err;\n\t\t\tif (replyMessage.err.$isError) {\n\t\t\t\terr = new Error();\n\t\t\t\terr.name = replyMessage.err.name;\n\t\t\t\terr.message = replyMessage.err.message;\n\t\t\t\terr.stack = replyMessage.err.stack;\n\t\t\t}\n\t\t\treply.reject(err);\n\t\t\treturn;\n\t\t}\n\n\t\treply.resolve(replyMessage.res);\n\t}\n\n\tprivate _handleRequestMessage(requestMessage: RequestMessage): void {\n\t\tconst req = requestMessage.req;\n\t\tconst result = this._handler.handleMessage(requestMessage.channel, requestMessage.method, requestMessage.args);\n\t\tresult.then((r) => {\n\t\t\tthis._send(new ReplyMessage(this._workerId, req, r, undefined));\n\t\t}, (e) => {\n\t\t\tif (e.detail instanceof Error) {\n\t\t\t\t// Loading errors have a detail property that points to the actual error\n\t\t\t\te.detail = transformErrorForSerialization(e.detail);\n\t\t\t}\n\t\t\tthis._send(new ReplyMessage(this._workerId, req, undefined, transformErrorForSerialization(e)));\n\t\t});\n\t}\n\n\tprivate _handleSubscribeEventMessage(msg: SubscribeEventMessage): void {\n\t\tconst req = msg.req;\n\t\tconst disposable = this._handler.handleEvent(msg.channel, msg.eventName, msg.arg)((event) => {\n\t\t\tthis._send(new EventMessage(this._workerId, req, event));\n\t\t});\n\t\tthis._pendingEvents.set(req, disposable);\n\t}\n\n\tprivate _handleEventMessage(msg: EventMessage): void {\n\t\tif (!this._pendingEmitters.has(msg.req)) {\n\t\t\tconsole.warn('Got event for unknown req');\n\t\t\treturn;\n\t\t}\n\t\tthis._pendingEmitters.get(msg.req)!.fire(msg.event);\n\t}\n\n\tprivate _handleUnsubscribeEventMessage(msg: UnsubscribeEventMessage): void {\n\t\tif (!this._pendingEvents.has(msg.req)) {\n\t\t\tconsole.warn('Got unsubscribe for unknown req');\n\t\t\treturn;\n\t\t}\n\t\tthis._pendingEvents.get(msg.req)!.dispose();\n\t\tthis._pendingEvents.delete(msg.req);\n\t}\n\n\tprivate _send(msg: Message): void {\n\t\tconst transfer: ArrayBuffer[] = [];\n\t\tif (msg.type === MessageType.Request) {\n\t\t\tfor (let i = 0; i < msg.args.length; i++) {\n\t\t\t\tif (msg.args[i] instanceof ArrayBuffer) {\n\t\t\t\t\ttransfer.push(msg.args[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (msg.type === MessageType.Reply) {\n\t\t\tif (msg.res instanceof ArrayBuffer) {\n\t\t\t\ttransfer.push(msg.res);\n\t\t\t}\n\t\t}\n\t\tthis._handler.sendMessage(msg, transfer);\n\t}\n}\n\ntype ProxiedMethodName = (`$${string}` | `on${string}`);\n\nexport type Proxied<T> = { [K in keyof T]: T[K] extends (...args: infer A) => infer R\n\t? (\n\t\tK extends ProxiedMethodName\n\t\t? (...args: A) => Promise<Awaited<R>>\n\t\t: never\n\t)\n\t: never\n};\n\nexport interface IWebWorkerClient<TProxy> {\n\tproxy: Proxied<TProxy>;\n\tdispose(): void;\n\tsetChannel<T extends object>(channel: string, handler: T): void;\n\tgetChannel<T extends object>(channel: string): Proxied<T>;\n}\n\nexport interface IWebWorkerServer {\n\tsetChannel<T extends object>(channel: string, handler: T): void;\n\tgetChannel<T extends object>(channel: string): Proxied<T>;\n}\n\n/**\n * Main thread side\n */\nexport class WebWorkerClient<W extends object> extends Disposable implements IWebWorkerClient<W> {\n\n\tprivate readonly _worker: IWebWorker;\n\tprivate readonly _onModuleLoaded: Promise<void>;\n\tprivate readonly _protocol: WebWorkerProtocol;\n\tpublic readonly proxy: Proxied<W>;\n\tprivate readonly _localChannels: Map<string, object> = new Map();\n\tprivate readonly _remoteChannels: Map<string, object> = new Map();\n\n\tconstructor(\n\t\tworker: IWebWorker\n\t) {\n\t\tsuper();\n\n\t\tthis._worker = this._register(worker);\n\t\tthis._register(this._worker.onMessage((msg) => {\n\t\t\tthis._protocol.handleMessage(msg);\n\t\t}));\n\t\tthis._register(this._worker.onError((err) => {\n\t\t\tlogOnceWebWorkerWarning(err);\n\t\t\tonUnexpectedError(err);\n\t\t}));\n\n\t\tthis._protocol = new WebWorkerProtocol({\n\t\t\tsendMessage: (msg: any, transfer: ArrayBuffer[]): void => {\n\t\t\t\tthis._worker.postMessage(msg, transfer);\n\t\t\t},\n\t\t\thandleMessage: (channel: string, method: string, args: any[]): Promise<any> => {\n\t\t\t\treturn this._handleMessage(channel, method, args);\n\t\t\t},\n\t\t\thandleEvent: (channel: string, eventName: string, arg: any): Event<any> => {\n\t\t\t\treturn this._handleEvent(channel, eventName, arg);\n\t\t\t}\n\t\t});\n\t\tthis._protocol.setWorkerId(this._worker.getId());\n\n\t\t// Send initialize message\n\t\tthis._onModuleLoaded = this._protocol.sendMessage(DEFAULT_CHANNEL, INITIALIZE, [\n\t\t\tthis._worker.getId(),\n\t\t]);\n\n\t\tthis.proxy = this._protocol.createProxyToRemoteChannel(DEFAULT_CHANNEL, async () => { await this._onModuleLoaded; });\n\t\tthis._onModuleLoaded.catch((e) => {\n\t\t\tthis._onError('Worker failed to load ', e);\n\t\t});\n\t}\n\n\tprivate _handleMessage(channelName: string, method: string, args: any[]): Promise<any> {\n\t\tconst channel: object | undefined = this._localChannels.get(channelName);\n\t\tif (!channel) {\n\t\t\treturn Promise.reject(new Error(`Missing channel ${channelName} on main thread`));\n\t\t}\n\t\tif (typeof (channel as any)[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error(`Missing method ${method} on main thread channel ${channelName}`));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve((channel as any)[method].apply(channel, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\tprivate _handleEvent(channelName: string, eventName: string, arg: any): Event<any> {\n\t\tconst channel: object | undefined = this._localChannels.get(channelName);\n\t\tif (!channel) {\n\t\t\tthrow new Error(`Missing channel ${channelName} on main thread`);\n\t\t}\n\t\tif (propertyIsDynamicEvent(eventName)) {\n\t\t\tconst event = (channel as any)[eventName].call(channel, arg);\n\t\t\tif (typeof event !== 'function') {\n\t\t\t\tthrow new Error(`Missing dynamic event ${eventName} on main thread channel ${channelName}.`);\n\t\t\t}\n\t\t\treturn event;\n\t\t}\n\t\tif (propertyIsEvent(eventName)) {\n\t\t\tconst event = (channel as any)[eventName];\n\t\t\tif (typeof event !== 'function') {\n\t\t\t\tthrow new Error(`Missing event ${eventName} on main thread channel ${channelName}.`);\n\t\t\t}\n\t\t\treturn event;\n\t\t}\n\t\tthrow new Error(`Malformed event name ${eventName}`);\n\t}\n\n\tpublic setChannel<T extends object>(channel: string, handler: T): void {\n\t\tthis._localChannels.set(channel, handler);\n\t}\n\n\tpublic getChannel<T extends object>(channel: string): Proxied<T> {\n\t\tif (!this._remoteChannels.has(channel)) {\n\t\t\tconst inst = this._protocol.createProxyToRemoteChannel(channel, async () => { await this._onModuleLoaded; });\n\t\t\tthis._remoteChannels.set(channel, inst);\n\t\t}\n\t\treturn this._remoteChannels.get(channel) as Proxied<T>;\n\t}\n\n\tprivate _onError(message: string, error?: any): void {\n\t\tconsole.error(message);\n\t\tconsole.info(error);\n\t}\n}\n\nfunction propertyIsEvent(name: string): boolean {\n\t// Assume a property is an event if it has a form of \"onSomething\"\n\treturn name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n}\n\nfunction propertyIsDynamicEvent(name: string): boolean {\n\t// Assume a property is a dynamic event (a method that returns an event) if it has a form of \"onDynamicSomething\"\n\treturn /^onDynamic/.test(name) && strings.isUpperAsciiLetter(name.charCodeAt(9));\n}\n\nexport interface IWebWorkerServerRequestHandler {\n\t_requestHandlerBrand: any;\n\t[prop: string]: any;\n}\n\nexport interface IWebWorkerServerRequestHandlerFactory<T extends IWebWorkerServerRequestHandler> {\n\t(workerServer: IWebWorkerServer): T;\n}\n\n/**\n * Worker side\n */\nexport class WebWorkerServer<T extends IWebWorkerServerRequestHandler> implements IWebWorkerServer {\n\n\tpublic readonly requestHandler: T;\n\tprivate _protocol: WebWorkerProtocol;\n\tprivate readonly _localChannels: Map<string, object> = new Map();\n\tprivate readonly _remoteChannels: Map<string, object> = new Map();\n\n\tconstructor(postMessage: (msg: Message, transfer?: ArrayBuffer[]) => void, requestHandlerFactory: IWebWorkerServerRequestHandlerFactory<T>) {\n\t\tthis._protocol = new WebWorkerProtocol({\n\t\t\tsendMessage: (msg: any, transfer: ArrayBuffer[]): void => {\n\t\t\t\tpostMessage(msg, transfer);\n\t\t\t},\n\t\t\thandleMessage: (channel: string, method: string, args: any[]): Promise<any> => this._handleMessage(channel, method, args),\n\t\t\thandleEvent: (channel: string, eventName: string, arg: any): Event<any> => this._handleEvent(channel, eventName, arg)\n\t\t});\n\t\tthis.requestHandler = requestHandlerFactory(this);\n\t}\n\n\tpublic onmessage(msg: any): void {\n\t\tthis._protocol.handleMessage(msg);\n\t}\n\n\tprivate _handleMessage(channel: string, method: string, args: any[]): Promise<any> {\n\t\tif (channel === DEFAULT_CHANNEL && method === INITIALIZE) {\n\t\t\treturn this.initialize(<number>args[0]);\n\t\t}\n\n\t\tconst requestHandler: object | null | undefined = (channel === DEFAULT_CHANNEL ? this.requestHandler : this._localChannels.get(channel));\n\t\tif (!requestHandler) {\n\t\t\treturn Promise.reject(new Error(`Missing channel ${channel} on worker thread`));\n\t\t}\n\t\tif (typeof (requestHandler as any)[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error(`Missing method ${method} on worker thread channel ${channel}`));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve((requestHandler as any)[method].apply(requestHandler, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\tprivate _handleEvent(channel: string, eventName: string, arg: any): Event<any> {\n\t\tconst requestHandler: object | null | undefined = (channel === DEFAULT_CHANNEL ? this.requestHandler : this._localChannels.get(channel));\n\t\tif (!requestHandler) {\n\t\t\tthrow new Error(`Missing channel ${channel} on worker thread`);\n\t\t}\n\t\tif (propertyIsDynamicEvent(eventName)) {\n\t\t\tconst event = (requestHandler as any)[eventName].call(requestHandler, arg);\n\t\t\tif (typeof event !== 'function') {\n\t\t\t\tthrow new Error(`Missing dynamic event ${eventName} on request handler.`);\n\t\t\t}\n\t\t\treturn event;\n\t\t}\n\t\tif (propertyIsEvent(eventName)) {\n\t\t\tconst event = (requestHandler as any)[eventName];\n\t\t\tif (typeof event !== 'function') {\n\t\t\t\tthrow new Error(`Missing event ${eventName} on request handler.`);\n\t\t\t}\n\t\t\treturn event;\n\t\t}\n\t\tthrow new Error(`Malformed event name ${eventName}`);\n\t}\n\n\tpublic setChannel<T extends object>(channel: string, handler: T): void {\n\t\tthis._localChannels.set(channel, handler);\n\t}\n\n\tpublic getChannel<T extends object>(channel: string): Proxied<T> {\n\t\tif (!this._remoteChannels.has(channel)) {\n\t\t\tconst inst = this._protocol.createProxyToRemoteChannel(channel);\n\t\t\tthis._remoteChannels.set(channel, inst);\n\t\t}\n\t\treturn this._remoteChannels.get(channel) as Proxied<T>;\n\t}\n\n\tprivate async initialize(workerId: number): Promise<void> {\n\t\tthis._protocol.setWorkerId(workerId);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWebWorkerServerRequestHandler, IWebWorkerServerRequestHandlerFactory, WebWorkerServer } from './webWorker.js';\n\ntype MessageEvent = {\n\tdata: unknown;\n};\n\ndeclare const globalThis: {\n\tpostMessage: (message: any) => void;\n\tonmessage: (event: MessageEvent) => void;\n};\n\nlet initialized = false;\n\nexport function initialize<T extends IWebWorkerServerRequestHandler>(factory: IWebWorkerServerRequestHandlerFactory<T>) {\n\tif (initialized) {\n\t\tthrow new Error('WebWorker already initialized!');\n\t}\n\tinitialized = true;\n\n\tconst webWorkerServer = new WebWorkerServer<T>(\n\t\tmsg => globalThis.postMessage(msg),\n\t\t(workerServer) => factory(workerServer)\n\t);\n\n\tglobalThis.onmessage = (e: MessageEvent) => {\n\t\twebWorkerServer.onmessage(e.data);\n\t};\n\n\treturn webWorkerServer;\n}\n\nexport function bootstrapWebWorker(factory: IWebWorkerServerRequestHandlerFactory<any>) {\n\tglobalThis.onmessage = (_e: MessageEvent) => {\n\t\t// Ignore first message in this case and initialize if not yet initialized\n\t\tif (!initialized) {\n\t\t\tinitialize(factory);\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { create } from './textMateTokenizationWorker.worker.js';\nimport { bootstrapWebWorker } from '../../../../../../base/common/worker/webWorkerBootstrap.js';\n\nbootstrapWebWorker(create);\n"],"mappings":"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","names":["$g","$h","isPseudo","_format","message","args","result","match","rest","index","arg","localize","data","lookupMessage","fallback","$k","_isWindows","_isMacintosh","_isLinux","_isLinuxSnap","_isNative","_isWeb","_isElectron","_isIOS","_isCI","_isMobile","_locale","_language","_platformLocale","_translationsConfigFile","_userAgent","$globalThis","nodeProcess","isElectronProcess","isElectronRenderer","rawNlsConfig","nlsConfig","Platform","_platform","$m","$n","$o","$q","$s","$t","$u","$z","$A","Language","value","isDefaultVariant","isDefault","$E","$F","pending","e","i","len","candidate","lastId","callback","myId","OperatingSystem","$I","$J","$K","$L","$M","safeProcess","vscodeGlobal","sandboxProcess","$Y","$Z","$1","$2","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","CHAR_QUESTION_MARK","ErrorInvalidArgType","name","expected","actual","determiner","type","msg","validateObject","pathObject","validateString","platformIsWin32","isPathSeparator","code","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","res","lastSegmentLength","lastSlash","dots","lastSlashIndex","formatExt","ext","sep","dir","base","$3","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","rootEnd","device","isAbsolute","j","last","firstPart","tail","paths","joined","needsReplace","slashCount","firstLen","from","to","fromOrig","toOrig","fromSplit","toSplit","fromLen","toLen","length","fromStart","fromEnd","toStart","toEnd","lastCommonSep","fromCode","out","resolvedPath","offset","end","matchedSlash","suffix","start","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","posixCwd","regexp","cwd","$4","trailingSeparator","hasRoot","char","$5","$6","$7","$8","$9","$0","$$","$_","$ab","$bb","$cb","$eb","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","_strict","_schemeFix","scheme","_referenceResolution","_slash","_empty","_regexp","URI","_URI","thing","schemeOrData","authority","query","fragment","$Ec","change","Uri","percentDecode","idx","components","strict","uri","pathFragment","newPath","skipEncoding","_asFormatted","_pathSepMarker","encodeTable","encodeURIComponentFast","uriComponent","isPath","isAuthority","nativeEncodePos","pos","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","decodeURIComponentGraceful","str","_rEncodedAsHex","$Fb","array","predicate","$Gb","startIdx","endIdxEx","k","$Ib","$Kb","_$Kb","item","$fb","$Ab","listener","newUnexpectedErrorHandler","$gb","$jb","$kb","$pb","$mb","error","cause","stack","$ob","$qb","$rb","_$rb","_$Ab","err","$Bb","_$Bb","$gc","target","insertIndex","insertArr","before","after","CompareResult","isLessThan","isLessThanOrEqual","isGreaterThan","isNeitherLessOrGreaterThan","$qc","selector","comparator","a","b","$sc","$xc","_$xc","_callback","iterate","handler","cb","mapFn","first","$a","groupFn","element","key","$f","values","_a","entry","callbackfn","thisArg","ResourceMapEntry","isEntries","$Ic","_$Ic","resource","toKey","clb","_","$Jc","entriesOrKey","_b","_value","Touch","$Kc","_c","touch","state","current","map","iterator","newSize","currentSize","next","previous","$Pc","fn","$Cb","fnDidRunCallback","_this","didCall","$Wc","condition","$Yc","$4c","obj","$7c","$8c","$9c","Iterable","is","empty","single","wrap","iterableOrElement","iterable","reverse","isEmpty","some","every","find","filter","flatMap","concat","iterables","reduce","reducer","initialValue","count","slice","arr","consume","atMost","consumed","asyncToArray","asyncToArrayFlat","TRACK_DISPOSABLES","disposableTracker","$kd","_$kd","d","val","child","parent","x","disposable","cache","cacheValue","rootParentCache","v","maxReported","preComputedLeaks","uncoveredLeakingObjs","leakingObjects","info","leakingObjsSet","o","l","getStackTracePath","leaking","removePrefix","linesToRemove","lines","p","stackTraceStarts","stackTracePath","stackTraceFormattedLines","line","prevStarts","continuations","cont","set","$ld","tracker","__is_disposable_tracked__","$vd","$md","$nd","setParentOfDisposable","setParentOfDisposables","children","$qd","errors","$sd","disposables","$td","self","$ud","_$ud","Node","_Node","performanceNow","$$e","_$$e","highResolution","_enableDisposeWithListenerWarning","_enableSnapshotPotentialLeakWarning","Event","_addLeakageTraceLogic","options","origListenerDidAdd","Stacktrace","defer","event","debounce","once","thisArgs","didFire","onceIf","snapshot","forEach","each","signal","any","events","addAndReturnDisposable","merge","initial","output","emitter","$ef","store","delay","leading","flushOnListenerRemove","leakWarningThreshold","subscription","handle","numDebouncedCalls","doFire","cur","_output","accumulate","latch","equals","firstCall","shouldEmit","split","isT","buffer","flushAfterTimeout","_buffer","flush","chain","sythensize","cs","ChainableSynthesis","HaltChainable","step","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","onLastListenerRemove","fromDOMEventEmitter","toPromise","cancelRef","promise","resolve","reject","forward","runAndSubscribe","EmitterObserver","_observable","_change","fromObservable","obs","fromObservableLight","observable","didChange","observer","$af","_$af","listenerCount","elapsed","_globalLeakWarningThreshold","LeakageMonitor","_LeakageMonitor","threshold","topStack","topCount","$cf","_Stacktrace","$df","UniqueContainer","compactionThreshold","forEachListener","listeners","tuple","contained","removeMonitor","EventDeliveryQueuePrivate","adjustDeliveryQueue","n","errorHandler","dq","shortcutEvent","context","CancellationToken","isCancellationToken","MutableToken","$tf","t","$uf","arg1","arg2","LazyValueState","$wf","$Qf","$Yf","$Zf","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","$2f","$4f","diff","$5f","$6f","$7f","candidateLength","CSI_SEQUENCE","OSC_SEQUENCE","ESC_SEQUENCE","CONTROL_SEQUENCES","$rg","GraphemeBreakType","GraphemeBreakTree","_GraphemeBreakTree","getGraphemeBreakRawData","codePoint","nodeCount","nodeIndex","CodePoint","$Cg","_$Cg","locales","arrayToMap","mergeMaps","map1","map2","intersectMaps","filteredLocales","languageSpecificMap","locale","commonMap","f","$Dg","_$Dg","$Gg","$Hg","osPath","$Ig","$Jg","firstLetter","$Og","$Ng","parentCandidate","ignoreCase","sepOffset","char0","Schemas","$1g","RemoteAuthoritiesImpl","schema","delegate","product","serverBasePath","$3g","host","port","connectionToken","$2g","$5g","$6g","$8g","FileAccessImpl","_FileAccessImpl","resourcePath","uriOrModule","rootUriOrPath","modulePath","$9g","$0g","$$g","COI","coiHeaders","coiSearchParamName","getHeadersFromQuery","url","params","addSearchParam","urlOrSearch","coop","coep","$_g","$ah","uri1","uri2","ignoreFragment","$qh","$ih","dirname","normalizedPath","relativePath","fromPath","toPath","newURI","a1","a2","fsp","$rh","isRootSep","$bh","$ch","$dh","$eh","$fh","$gh","$hh","$jh","$kh","$lh","$mh","$nh","$oh","$ph","$sh","$th","DataUri","parseMetaData","dataUri","metadata","property","mime","$y0b","def","existingRegistration","scopeName","$z0b","$A0b","grammarDefinitions","vscodeTextmate","onigLib","grammarDefinition","location","content","scopeParts","injections","subScopeName","validGrammar","injectScope","injectedEmbeddedLanguages","languageId","theme","colorMap","encodedLanguageId","embeddedLanguages","injected","scope","containsEmbeddedLanguages","grammar","$Vm","_data","_hex","$iK","DefineCall","dependencies","AMDModuleImporterState","AMDModuleImporter","_AMDModuleImporter","scriptSrc","tmpModuleId","moduleResult","defineCall","exports","dependencyObjs","dependencyModules","mod","scriptElement","unbind","loadEventListener","errorEventListener","fs","vm","module","filePath","scriptSource","$jK","nodeModuleName","pathInsideNodeModule","isBuilt","nodeModulePath","$_e","$Yh","runner","$3h","$4h","safeGlobal","_targetWindow","timeout","disposed","targetWindow","DeferredOutcome","$0h","c","Promises","settled","promises","firstError","withAsyncBody","bodyFn","AsyncIterableSourceState","$ai","_$ai","items","writer","executor","onReturn","filterFn","ProducerConsumer","deferred","$ei","_$ei","$gi","$Pd","owner","debugNameSource","referenceFn","$Qd","countPerName","cachedDebugName","cached","dbgName","computeDebugName","ownerStr","formatOwner","$Sd","findKey","countPerClassName","ownerId","className","$Rd","ctor","fnSrc","$Hd","$Od","globalObservableLogger","$ue","logger","ComposedLogger","$ve","globalObservableLoggerFn","$we","$xe","loggers","newCount","autorun","derived","transaction","$ye","getDebugName","tx","$Ce","$Be","_fn","updatingObservers","DebugLocation","enabled","enable","ofCaller","Err","DebugLocationImpl","_DebugLocationImpl","parentIdx","parseLine","fileName","column","stackLine","match2","_derived","$ne","_recomputeInitiallyAndOnChange","$oe","recomputeInitiallyAndOnChange","_keepObserved","$pe","keepObserved","$qe","reader","fnOrOwner","fnOrUndefined","debugLocation","handleValue","$re","deleted","hadLogger","$De","nameOrOwner","debugNameData","$Ee","_tx","oldValue","newValue","AutorunState","$Vd","_debugNameData","_runFn","emptySet","changeSummary","delayedStore","DerivedState","$se","_computeFn","w","y","hadValue","propagateBeginUpdate","observers","r","shouldReact","wasUpToDate","shouldCallBeginUpdate","$7d","computeFn","$$d","getValue","$ae","_getValue","didRunTransaction","batchEventsGlobally","didSet","$he","$je","$ie","consoleObservableLogger","$1e","$2e","text","consoleTextToArgs","normalText","repeat","styled","$3e","updating","existingBeginUpdate","existingEndUpdate","formatKind","changes","changedObservables","transactionName","styles","firstArg","process","kind","padStr","objToCss","styleObj","styleString","propName","propValue","style","availableLen","formatArray","formatObject","$4e","_$4e","channelFactory","getHandler","notificationData","m","requestData","requests","notifications","$5e","channelId","createClient","g","queuedNotifications","curHost","channel","createChannelFactoryFromDebugChannel","curClient","h","$7e","timeoutMs","$8e","source","$9e","$0e","_$0e","affected","txs","observerQueue","processedObservers","queue","observersToUpdate","observerState","changedDependencies","autorunInfo","declarationIds","observableId","decl","instanceId","jsonValue","update","decInfo","changeInfo","formattedValue","enableLogging","$lD","_$lD","endExclusive","range","sortedRanges","other","$cD","_$cD","lineNumber","newLineNumber","newColumn","deltaLineNumber","deltaColumn","aLineNumber","bLineNumber","aColumn","bColumn","$dD","_$dD","startLineNumber","startColumn","endLineNumber","endColumn","position","otherRange","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","lineCount","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","aEndColumn","bEndColumn","$nD","_$nD","lineRanges","$oD","endLineNumberExclusive","lineRange","marginTop","marginBottom","_$oD","joinRangeStartIdx","joinRangeEndIdxExclusive","joinRange","rangeThatStartsBeforeEnd","i1","i2","lineRange1","lineRange2","r1","r2","Constants","$yf","$HF","insertValues","oldValues","oldPrefixSum","insertValuesLen","startIndex","maxCount","sum","low","high","mid","midStop","midStart","$JF","remainder","$KF","eol","versionId","eolLength","linesLength","lineStartValues","lineIndex","insertText","insertLines","newLengths","StringEOL","$cE","eolCount","firstLineLength","lastLineStart","chr","_codiconFontCharacters","$Kj","fontCharacter","$Mj","$Oj","$Pj","$bE","languageIds","support","factory","myData","TokenizationSupportFactoryData","tokenizationSupport","$pE","tokens","endState","HoverVerbosityAction","CompletionItemKind","CompletionItemKinds","byKind","toIcon","codicon","toLabel","fromString","CompletionItemTag","CompletionItemInsertTextRule","PartialAcceptTriggerKind","CompletionTriggerKind","InlineCompletionTriggerKind","InlineCompletionDisplayLocationKind","InlineCompletionEndOfLifeReasonKind","CodeActionTriggerType","DocumentPasteTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKind","$vE","SymbolTag","SymbolKinds","icon","byCompletionKind","toCompletionKind","completionKind","$yE","_$yE","NewSymbolNameTag","NewSymbolNameTriggerKind","Command","CommentThreadCollapsibleState","CommentThreadState","CommentThreadApplicability","CommentMode","CommentState","InlayHintKind","$AE","ExternalUriOpenerPriority","$iJ","$kJ","$lJ","oldLength","newLength","arrayFill","deleteIndex","deleteCount","insertCount","indexOfTable","$Qi","$Ri","destination","LanguageId","FontStyle","ColorId","StandardTokenType","MetadataConsts","$$D","fontStyle","foreground","textDecoration","$dE","_$dE","lineContent","decoder","defaultMetadata","fullText","lineTextLength","lastTokenIndex","tokenIndex","desiredIndex","endOffset","sliceFromTokenIndex","sliceTokenCount","startOffset","deltaOffset","SliceLineTokens","insertTokens","nextOriginalTokenIdx","nextInsertTokenIdx","newTokens","originalEndOffset","nextOriginalTokenEndOffset","nextInsertToken","builder","$hE","startTokenIndex","endTokenIndex","tokenCount","_SliceLineTokens","tokenEndOffset","adjustedTokenIndex","tokenStartOffset","$fE","_$fE","lineTokens","tokenInfo","$gE","lengthSum","tokenStart","tokenEndEx","deltaBefore","deltaAfter","$iE","$jE","_$jE","toChIndex","fromChIndex","$kE","tokensCount","fromTokenIndex","fromTokenStartOffset","fromTokenEndOffset","delta","dest","lastEnd","tmp","_otherTokens","myTokens","otherTokens","otherTokensCount","chIndex","textLength","$lE","_$lE","buff","view32","byteCount","firstLineIndex","lastLineIndex","deletedLinesCount","lastLineTokens","deletedBefore","$mJ","size","$nJ","$qJ","$rJ","$sJ","newLineCount","initialState","startState","oldState","idxFirstMightBeIntersecting","idxFirstIsAfter","newRange","endEx","$w0b","hasEOL","textModel","isRandomSample","shouldMeasure","sw","textMateResult","timeMS","seenLanguages","$x0b","$B0b","s","u","maxTokenizationLineLength","timeMs","lineLength","diffStateStacksRefEq","startTime","tokenizedLines","tokenBuilder","stateDeltaBuilder","StateDeltaBuilder","lineToTokenize","stateDeltas","stackDiff","$C0b","_$C0b","workerServer","workerClient","$D0b","$E0b","_createData","onigurumaWASMUri","vscodeOniguruma","bytes","sources","that","grammarFactory","sourceExtensionId","controllerId","newLanguageId","newEncodedLanguageId","model","DEFAULT_CHANNEL","INITIALIZE","MessageType","RequestMessage","vsWorker","req","method","ReplyMessage","seq","SubscribeEventMessage","EventMessage","UnsubscribeEventMessage","WebWorkerProtocol","workerId","sendMessageBarrier","propertyIsDynamicEvent","propertyIsEvent","myArgs","replyMessage","reply","requestMessage","transfer","$_0","postMessage","requestHandlerFactory","requestHandler","inst","initialized","$dab","webWorkerServer","$eab","_e"],"file":"textMateTokenizationWorker.workerMain.js"}